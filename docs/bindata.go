// Code generated by go-bindata.
// sources:
// alias.md
// autocomplete.md
// aws-credentials.md
// bindata.go
// build.md
// delete.md
// deploy.md
// docs.go
// docs.md
// dryrun.md
// env.md
// faq.md
// functions.md
// getting-started.md
// hooks.md
// ignore.md
// infra.md
// installation.md
// invoke.md
// java.md
// links.md
// list.md
// logs.md
// metrics.md
// projects.md
// rollback.md
// shim.md
// upgrade.md
// DO NOT EDIT!

package docs

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _aliasMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\xd0\xcf\x4e\xc3\x30\x0c\x06\xf0\xbb\x9f\xe2\x53\x87\x84\x84\x04\x82\xc3\x2e\xdc\x38\xf0\x06\xdc\x89\xd5\xb9\x23\x52\x13\x47\x71\x17\xb6\xb7\x27\x0d\xec\x8f\x60\x2a\xa7\xaa\xf1\xe7\x9f\x9d\xd0\xdb\x87\xc0\xf1\xe8\xd9\x1c\x7a\x0d\x81\xe3\x06\x3c\x8e\xfa\x69\x38\xe8\x0e\x93\xa2\x15\xa1\x51\xa0\x19\x41\xb3\x60\xd8\xc5\x7e\xf2\x1a\x51\x24\x5b\xfd\x5a\x8b\x61\xeb\x8b\xc4\xef\xf8\x03\xd1\x6a\x85\xd7\x3d\x87\x34\x8a\x11\xbd\x34\xa3\xba\xa7\xde\xfa\x67\xe8\x52\xd6\x4d\xf7\x4c\xe4\x9c\xa3\x1b\x70\x92\xfd\xcf\xb8\xb9\xd0\x4e\x2f\x5a\x3b\x4e\xfe\xfd\xae\xbb\x20\xea\xd8\x65\x02\xad\xe5\x37\x74\x06\x74\x38\xde\x01\xeb\x65\xed\xbe\xa0\xac\xff\xac\x65\x49\x7a\x3f\xf8\xfe\xfc\x24\x33\x62\x13\x6f\xe5\xaa\xd2\x2a\x08\x87\x63\x7c\xd1\xba\xb5\xd3\x72\x4f\x8f\xff\xc0\xf3\x7a\x35\x74\xd5\xff\x0a\x00\x00\xff\xff\xfb\xa3\x28\x7d\xe4\x01\x00\x00")

func aliasMdBytes() ([]byte, error) {
	return bindataRead(
		_aliasMd,
		"alias.md",
	)
}

func aliasMd() (*asset, error) {
	bytes, err := aliasMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "alias.md", size: 484, mode: os.FileMode(420), modTime: time.Unix(1487186966, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _autocompleteMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x4f\xdd\x4a\xc3\x30\x14\xbe\xcf\x53\x7c\x94\x81\xed\xc5\x44\x6f\x07\x03\x65\xea\x95\xb2\x31\x85\x21\x32\xd6\xd8\x9e\xae\x81\x34\x27\xe4\x07\x1d\xa3\xef\x6e\xe2\x60\xba\x8b\x36\x27\xf9\x7e\x8f\xb8\xb7\xf4\x0d\x1f\xad\x65\x17\x3c\x1a\x1e\x06\x69\x5a\xe4\xaf\x8b\xa6\x09\x8a\x0d\x8c\x1c\x08\x32\x06\x4e\xa8\xd5\x94\xdf\xae\xf1\xc6\x20\x23\x3f\x35\x21\xf4\xca\x9f\xc9\x52\xab\x70\xc0\x81\xe3\x95\xd6\x30\x44\x2d\x02\x43\xb6\xe9\xe8\x09\x1d\x6b\xcd\x5f\xca\xec\xe1\x7b\x4a\xb8\x6f\x9c\xb2\x21\x33\x92\xc0\xc1\x3a\xee\x54\x32\x64\x07\xaf\x06\xa5\xa5\x9b\x09\x51\xd7\xb5\xef\xc5\x4e\xa6\x9a\x65\x05\x1c\x05\xb0\x58\xbe\xac\xd6\x8f\xab\xe7\xf7\x79\x59\xa5\xab\xe6\x46\x6a\x34\xd1\xcd\x8b\xc9\x31\x63\xbb\xcd\x72\xfd\xf0\xfa\xf1\x3b\x2e\xf2\xbc\x1d\x8b\x33\x8f\x6d\xf0\x89\x58\x66\xc3\xff\x4b\x11\xa6\x53\x5c\xe8\xef\xb6\xb3\xdb\xb1\x2a\x2e\x03\x31\x29\xb3\x60\x4f\x06\xd3\x0d\x52\x60\xf6\x1b\x8b\x93\x38\x75\x18\x2b\xe4\x4e\x8e\x42\x74\x06\x37\x62\x14\xe2\x2f\xe0\x09\xbb\x53\x6c\xfa\xe5\xc5\xc4\x4f\x00\x00\x00\xff\xff\x08\xf9\x10\xea\x7e\x01\x00\x00")

func autocompleteMdBytes() ([]byte, error) {
	return bindataRead(
		_autocompleteMd,
		"autocomplete.md",
	)
}

func autocompleteMd() (*asset, error) {
	bytes, err := autocompleteMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "autocomplete.md", size: 382, mode: os.FileMode(420), modTime: time.Unix(1465517548, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _awsCredentialsMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x57\xdb\x6e\x1b\x37\x10\x7d\xdf\xaf\x18\x28\x05\xd2\x14\xba\x24\x7e\x29\x60\xb4\x05\x14\x45\x49\xd4\xda\xb1\x61\x27\x2e\x02\xc3\x90\xe8\x5d\x4a\x62\xc2\x25\x17\x4b\xae\x64\x25\x48\xbf\xa5\xdf\xd2\x2f\xeb\x19\x72\x57\x37\xcb\x46\x0b\x14\x35\x12\xdb\x22\x87\x73\x39\x73\xe6\xe2\xe4\xa5\x9c\xda\x52\x52\xe5\x94\x99\x51\xbf\x90\x77\xb4\xb2\x15\x19\x29\x33\xf2\x96\xa6\xaa\x74\x9e\x66\x6a\x21\x49\x79\xbe\x29\x49\xa4\xa9\xad\x8c\xa7\xb4\x94\x99\x34\x5e\x09\xed\xc8\x59\xf2\x73\xe1\xe3\xfb\x54\x18\xca\x85\x11\x33\x49\xa5\x74\x78\x92\x4a\xd7\xa5\xf7\x73\x09\x33\x82\xff\x93\xa9\xf2\x5b\x59\x92\x9d\xd2\x52\xac\x1c\xdb\xc9\xa2\x82\x36\x2d\xe7\x2a\x9d\x07\x31\x5b\x79\xad\x0c\xdc\xe0\x87\xdd\x24\x79\xf2\x84\xae\x94\x20\x69\x16\xaa\xb4\x26\x87\x69\x5a\x88\x52\x89\x5b\x2d\x5d\x92\x7c\x08\xfe\x1f\xbc\x24\x6b\xf4\xaa\x1d\xc2\xca\x2b\x44\xe3\x0a\x99\xaa\xe9\x0a\x06\x25\x4d\xad\xd6\x76\x89\xa7\xc7\x49\xd2\xa1\x49\xff\xf7\xcb\x71\x7f\x30\x18\x5e\x5e\x8e\x7f\x1b\x7e\x1c\x8f\x5e\x4d\x08\x47\xeb\x90\xf1\x53\x3a\x47\x9f\xe5\xaa\x11\xbe\x1c\x0e\x2e\x86\xef\xb7\xde\xec\x3e\x70\x12\x28\xf9\xed\x07\x17\xc3\x37\xa3\xb3\x77\x51\xaa\x94\x33\x65\x4d\x92\x8c\xa6\xc1\xb9\xb9\x00\xca\x79\xa5\xbd\x2a\xb4\x0c\x02\x45\x69\x3f\xc9\xd4\xbb\xe8\xbb\x58\x01\x2e\x28\x05\x5c\xa9\x35\x4e\x65\x80\x30\xa6\x4d\xe0\xcc\x6a\x72\x15\x43\xe7\xe8\x3a\x53\x25\x90\xb8\xf9\x7e\xee\x7d\x71\xdc\xeb\xc5\x8f\x5d\x23\x7d\xef\x19\xbf\xd6\x36\x15\x5a\x7d\x41\x26\x4c\x46\xa2\xf2\x36\x17\x5e\xe1\x48\xaf\xe0\xb0\x0f\xb8\x6c\xc0\x5b\xce\xa5\x49\x60\xff\x29\x52\xb2\xb4\xe5\x67\xb6\x67\x0d\x4c\xd6\xce\x6d\x32\xf3\x47\xaf\x2b\x96\x0e\x94\xd9\x4a\x08\xeb\x8a\xe7\xbd\x6d\xbe\xb0\xe1\xe6\xd8\x9a\xa9\x9a\xc5\x57\xeb\x38\x9b\x14\x05\xc8\xce\x2f\xce\x5e\x8f\x4e\x86\x13\x76\xdd\x4b\xad\x49\x30\xcb\x22\x51\xac\x91\x7c\x5c\xca\x29\x48\x62\x52\xd9\xa5\xb7\x76\x29\x17\xb2\x6c\x93\x8a\xa8\x82\x59\xc6\xfa\x08\xae\x38\x60\xb4\x4d\xb6\xa4\x56\x4c\x45\x8b\x94\x0b\xd2\x99\x9c\x32\xf5\x22\x69\xdc\xdc\x56\x3a\x0b\xd0\xa0\x06\x96\xca\xcf\x43\x58\x3b\xe9\x3c\x44\x3c\x70\x9e\x3d\x13\x19\xe5\x5c\x61\x00\x2d\x9a\xad\xca\x1a\x19\x27\xeb\xb0\x17\x4a\x2e\xe9\x7a\xb0\x7b\x1b\x18\x30\x38\x19\x6d\xd2\x68\x53\xc7\xde\x77\x45\x2e\xbe\x58\xd3\x4d\x6d\xde\x4b\xb5\xea\x69\xe1\xa5\xf3\xbd\xca\xc9\x72\x56\x81\x15\x7c\xd8\x49\xe7\xa2\xe8\xcc\xa4\xf7\xd0\xd6\x71\x5e\x94\x5e\x66\xdd\xb9\xcf\xf5\x33\x24\xec\x2d\xc0\x7a\xca\x59\x20\x79\x27\x72\x66\x1b\x4a\xf1\x7e\x9a\x50\x13\x93\xc9\x24\xb9\xae\x85\x6e\x12\xdc\x8f\x63\x0d\x8c\x41\xe9\xb1\xca\xe8\x67\xba\xab\xbf\xc2\x65\xe4\xfb\x96\xcc\x96\xc0\xfe\x57\xd0\xfd\xb8\x2b\x01\x90\xc6\x0b\xf0\x8d\xd1\xa2\xb5\x37\x68\x10\x45\xe5\x61\xe1\x93\x43\x15\xc5\x0c\xe2\x53\xe5\x3a\x4b\xe0\xd1\x39\x8a\x06\x6a\x72\x36\xaf\xa7\x5a\xcc\x76\x2b\xee\xd6\x22\xa1\xff\x88\xa3\xfb\xec\xe4\x24\x35\x7a\xb9\xc6\x52\x8f\x0a\x0a\xfc\x98\x04\x8a\x76\x3a\xcd\xed\x4f\x46\xe4\xf2\x97\x49\x28\x26\x70\xcc\x55\x9c\x63\xe4\x0f\x6d\x32\x0b\xbd\x11\xbc\xcb\xa5\x30\xee\x1e\x65\x41\xee\xc6\x9c\x30\xab\xc3\x0d\xae\x4d\xf3\x48\xfa\x4d\x8f\x83\xe1\x05\xa8\xb0\x26\xac\x14\x5c\x2c\x85\x2c\x51\xe9\xd6\xd4\x90\x7e\x47\x7b\x6e\xe6\x2b\x51\x14\xfc\x29\x43\x05\x14\xda\xae\xf6\x21\xe4\x82\x5f\xb3\x38\xa8\x4a\x92\x8f\x0d\x2a\x9e\x59\xbe\x8d\x09\x07\x4d\xca\x34\x67\xa1\x5b\x70\xae\x02\xeb\xe1\x9a\x93\x7a\xca\xfd\x0a\x05\xb6\x34\x8d\xe0\xba\x23\x93\x33\xaa\x28\xa4\xaf\xe1\xe1\x7f\x99\x14\xe8\x72\x0a\x75\xce\x81\x49\xe3\x2a\x0c\x98\x38\x79\xb6\x70\x03\xfb\x14\x67\x31\x34\xb4\xba\xee\x33\x35\x0d\x1d\xc2\xef\x20\x88\x92\xee\x06\x28\x02\x83\xbe\x26\x44\xad\xda\xf7\xd6\x31\xb5\x36\x68\xb4\x92\x6f\x0d\x12\x7f\xfd\xc9\x50\x8c\xfa\xa7\x74\x61\xb5\x6c\xda\x1c\xe8\xcb\x47\x25\x8e\xc2\xf8\xbb\x85\xcd\x74\xae\x90\x93\x2c\xc4\xb5\xb4\x61\xd2\xb5\x51\xe9\x22\x44\x39\x1e\x87\xee\x71\x76\x32\x1c\x8f\x0f\x26\x95\xbb\x12\x0b\x8b\x86\x26\xc4\xc3\x30\xd0\x97\x26\x9d\x8e\x12\x39\x1b\x9b\x74\xa9\xef\x62\x86\xc1\x62\x10\x20\x0e\xe0\x35\x8b\xd1\xea\x45\x06\x07\xdb\xc1\xe8\x7d\x4d\x4b\xa5\x79\x6c\x80\x17\x0e\x4f\x82\xd0\xc1\x4e\x16\x38\x70\x0e\x86\xb3\xe2\x14\x61\x6f\x7e\x47\xc2\xca\xc6\xcc\xba\x6d\x6d\xd7\x91\x72\x61\xb6\xae\x0b\xb0\xb4\x79\xac\xc2\xbd\xb3\x5f\x2f\xcf\xde\xd5\xdc\xda\xbf\x82\x4f\x5b\xb3\xbe\xb3\x43\xb0\x8c\x5a\xe8\xd6\x02\x63\xb3\x15\xbc\x3c\x55\x46\xe5\x55\x1e\xf2\x71\x6e\xb5\x4a\x57\x09\x76\x1c\x50\x8a\x19\x04\x12\x87\xa3\xe0\x34\x3b\x7a\x3d\x0a\x7e\xfa\x55\x28\xf7\x7e\x9c\xef\xa7\x61\x79\x61\x04\xd6\xbd\x77\xaf\xed\x02\x7e\x8c\xd2\x38\x82\xea\x52\x73\x21\xf8\xbc\xb6\x5e\x94\x6a\x01\x0f\x67\x38\xe6\x55\x2a\x2e\x53\xe8\xd0\x31\x41\xf8\xbd\x5e\x90\xc2\x46\x75\x22\xf2\xdb\x4c\xd0\xb4\x32\x29\x97\x94\xdb\xe7\xe4\x15\xd2\xc3\xd3\x09\x9c\x3c\x7a\xfe\xe2\xa8\xf3\xe2\x79\xe7\xc5\x8f\xad\x36\x5f\x5d\x7a\x34\x7f\xf6\x14\x97\xd7\x38\x20\xfa\x1a\xbe\xe3\xaa\x1f\x94\xad\xcf\xc3\x19\xfc\x3e\x1e\x60\x24\x79\xc9\xec\x0d\x2a\xee\xdd\x44\xd0\xf6\xef\xfa\xde\x83\xd1\xfc\xea\xf0\xfd\xb9\x70\x6e\x5f\xa7\x0e\x71\x1d\xbf\x91\xfe\x75\x1d\xda\x81\xdb\x68\xf4\x11\x81\x57\x52\xcb\x47\x05\x46\x66\x61\x3f\x3f\x26\xb0\xe5\xc0\x60\xbb\x77\x1d\x10\xfd\x50\x64\x5b\xde\xfc\x5b\xe9\xec\x50\xf8\x31\xc0\xbe\x56\xc2\x3d\xa8\xe2\xa1\x5b\x78\xfe\xd0\xd5\x89\x72\xbe\x26\x86\x7b\xb9\x3a\x18\xbd\x9d\xb9\xe3\xd7\x4a\x7b\x59\x9e\xd8\xd9\x70\x01\x96\xec\x28\x4a\xb5\xad\xb2\xa5\xf0\xe9\x9c\xed\x9c\x4a\x5f\xaa\x94\xf9\x04\xc5\x2a\x75\xad\x5a\xf0\xa6\x79\xd1\x1a\xa2\x85\xa6\x4c\xb4\x56\x9f\x5b\xf4\x5a\x55\xeb\xa2\xde\xf2\xf9\xea\x87\xf8\xee\x1b\xbe\xdf\x6c\xba\xe6\x13\xea\x67\x99\x62\x07\xd1\x93\xf2\x7b\x15\x1a\xa6\x1c\xd6\xab\xab\xf3\x41\xa8\xcc\x58\x10\x49\xf2\x7e\x67\x1e\x88\x8d\x8a\x50\xc5\x0a\xc5\xc5\x7f\x28\x6c\x0a\x6c\x5b\xc7\xff\x5c\x59\x32\x3d\x02\x53\x5d\x5a\xaa\x5b\x79\x29\x53\x6c\x71\x7e\xf5\xa6\xb4\x55\xb1\x03\xf9\x8e\x54\x75\x8b\x8d\xfc\xc1\xeb\xab\xe2\x3f\xcd\x41\x5f\x3b\x1b\xa7\x40\x18\x52\xf5\x9f\x59\xdc\x8c\x72\x81\xce\x9f\xc5\xb5\x33\xee\x2d\xc8\x8f\x9f\x34\x6b\x6f\xdc\x42\xea\x7d\x37\xe2\x09\x88\x63\xa7\x1c\xde\x21\x52\xc6\x82\x2b\x7f\x52\xf7\xd6\x36\xd2\x00\x85\xd2\x0b\xc5\xdd\xdf\xd0\x35\x06\x22\xf7\x5a\xec\xaf\xd5\x4e\x53\x3d\xb4\xd0\x46\x76\x37\x3b\x6d\x36\xeb\x2d\x8a\xb4\xd9\x5b\xff\x0e\x00\x00\xff\xff\x3e\xa4\x0a\x49\xac\x0e\x00\x00")

func awsCredentialsMdBytes() ([]byte, error) {
	return bindataRead(
		_awsCredentialsMd,
		"aws-credentials.md",
	)
}

func awsCredentialsMd() (*asset, error) {
	bytes, err := awsCredentialsMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "aws-credentials.md", size: 3756, mode: os.FileMode(420), modTime: time.Unix(1482452181, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bindataGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x98\x59\x6f\x2c\xd5\x11\xc7\x9f\x3d\x9f\xa2\xb1\x04\xb2\x23\xe3\xdb\xfb\x62\x89\x17\x2e\x44\xe2\x01\x90\x12\xf2\x14\x47\xe8\x74\xf7\x69\xd3\x30\x9e\x36\x33\xe3\x8b\x2f\x57\x7c\xf7\xd4\xaf\xaa\xda\xcb\x0d\x84\x04\x61\x69\xdc\xdb\x59\x6a\xf9\xd7\xbf\xaa\xce\xab\x57\xc9\xeb\x65\x8c\xc9\x4d\xdc\xc5\x7d\x38\xc6\x31\xe9\xdf\x26\x37\xcb\xc7\xfd\xbc\x1b\xc3\x31\x5c\x6e\x64\xc0\x61\xb9\xdf\x0f\xf1\x70\xc5\x7d\xd8\xce\xe1\x70\x79\x3b\xea\xfd\xfd\x71\x19\x96\xdb\xbb\x6d\x3c\xc6\xf5\xd5\x4f\x87\x8f\x87\x7d\x1c\xe3\xee\x38\x87\xed\x3a\x70\x5d\xec\x66\xd1\xa7\xfb\x79\x3b\xfa\x97\x31\x3e\x9b\x3c\xc6\xbb\xed\xf2\x76\x7d\x58\x86\x83\x4f\xd0\x5b\x7f\xbb\x7f\xbb\xbf\xdf\xf9\x43\xdc\xbd\xf1\xbb\x29\xfc\xb8\xde\xdd\xef\x86\xe3\xbc\xec\xd6\x09\x37\xf1\x78\x9c\x77\x37\x1f\x1f\x8e\x61\x2f\xda\xf9\xdb\xef\x96\xe5\x87\x75\xc4\x7c\xb3\x5b\xf6\xab\x08\xf3\x6e\xda\x87\xc7\x7b\x99\xb4\xdd\x06\x96\x7b\x7c\xf5\x66\xf9\x61\x1d\xfb\x7d\x78\xb3\x0e\xdd\xce\xbb\xc7\xf5\xb6\xf3\xe1\xb8\xde\x2e\x37\xeb\xdb\xdb\x78\xdc\xcf\x8f\x6a\xdc\xed\x97\xef\xe3\x70\x5c\x1f\xf7\xcb\x76\xdb\x87\xe1\x07\x7f\x3c\x7c\x37\xdf\xfa\xed\xfd\xdd\xcd\x3e\x8c\xeb\x8e\x9f\x7d\x9d\x7c\xf5\xf5\x37\xc9\xe7\x9f\x7d\xf1\xcd\x07\x9b\xcd\x9d\xcc\x08\x37\x51\xcd\xb3\xd9\xcc\xb7\x77\xcb\xfe\x98\x9c\x6d\x4e\x4e\xfb\xb7\xc7\x78\x38\x95\x1b\x9c\xb3\x8f\x87\xc3\xab\x9b\x9f\xe7\x3b\x5e\x4c\xb7\x47\x2e\xf3\x62\xff\x5f\xcd\xcb\xfd\x71\xde\xf2\xb0\xe8\x84\xbb\x70\xfc\xee\xd5\x34\x6f\x23\x37\xbc\x38\x88\xd4\xbb\x1b\xfd\x76\x9c\x6f\xe3\xe9\xe6\x7c\xb3\xc1\xc4\xab\x4b\xff\x16\xc3\x78\xc6\x4d\xf2\xcf\x7f\xb1\xed\x45\xb2\x0b\xb7\x31\xb1\x69\xe7\xc9\xd9\xfa\x36\xee\xf7\xcb\xfe\x3c\x79\xb7\x39\xb9\xf9\x59\x9f\x92\xab\x4f\x12\xa4\xba\xfc\x2a\xfe\xc4\x22\x71\x7f\xa6\x62\xf3\xfc\xe9\xfd\x34\xc9\x33\xcb\x9e\x9f\x6f\x4e\xe6\x49\x27\x7c\xf0\x49\xb2\x9b\xb7\x2c\x71\xb2\x8f\xc7\xfb\xfd\x8e\xc7\x8b\x44\x54\xba\xfc\x9c\xd5\xa7\xb3\x53\x16\x4a\x3e\xfc\xf1\x2a\xf9\xf0\xcd\xa9\x49\xa2\x7b\xc9\x1a\xbf\x6c\x36\x27\x6f\xc2\x5e\xb0\x37\x25\xb6\x8f\x6d\xb2\x39\xf9\xd6\xc4\xf9\x24\x99\x97\xcb\xd7\xcb\xdd\xdb\xb3\x8f\x64\xcc\x85\xc8\x26\xb3\x86\xed\xe7\xab\xa4\x97\xaf\xb7\xcb\x21\x9e\x89\xfa\x7f\x92\x3c\x2c\x63\xeb\xff\xc6\x42\x32\xd0\xe4\xf6\x97\x22\xd6\xe5\xa7\x88\x7e\x76\x7e\xc1\x88\x8d\x7c\x3b\xbe\xbd\x8b\x49\x38\x1c\xe2\x11\x93\xdf\x0f\x47\x56\x51\xfd\xdc\x1f\xb2\xcd\x6e\x5a\x92\x64\x39\x5c\xfe\x55\xdc\xfa\x85\x3c\x3c\xce\x73\x17\xae\xef\x9f\xad\xa0\x3e\x94\x3f\x73\xe3\xe6\xe4\x30\xff\xac\xcf\xf3\xee\x58\x97\x9b\x93\x5b\x08\x23\x79\x5c\xf4\x4b\x79\xd4\x97\xdf\x08\x42\x12\x60\x72\xc9\x1d\xfb\x28\x54\xce\xa6\xf9\xfd\xbd\xce\x93\xaf\x64\x8b\xb3\x73\xdf\x81\x3d\x5d\xcb\x69\xbe\x64\x77\x99\xfc\xdb\x73\xff\x2e\xe2\xc8\x5c\x95\xe6\xe5\x54\x04\xfd\xaf\x53\x91\x55\xa6\x3e\x93\xfc\xe5\x02\xa8\xf6\x7b\x0b\xa0\x9c\xac\xf1\xa8\xe8\x7f\xac\xe0\xda\xff\xf6\x22\x5f\x1c\x3e\x9b\xf7\xb2\x44\xbf\x2c\xdb\xe7\xb3\x85\x31\x7f\x47\xf3\xb7\x07\x53\x3c\xee\xa7\x30\xc4\x77\xbf\x3c\x9b\xed\x90\x00\xe5\xdf\x2a\x4b\x7f\x39\x0a\xaa\x0d\x06\x67\xa7\xd7\x0f\xd9\x74\xfd\xd0\xf6\xd7\x0f\x69\x2b\xbf\xd4\x7f\xdd\xf5\x43\x1d\xe5\xbd\xbf\x9b\x18\x53\x5e\x3f\x8c\x72\x3f\xc8\x7d\x29\xdf\x86\xe2\xfa\xa1\x60\xec\x20\xbf\x5a\xc6\xc8\x7d\x2f\xeb\x74\xf2\x3d\xe6\xd7\x0f\x95\x7c\x6f\x1b\x9b\xc7\x2f\xe5\x9a\xdb\xbc\x5c\xe6\x8f\x32\xaf\x68\x6d\x1e\xf3\x79\x6e\x65\xdf\xb1\x92\x75\xe4\x9a\xcb\xb8\x4a\xc6\x67\x72\x2d\x65\x9d\x26\x93\x7b\xb9\xf6\x32\xb6\x97\x6b\x2e\xbf\x74\x94\xbd\x98\x27\x7b\xd6\xb2\x4e\x1e\xae\x1f\x82\xbc\x0f\x72\x9d\x64\x7c\x6c\x4c\x9e\x6e\x34\xd9\xc7\xde\x64\x1a\x52\xff\x2e\xfb\x8f\xb2\x57\x26\x6b\x34\xc1\xd6\x6b\x79\x5f\x98\x4c\x05\x6b\x8b\xac\x93\x7c\xab\x3b\x93\x97\x39\xa9\xbc\xeb\x64\x4c\x40\x3e\x91\x37\xc8\x9c\x4a\x7e\x41\xd6\xcd\x64\x5c\x29\xf7\x7d\x61\x32\x8d\x32\x7e\x90\x31\x0d\xeb\x30\x3e\xd8\xd8\x5c\xec\x51\x89\x3c\x93\xec\x59\x05\xf3\x41\xcd\xde\xbd\xdd\x0f\xf2\x3d\x8a\xec\x13\xfb\xc9\x5a\xa3\x7c\xab\x19\x27\x6b\x8d\xa2\x43\x31\x9a\x2e\x05\x76\x95\xf7\x19\x7b\x8e\xf6\x1c\x64\x7c\xef\xb6\x18\x57\xf9\x1b\x93\x1d\x9b\x8e\xa2\x5b\x29\x63\x27\x79\x57\x8a\x8e\x51\xe6\x74\x83\xcd\xcb\x64\xef\x46\xe4\xee\x72\x93\x0d\x7f\xf7\xad\xf9\x04\x1b\xe2\xfb\x7c\x32\x99\x8b\xde\x9e\xa7\x68\x63\x43\x34\x0c\xe4\x32\x2e\x06\xd3\xbd\x16\x79\x53\x59\x2b\xe0\x2b\xb9\x2f\xf0\x65\x69\xf6\xe5\x8a\x4d\x91\x31\x75\xdd\x19\x1f\x65\x6c\x1f\xcd\x9e\x61\x30\xfc\x71\xe5\x5b\xd9\x99\xaf\x0a\xb7\x8d\xee\x3d\x98\x3d\x0b\x6c\xee\x98\xa9\x27\xdb\x0f\x2c\x8c\xb9\x61\x03\x8c\x63\xb3\x5a\xbe\x37\x83\xd9\x14\x3b\xf5\xd8\x94\x77\x32\xae\x9c\x0c\x4f\xec\xa9\x38\x29\x7c\xbf\xca\xe4\x05\x9f\x7c\x4b\xc3\x53\xbc\x4c\x3e\x7e\xea\xcd\x86\xb9\xec\xd3\x8c\x66\x57\xf4\xb2\x71\xa7\x6b\x92\xf4\x30\x74\xd6\xfe\xb5\x6c\xb8\x72\xfb\xb3\x6c\x2a\x69\x60\x8d\xdf\x0b\xb9\x3f\x5d\x2b\xae\x53\x79\x3a\x7f\x24\x55\x1f\xc1\xaa\x7f\xd1\x04\xf0\x7c\x55\xcd\x00\x8f\x69\xf6\xa5\x14\xbf\x97\xbf\x1e\xd3\x8e\x26\x0e\x99\xfe\x1e\x09\xbd\x83\x9e\xaf\x92\x67\x62\x25\xb0\xee\x55\x52\xb6\xe5\x45\x02\x7f\x5e\x3d\xa7\xd7\xb3\x32\x4f\xcf\xf5\x3d\xac\x78\x65\xac\xf9\x8f\xdd\xfc\x70\x96\x95\x6d\x93\xb5\x75\x57\xd7\x17\x49\x7a\x2e\x09\x31\xb0\xdb\x47\xaa\xcc\x3b\xd5\xe0\x2a\x71\x45\x10\xe5\x4a\xff\xff\xf2\x68\xb2\x70\xf1\x92\xf1\x9e\xd5\xa2\x7f\x90\xf8\xaa\xd2\x40\x31\x8a\x43\xcb\xf0\x44\x7c\x59\x69\x20\x25\x40\x2a\x07\x54\x57\x3a\x81\x8c\x16\xf4\x65\x69\x40\x4c\x1b\x0b\x62\x05\xb7\xac\xd1\x41\x72\x02\xb6\x22\xb3\x80\xce\xe5\x5a\x78\x60\x12\x34\x5d\xb4\x60\x62\x2d\x02\x1a\xb2\x53\x30\xc9\x35\x1b\x0d\x64\x90\x03\xb2\x42\xb6\x10\x4d\xef\x24\x52\xd4\x36\x7e\xea\x8c\x74\xda\x35\x80\x79\x57\x1a\xc9\xa1\x3b\x01\x89\x3c\x90\x2a\x44\x07\x31\x65\xd1\x02\x13\xb2\x23\xc0\xd9\x33\xb8\x9d\x42\x6d\xf6\x69\x57\xa2\x1c\x8c\x38\xb1\x1f\xb2\x33\x0f\x32\x08\xad\x05\x09\xb6\x18\x27\xd3\x03\xb2\x1d\x6a\x23\x06\x88\x9d\xe0\x2d\x5c\x6f\x64\x1a\x82\x11\xf5\xd0\x19\x41\x05\x27\x21\x02\x70\x25\x64\x6c\x86\x7d\xb0\x3d\x76\xcd\x47\x23\x96\xb2\xb0\xa4\x10\x3b\x27\xe7\xce\x6c\x54\x43\xa2\x90\xeb\x64\xeb\x93\x28\xa2\xac\xd5\xf4\xe6\x47\x6c\x82\x6f\x20\x3e\x7c\xa1\x3e\x28\x8c\xf8\xd8\x77\xe0\x99\x79\xd1\x30\x80\x8e\xb5\xfb\x00\x9b\xa0\x6f\xa8\xec\xd7\xf5\xb6\x2f\xc4\x0e\x39\x43\x28\xf8\x47\x31\x10\xcd\x76\x5d\x70\x32\xac\xdc\x6e\x60\x40\xf6\xa9\x5a\x27\xbb\xc1\xf4\xc3\x5f\xe8\x4f\xf2\x82\xa0\x1b\xd6\xed\x7c\x2f\xde\x63\xe7\xda\x92\x01\xd8\x80\xc4\xd0\x53\x93\x46\x67\x98\x82\xe0\x7a\xd7\xbf\x71\x22\x27\xd1\x4e\x9e\x18\x21\xee\xdc\x13\x52\x3f\x98\xbd\x14\x3b\x85\x27\x53\x1f\x4f\x42\x46\xbe\xba\x36\xdc\x13\x0f\x65\x6f\xc9\x06\x9d\xc0\x7d\x35\x98\xdd\xd1\x57\x93\x73\x61\x89\xb6\xcf\x8c\x74\xd9\x07\xec\x23\x57\xde\x3d\x25\xc6\xd2\x6d\x08\xf1\x82\xa7\xca\x71\x3c\xd5\x96\x84\x90\x87\x24\x4b\x82\x68\xb0\x99\x5c\xf3\xde\x30\x89\x4d\x49\xcc\x65\xfe\x94\x4c\x48\x2c\x4a\xfe\xa5\xc5\x04\x49\x2a\x7a\x4c\x63\x0b\x64\xad\x07\xb3\x01\x89\x01\xdf\x0c\x1e\xdb\x8f\xf1\xff\x8c\xcc\xc1\x35\x31\x94\x79\x32\x6b\xe2\xaf\x93\xf9\x0b\x86\xf9\x03\x9c\xfe\x62\xbe\x51\xfb\xcb\x06\xfa\x3d\x86\x7f\x31\xfe\x7f\x22\xfa\x5f\x93\xf0\x4f\xe3\xfb\xf7\x65\x75\xda\x2f\xda\xfc\xff\xa4\xfd\xba\xaa\xb2\xa6\x2a\xdb\x3f\x85\xf6\x7f\x3a\xbc\x7e\x3a\x6e\xf8\x83\xc4\x4f\x60\x54\x8d\x81\x99\x6f\x80\x12\x90\x01\x08\xb2\xbb\x92\xdb\xe4\xc0\x6c\x2d\xa0\x47\x07\x20\x64\x4c\x45\x02\x68\x00\xbd\x12\x74\xe9\xc1\x0f\xe8\xbc\x92\x19\x09\xe0\x60\xc1\x42\xf5\x07\x71\x6b\xc0\x78\xa5\xdc\xa5\x5e\xb5\x79\xf2\x01\xe0\x03\xe0\x76\xe2\x26\x18\x21\x58\x88\x89\x77\x25\x64\x32\x19\x59\x20\xdf\xb8\x06\x42\x6f\x95\x29\x64\x80\x4e\xe8\x31\xf4\x46\x24\x69\x6f\x32\x41\xc8\x59\x6e\xfa\xe6\xb9\x55\x4a\x0d\x01\xd8\xd9\x15\xe2\x21\xb0\x34\x29\x54\x46\x9c\xc8\x4e\xe0\xf2\x8b\x4e\xfa\x9d\x13\x21\x72\x20\x7f\xd3\x98\xee\xbd\x57\xcb\xc8\x81\x4d\x20\x1b\x08\xa8\xab\x8d\x4c\xa8\xd4\x08\x66\x92\x5f\xed\x04\x07\x29\x6b\xc5\xd7\x19\x49\x32\x8f\xe7\x80\x0c\x9d\x25\x31\x12\x51\xf0\x3d\xd6\xfd\x21\xc6\x2a\x9a\x5f\x35\x19\xb7\x46\xa2\xec\xa7\xba\x78\x52\xa1\x62\x83\xdc\xf1\xe1\xe0\xd5\x75\xe6\x89\xa0\x74\xd2\x45\xa6\xa6\xb5\xc4\x80\x0f\x20\x78\xde\x4f\x6e\x9f\xd4\x75\xa1\xbb\x01\x37\xda\x19\xf8\x5e\x54\xf8\xec\xcb\x5c\xed\x42\xdc\x56\xc1\x93\xe7\xe8\xa4\x4d\x27\xc1\x7c\x4d\xde\xa3\x91\x3f\xe4\xc9\x1c\x12\x0e\xe4\xc9\x5a\x8d\xeb\x4c\xd7\x45\xc7\x04\xc1\xe1\x27\x8a\x13\xc5\x9b\xef\x4b\xc7\x05\x2e\xb0\x07\x49\x97\x84\x9e\xb9\x8d\xb1\x53\x5e\x7b\x25\xec\x89\xbe\xf5\xce\x40\x09\xbf\x37\x19\xc0\x1c\x72\x37\x9e\xe4\xa9\xb4\x33\x8f\x0b\xf6\x22\xc1\x92\xbc\x59\x93\x04\x02\x2e\xb1\x21\x24\x4d\x82\xd6\x2e\x2a\x98\x3f\x18\x43\x82\xd6\xaa\xb9\x76\xac\x8e\xa6\x0b\x49\xaf\xa9\x6d\x6f\xfc\x38\x34\x1e\x1b\xb9\x75\x56\xdc\x2b\x29\x3b\x66\xe9\x04\x9b\xc9\x8b\xb0\xd6\xfc\x5c\x79\x42\xe0\xbd\x76\x30\xd1\xec\x4b\x32\xe3\x1b\x7b\xa1\x03\x9d\x24\xb1\xd0\x79\x07\x48\x52\x20\xc9\x97\xde\x29\xae\x1d\x83\x76\x53\xbe\x06\xdd\x1e\x31\xd9\xd6\x9e\xe4\xbc\xab\xa2\xa0\x28\xa2\x15\x2a\xc4\x4d\xee\x09\x23\xba\xcf\x88\x4f\x2d\x16\x1b\xef\xc8\x0a\x8b\x05\xed\x14\x83\xf9\xa6\xf0\xa2\xb0\x74\x5b\x2b\x96\x6b\x2b\x3e\xe8\xb8\xf8\xc1\x47\xd8\xb5\x71\x3c\xd2\xe5\xe5\xee\x47\xed\xbe\x73\xe3\x13\xed\x50\xbd\x88\x82\x57\x48\x7a\x70\x87\x26\xbf\xd6\x92\x17\x7a\xac\x5c\x45\xe2\x06\xa7\x85\x17\x29\xc8\xd1\xa6\x66\xd7\xe0\x1d\x22\xf8\x1a\x06\x8b\xc5\xc6\xe3\x97\x82\x2b\x7a\x37\x89\xed\xb0\x21\xfe\xc4\xa6\x7d\xfb\x54\x78\x52\x38\xc1\x93\xf8\x4b\xb1\xda\x5b\xd2\x55\x9f\x8c\x56\x08\x6a\x97\x34\x19\x27\xc0\x17\x5a\xe0\xd5\xb6\x0f\xb8\xe4\x3b\xdd\x34\x78\xa5\x53\x85\xaf\x88\x95\xc9\x63\x05\x1b\xe3\x5f\xe2\x19\xee\x0b\x9e\xf4\x29\xac\x52\x2f\x7c\x49\xfa\x14\x74\xe0\x7a\x88\x66\xc3\xd2\x39\x19\x5c\xe5\x5e\x74\xc2\x4f\xd8\x14\x0c\xd4\x7e\xd2\x50\xfb\x29\x43\xe9\xc5\x19\xf3\x29\x8e\x28\x06\x27\x3f\x99\x60\x4f\x30\x0f\x8f\xa5\x1e\x73\x9c\x2a\x94\xde\x71\x6a\x47\x1f\xcc\x66\xf8\xae\xf6\xee\x16\x19\x95\x87\xd6\xa2\x3f\x98\x3f\xb8\x62\xa7\xca\xb1\x4a\x01\xd4\x39\x47\xe3\x37\xb8\x6c\xf0\x2e\x7c\x58\xb1\xef\xa7\x32\x60\x94\xee\x97\x78\xd2\x86\xa5\xb7\x18\x43\x5f\xfc\x3a\x38\xb7\x2b\x06\x69\x58\x32\x8b\x6f\xb0\xa0\xb1\xdb\x99\x1d\x6b\xe7\xa9\x71\xc5\x5c\x63\x6b\xf2\x5d\x4f\x61\x72\xb3\x2b\x5c\x87\x6e\x14\xfd\xf0\x17\x5c\x47\xa1\x3f\xb9\xee\x70\x10\xf2\xaf\xf9\x0f\x4c\x61\x57\xf8\xbb\x5a\x7d\x5a\x79\xb1\x57\x5a\x2e\x22\xee\xe1\x0c\xf2\x8b\xda\xb9\x32\x99\xc1\xf7\xe8\xbc\xc7\x5c\xb0\xa7\xe3\x53\x3b\x29\x80\x57\xf0\x01\x7a\xe8\x29\x55\x61\xb8\xa7\xd8\x85\x7b\x68\x72\xe0\x25\xae\x7a\xc2\x11\xed\x14\x05\x7b\x81\xbf\xe8\x31\x51\x7b\x91\x07\x07\xaa\x4f\x46\x5b\x53\x1b\xa4\xce\x9b\xb1\xde\xfc\xa7\x39\xd8\x8b\xdc\xe8\x27\x13\xbc\xa7\xc9\x80\x87\xe0\x27\xec\x8e\x0d\x98\x5b\x7b\x0e\xa8\x5b\x8b\x9b\xc1\xb9\x04\x5e\xc0\x0e\xac\x03\x36\x90\x9b\xc2\xb8\x74\xbc\x30\x06\x5f\xf6\xde\x40\x62\x0b\xb0\xa3\x79\xa8\x30\x5c\xa9\xde\x6b\x8e\xaf\xad\x71\x22\x8e\xf4\xa4\xa3\x35\x0c\x80\x41\xe2\x87\xd8\x25\xae\xf1\x03\xbc\xaa\xa7\x63\xb5\xc5\x6a\xe5\x18\xae\x3c\x0f\x83\x23\x78\x08\x9b\xe2\x0b\x38\x0b\xfe\x87\xff\xb0\x11\xb1\x85\xde\xec\x8f\xff\xc9\x37\x8d\xdb\x09\x59\x6a\x2f\xe8\x4b\x6f\x3e\xe0\x06\xec\x5a\xa5\x66\x7b\x30\x84\xdc\xac\xc9\x3e\xda\xf8\x56\x5e\x73\xe5\x7e\x32\x38\x59\x53\xb3\x36\x9e\x70\x02\xf6\xa6\x6e\xd2\xe6\xae\xf5\x98\x0d\xd6\x24\xc1\x25\xe4\x23\x6d\xb8\x4b\xcb\xf3\x8a\x8d\xc1\xaf\xa9\xe5\xb3\xca\x75\xa7\x41\xea\xbd\xc1\x80\x27\xe1\xb2\xc1\x6b\x23\x6d\x84\x46\x6b\xb4\xb0\x5d\xef\xa7\x58\xf8\x90\x5a\x10\xbf\x29\x67\x64\xe6\x13\xf4\x01\x7b\x99\x37\x19\x70\xf4\x7a\x22\xaa\x27\x60\xc1\x7c\x09\x4f\xb1\x66\xb1\x36\xd5\xf5\x13\xcf\xc2\x6d\xf0\x0a\xf9\x10\x1e\x44\x6e\x8d\xbf\xde\x78\x15\x5f\xe5\x9e\x1f\xf5\x74\xb6\xb5\x1c\x83\x9e\xd1\x4f\xf4\x72\xaf\xe9\x14\x93\x1e\x97\x9a\xe3\xd7\xd3\xab\x60\x27\x67\x5d\xeb\xa7\xb3\xc1\xf6\x40\x3e\x1a\x47\xf2\x18\xcd\x11\x9c\xab\x36\x24\x2e\x3d\x37\x93\x43\xe0\xe4\xc6\xf3\x43\xe5\xf5\x20\x3e\xd2\x83\x8a\xe9\x89\x27\xb1\x21\xf8\xd4\x9c\x3a\x18\x07\x81\x5b\xe2\x02\x5d\x32\xcf\x3d\xea\xd3\x68\x72\x6a\xec\xa7\xe6\xcb\xc1\xfd\x1e\x3c\x8f\x2b\xef\xb6\xc6\x31\x3c\xa3\x4f\xeb\x35\x1d\xfc\x08\x17\x11\x83\xc8\xa7\x75\x56\x69\x71\x9d\x0f\x7e\xd8\x32\x18\xff\x81\x1f\x3d\x70\x29\xbd\x4e\x8d\x7e\xd2\xec\xf5\x7e\x74\x7b\x33\x96\x35\xf4\x94\xb1\x33\xdf\xae\x75\x3c\xf5\xaf\x1e\x70\xd4\x56\xab\x46\x3f\xe5\xe6\xd0\xa1\xf7\xe6\x15\x79\xc0\x7e\xb7\xda\xde\xf3\x37\xfc\x53\x79\x5d\x0b\xbe\xa8\x23\xa9\x1b\x4a\x8f\x65\x6a\x58\x30\x1d\xd6\xda\x2f\xb5\xbd\xc8\xf7\xf0\x8f\x62\x2d\x18\xde\xd6\xf8\x03\xc7\xea\xdb\xca\x78\x56\x4f\x87\x3d\x8f\x6b\x4f\xe2\xf1\x46\x0c\x53\x83\xe0\xc7\xe0\x87\x3c\xd1\xf1\x4b\x0d\x05\xff\x6a\x23\xdd\x1a\x1e\x59\x93\x26\x7c\xf0\x43\x29\xe5\x92\xc2\x4f\x55\x1d\x43\xda\xa8\x77\xb6\x2f\xb2\xa6\x8e\xc7\xcc\xf5\x28\xfc\x30\xab\xf7\xfe\x08\x5f\x23\x07\x18\xd5\x43\x29\xaf\x21\xa9\x07\xe0\x90\xd6\x6b\xee\xe8\x87\x52\x5a\xb7\xe4\xe6\x6b\xed\x05\x6a\xe3\x73\xad\x21\x83\xf3\x58\x6d\xfb\x68\x8c\xd6\x16\xa3\xda\x17\xe4\x7e\x10\x37\x1a\xa7\xa0\xa3\x9e\x6e\x77\xc6\x43\xad\x1f\x0c\x04\x3f\x9d\xae\x7d\x8d\xda\x7b\x9c\xcc\x0f\x39\xb4\x67\x6a\xac\xde\xa1\xde\x44\xde\xc9\x6b\x2c\xb0\xa5\x07\x2e\x6b\xed\x9d\x9a\xad\xc1\x1b\x07\x0d\xac\xd7\xfb\xda\xa3\xf3\xc8\x8a\x43\x62\x59\x73\x53\x67\xf1\x40\x6d\xae\xf5\x53\xe6\x31\x99\x3f\xd5\xb3\xc4\x16\xba\xeb\x21\x62\x6f\xfa\xa4\x7e\x60\x42\xfe\xe7\x1b\xfb\xad\x07\x95\xf0\x1b\x71\xab\x73\x46\x93\x9b\x39\xba\x57\x6f\xb5\x45\xe3\xfd\x94\x1e\x2a\xca\xb7\x7f\x07\x00\x00\xff\xff\xef\xaa\x85\x10\x00\x20\x00\x00")

func bindataGoBytes() ([]byte, error) {
	return bindataRead(
		_bindataGo,
		"bindata.go",
	)
}

func bindataGo() (*asset, error) {
	bytes, err := bindataGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bindata.go", size: 20480, mode: os.FileMode(420), modTime: time.Unix(1487187660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _buildMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\x8e\xb1\x4e\xc3\x30\x18\x84\x77\x3f\xc5\x49\x45\x62\x41\x7d\x00\x06\x24\x24\x98\x3b\x10\xf6\x38\xf1\x25\xb1\x64\xfb\xb7\x62\xff\x34\xe1\xe9\x71\x23\xaa\x6e\x37\xdc\x7d\xdf\x99\xf7\xcc\x0d\x33\x13\x57\x5b\x59\x60\xf1\xeb\x33\x26\x1f\x88\x49\x56\xec\xa2\xd0\x2c\x09\x8e\x39\xc8\xfe\x82\x45\xae\xfc\xe1\x8a\x22\x91\xd5\xc7\xb6\xf0\x15\xa3\x4d\x18\x08\x2d\x9c\x34\xa0\x0a\x0a\x09\x6e\x76\xac\x61\xc7\x75\xb1\xf5\xb9\xd5\xd2\x18\xd4\xd1\xb5\x80\xba\xf8\xf2\x70\x38\x0e\x3a\xcf\x3e\xcd\xc8\xba\x66\x29\x2c\x67\x74\x0b\xd1\xdb\xdb\xb5\x41\x7d\x70\x3d\x46\x89\xd1\x26\x07\xd1\x9a\xb5\x96\x86\xe0\xf1\xb4\xc9\xbe\xba\x8f\xcb\x77\x77\xa0\x0e\xf0\x3f\xe5\x6c\xcc\xe9\x84\xcf\xcd\xc6\x1c\x58\x8c\xb9\x1c\xcb\xfb\xa8\x71\xce\x2d\xbe\x1a\xd3\xf7\x7d\x59\xcc\x13\x1e\xb6\x86\x12\xbc\xdd\x2b\xb7\x82\xf9\x0b\x00\x00\xff\xff\xda\x69\xc7\xac\x27\x01\x00\x00")

func buildMdBytes() ([]byte, error) {
	return bindataRead(
		_buildMd,
		"build.md",
	)
}

func buildMd() (*asset, error) {
	bytes, err := buildMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "build.md", size: 295, mode: os.FileMode(420), modTime: time.Unix(1454345227, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deleteMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x90\x31\x4f\xc3\x30\x14\x84\x77\xff\x8a\x53\xcb\x00\xa8\x29\x7b\x17\x54\x09\xf8\x05\x30\xb0\xc5\x49\x9f\x6b\x4b\x4e\x5e\xe4\xe7\x34\x0d\xbf\x1e\xdb\xa9\x0a\x43\x91\x98\x3c\xf8\xdd\xdd\x77\xa7\xf6\x03\x9d\xa1\xbd\xe7\x49\x30\xf3\x88\xc8\x38\x90\xa7\x48\x30\x63\xdf\x46\xc7\xbd\x6c\x60\x79\xa2\x13\x05\xb8\x88\xc9\x79\x8f\x21\x70\x37\x44\x34\x73\xba\x35\x7a\xf4\x71\x8b\x0f\x21\x44\x4b\xa8\x2b\xb3\x41\x55\x19\x0e\x2d\xd5\x30\x5e\x1f\xb3\x25\x27\x75\x70\x87\x7c\xe2\x04\x0d\x59\x7d\x72\x3c\x86\x2d\x3e\x53\x64\xa7\x67\x0c\x5a\x04\x5f\x14\xd2\x69\x40\xc7\xe1\x27\x1e\xbd\xee\x48\xb6\x4a\xad\xd7\x78\x3d\xeb\x6e\xf0\x24\x4a\xbd\x2c\x8c\x09\x3c\x11\x45\x7b\x21\xda\x29\x55\xd7\xb5\x58\x75\x07\x9d\x7b\x2d\x4d\xd4\x7b\xe2\x32\x9c\x3b\xba\xfe\xb8\x34\x68\xe8\xf2\x79\x48\x1a\xa0\x42\xa3\x43\x79\x0d\xb3\x52\xfb\x94\x9f\xc7\x90\x31\xd0\x33\xee\x67\x92\xa7\x9e\x1f\x76\xd9\x5c\xa9\xb7\x44\x78\x99\x88\x4d\x21\xb8\x2e\x75\x3b\x1f\x95\xb9\xa5\x94\x81\x5a\x67\x5c\xfb\x0f\x79\xa6\x2a\x84\xc5\xe6\x57\xf7\xab\x14\x93\x75\xad\x2d\x5b\x41\xa2\x0e\x51\x96\x5d\x56\x7a\x8c\x76\xf5\x87\x71\xfe\x7b\x2c\x9e\xdf\x01\x00\x00\xff\xff\x26\xfa\x24\xd5\x07\x02\x00\x00")

func deleteMdBytes() ([]byte, error) {
	return bindataRead(
		_deleteMd,
		"delete.md",
	)
}

func deleteMd() (*asset, error) {
	bytes, err := deleteMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "delete.md", size: 519, mode: os.FileMode(420), modTime: time.Unix(1462580160, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deployMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x93\x4f\x6f\x13\x31\x10\xc5\xef\xfe\x14\xa3\x14\x09\xa9\x4a\xd3\x3b\x9c\x22\xe0\x80\x84\xb8\x80\x84\x38\xb1\xb3\xf6\x6c\xd6\xd4\xf6\x58\xfe\x93\x64\x2f\x7c\x76\xc6\x9b\x7f\x6d\x95\xe6\xb8\xf6\xbc\xdf\xcc\xbc\xe7\x55\x3f\x19\x0c\x45\xc7\x13\x70\x20\xe0\x04\x9e\x13\xc1\x50\x83\x2e\x96\x43\x06\x74\x0e\x26\xae\x10\x88\x0c\x14\x29\x66\xb0\x19\x52\x0d\xd0\x61\xa4\xfd\x51\xdc\xad\x60\x7d\xf9\x12\x95\x30\xac\x21\x1f\xb9\x50\x28\x1f\x01\xa1\xaf\xd6\x99\x26\xd5\x89\xb0\x90\x51\x83\xf4\x22\xd4\xe3\xb9\xd7\x12\x30\x98\x03\x26\x52\x92\x6b\x2f\x1c\xd0\x23\xe9\xa7\x5c\x7d\xeb\x9d\x49\xa8\x03\x94\x91\x8e\x8d\x64\xa4\x93\x1a\x3c\x16\xa9\xcd\xf3\xad\x63\x8d\xee\xd0\x72\xd9\x14\x99\x95\x2d\xef\x33\x04\x2e\x67\xe5\x4a\xa9\xf5\x50\x28\x9d\xd6\x9f\x1b\xef\xac\xac\xab\x1d\x61\xa8\x11\xd8\x5d\xf0\x22\xde\x52\xca\xb3\x25\xb9\x88\x45\x46\xfc\x82\xf5\xaf\x1f\xf0\x0d\x7d\x6f\x10\x44\xb3\xb5\x61\x23\xa7\x6e\x82\x81\x76\x2b\xf8\x5e\x7d\x2f\x78\x1e\x20\x51\x41\x1b\x44\x72\x42\x28\x8d\x01\x7a\x82\x1c\x49\xdb\xc1\xca\x8d\x0d\x10\x13\xff\x25\x5d\x5a\x06\xe7\xa5\x34\x87\xc1\x6e\x6a\xc2\xf6\x25\x13\x7f\x1d\xe6\x30\x62\xa2\x41\xd0\x62\x89\x40\x68\x1f\x9d\xd5\xb6\xcc\x37\x0d\x1c\x31\xe7\xab\x69\x42\x40\xdf\x1c\xe2\xd7\xd9\xfd\x16\xa5\xc7\x49\xc2\xce\x7c\x32\x1f\xf2\x48\xce\x3d\xe4\x32\x39\x82\x8d\xe3\xbe\x6f\xeb\x9d\x5c\xde\xd9\x32\x4a\x5e\x93\x4c\xe8\x7d\xcb\x0d\xb5\xa6\x58\x5a\xc9\xcb\x6e\x4b\xc8\x55\x42\xc6\x0c\xdd\xb1\xdd\x12\x3a\xc7\x9b\xdc\x1d\xf2\xee\x12\x3b\xd7\xa3\x7e\xea\x64\xbd\xbb\x3b\xf8\xb2\x47\x1f\x1d\x65\xa5\x3e\x1f\x72\x69\x0f\xf0\xf2\x1c\xc5\xa7\x16\xb0\xae\x29\xc9\xc3\x02\x63\x93\x58\xc6\x69\xfa\xa0\x54\xd7\x75\x79\x54\xef\xe0\xd9\x6a\xed\xec\x36\xe8\x0c\x80\xc5\xbf\x47\x43\xdb\x47\x3f\x61\x8c\x8b\xeb\x38\x78\xf8\x04\xcf\xaa\x5e\xd0\x8f\x51\xea\x4b\x8b\x37\x18\x58\xcb\xb5\x23\x39\xb0\x37\xc6\xdd\x8d\x56\x5c\x6c\x8e\xca\xf3\xc3\x54\x8e\x09\x2c\x9a\xf4\xad\x69\xdb\xdd\xfd\x0d\x26\x05\xd3\xf2\x3a\x80\xfe\x24\x8a\x9c\xe4\x7f\x58\xac\xae\xd3\xee\xcf\x15\x33\xf2\x7f\x00\x00\x00\xff\xff\xb8\xc3\xcc\xcc\x39\x04\x00\x00")

func deployMdBytes() ([]byte, error) {
	return bindataRead(
		_deployMd,
		"deploy.md",
	)
}

func deployMd() (*asset, error) {
	bytes, err := deployMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "deploy.md", size: 1081, mode: os.FileMode(420), modTime: time.Unix(1462580160, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _docsGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x57\xdf\x6f\xdb\x36\x10\x7e\x8e\xff\x8a\xab\x8b\x16\x52\x6b\x2b\xed\x8a\x61\x40\x80\x3c\x24\xdd\xd2\x06\xe8\xaf\x35\xed\x3a\xa0\x19\x56\x5a\x3a\xc9\x9c\x25\x52\x23\x29\xbb\x41\x91\xff\x7d\x77\x14\x2d\xc9\x96\xd3\x0d\xeb\x83\x43\x1f\xbf\xbb\xfb\x78\xfc\xee\xe8\x1e\x1f\x17\xfa\xa4\x40\x85\x46\x38\x84\x42\xcf\x17\x52\x65\xc2\x09\x98\xd7\xab\x02\x32\x9d\x5a\x48\x26\x93\xe3\x63\x78\x27\xd2\x95\x28\xb0\x35\xe9\xc6\xd5\x8d\xb3\x90\xea\x52\x1b\xcc\xa0\x12\x66\x95\xe9\x8d\x82\x5c\x1b\x10\x50\xc8\x35\x2a\x70\xba\x96\x69\x32\xa9\x07\x8e\x93\x89\xac\x6a\x6d\x1c\x44\x93\xa3\xe9\xe2\xc6\xa1\x9d\xd2\x22\xaf\x1c\xff\x91\x9a\x3f\xad\x33\x52\x15\x64\xa7\x75\x21\xdd\xb2\x59\x24\xa9\xae\x88\x65\x29\x54\x31\xa7\x65\xa5\x15\xa7\x3b\xde\xe6\x9c\xee\x02\x2b\xe9\xd2\x25\x96\xe5\x92\x5c\xe6\x1b\x6d\xb2\x8d\x11\xf5\x7e\x34\x51\xe3\xd7\xf6\xc3\x9f\x80\xb2\xc5\xfe\x90\x35\x13\xd5\x39\x73\x6d\x2a\x54\x4e\x38\xa9\x55\x32\x71\x37\x35\xb6\x7b\xc4\xae\x49\x1d\x7c\x9b\x1c\xbd\x11\x95\xff\x4a\x64\x27\x47\x17\xb2\xec\xbe\xdc\x76\x91\x2c\x2c\x6e\x80\x18\xa0\x49\x26\x6b\x61\x82\xed\x14\x3e\xff\xc1\x2b\x8a\xf1\x6d\x7a\xa9\xac\x13\x65\xe9\xf3\x4c\x67\x30\x95\x83\xef\x49\x95\x4d\x6f\x67\x8c\x3a\xfb\x74\x05\x29\xd5\x99\x18\x49\x51\x5a\x06\x8a\x8d\x9d\x0f\x4c\x3d\xf6\x05\x3a\x47\x34\x88\x8d\x30\x0e\x33\xc6\x16\xad\x69\x1e\x4c\x3d\xf6\xca\x9f\xa6\x61\xda\x50\x1b\xfd\x17\xa6\xce\x07\xdf\xae\x0f\x23\xf3\x46\xa5\xcc\xcf\x43\xbb\x2f\x3d\xf6\x67\xac\x4b\x7d\x33\x42\x66\xde\xdc\xc3\x2e\xd5\x5a\xaf\x46\x28\xc9\x56\xec\x51\xaf\xa4\x75\x23\x50\x49\xc6\x61\xbe\x12\xc7\x98\x8c\xad\x83\x40\xe7\x8d\x2c\xb3\x11\x6a\xc1\xd6\x1e\xf4\x5e\x97\x25\x63\x16\xa4\x59\x58\xa3\xb1\x5b\x9c\xa1\x0d\x36\xf6\xd0\x8b\x10\x06\x96\x5a\xaf\x3c\xc6\x2f\x7a\xc0\x6f\x12\x37\x1c\xab\xd4\x45\xe8\x17\x4f\x5d\x17\x07\x30\x15\x92\x76\x52\x1f\x25\x2c\x7b\xcc\x6b\xa1\x44\xc1\x20\xa9\x72\x23\x6c\xb8\x08\x6c\x8b\x45\x96\x1e\xf9\xce\xe0\x3a\x04\xdc\x90\xd6\x21\x33\x37\x73\xd3\x78\x5d\xd1\x92\x56\x3d\xf4\x17\xb5\x96\x86\x1a\x89\xe4\x03\x24\x4d\x29\x16\x25\xfa\xf4\xa8\xd6\x3d\xea\x2d\x35\x53\x5b\x59\x19\xb6\x65\xa1\xa8\xe1\x7b\xc4\x47\x45\xea\x26\x5d\x29\x5f\x5a\xb7\xa4\x2e\x58\xca\x8a\x91\xfc\x77\x7c\xd0\x9d\xc6\xf2\xc4\xf4\xf0\xac\x1f\xeb\xc2\x08\x1f\xea\x8c\x9a\x93\xf7\x1b\x6f\x19\x64\xbc\x38\xfb\xd5\xeb\x4e\xfc\x3d\x14\x89\x5a\x05\x61\xa8\xee\x0a\xda\x3e\x7c\x8f\xe4\x6d\xc0\x20\xd5\x4c\x59\xa0\xde\xda\xe5\x00\x82\x8c\x60\x29\x65\xd9\xb6\x78\x32\x61\x81\x04\xbf\x28\x06\xa9\x93\x10\x83\x1a\x96\xbb\x58\x2a\xf0\x93\x2b\x39\x6f\xf2\x1c\x0d\x4d\x16\x1e\x7a\x7f\xce\xda\x01\x71\x72\x0a\x86\x06\x15\x86\x66\x27\x9f\x23\xa9\x92\x4f\x46\x3a\xbc\xf2\xf3\x21\xa2\x69\x97\x5c\xd5\xb4\x74\x79\x34\xbd\x56\xf7\xe1\x81\xbd\xe6\x52\xf8\xe4\x3c\x55\xe2\x78\xe0\x14\xbd\x6e\xac\x3b\xb3\x16\x5d\xe4\x01\x3c\x69\x18\x40\xa7\x3b\xaa\x32\x4e\xb7\x9d\x83\xc9\x1b\xdc\x44\xdd\x97\xdf\x5f\x7e\x78\xfd\xea\xad\x97\x5d\x44\x92\xc1\x78\x36\x00\xea\x9c\xe4\xac\x37\xed\x06\x05\x5b\x73\x9c\x87\x06\xf9\x32\xd1\x7c\xbb\x9d\x1c\x59\xb6\xac\x93\xb5\xb4\xd2\x45\x55\x96\xbc\x13\xc6\x62\x44\xa4\xce\xf9\xe8\x51\xcc\x5e\x6d\x4d\xc3\xd8\xb3\x9c\x3e\x14\xcd\xc6\xa1\xf8\xf4\x94\xb0\xc0\x5a\x04\xbc\x01\x27\x2b\xaa\x5b\x5b\xe0\x76\x2f\xb2\x61\x77\x06\x8a\x4c\x2e\xde\x82\xa9\x70\x92\x39\x6c\xa3\xbf\xc7\x1a\x85\x8b\xa6\x00\x54\x2a\xd5\x67\x97\xf0\x78\x88\x29\x45\x8a\x91\x25\x25\xf8\x92\xf2\xe7\x63\x39\x83\xf9\xd3\x2d\xa3\xed\x19\xfd\x43\xe5\xd0\x54\x52\x89\x32\xb4\x67\x98\xf3\x1d\xa4\x9f\xf5\x52\xd1\xf9\x05\x09\xb1\x5e\xc2\x42\xeb\x92\x2d\x3c\x98\xc0\xff\xeb\x2d\x6a\xd5\x5a\x76\x5e\x02\x5f\x43\xf8\xe2\x68\xac\x29\xfb\x25\x9c\x3e\x32\xf0\x68\x9b\x28\x6e\x21\x51\x8b\xa0\xd7\xa1\xbb\xa8\x0f\x6c\x89\xa1\x2b\x52\xcc\x64\x82\xda\x5c\x2f\xb5\xe0\xc8\x5a\xb3\xf0\x98\xac\xed\xbd\x79\xef\xc8\x79\xb1\x84\x72\xf5\x94\xda\x5d\xa2\xf5\x1d\x46\x21\x00\xec\xf3\xe9\xaf\xc8\x6e\xf8\xb5\x05\x97\x44\x5c\x3a\x4f\x2f\x15\x16\xe1\x51\xe7\xd2\x15\xee\x6d\x8d\xea\x84\x18\x9a\x64\x58\xcd\x53\x60\x0d\xb2\xb9\xbd\xce\xe9\xf4\xee\x08\xcf\x4b\x6d\xf1\x50\x88\x9c\x1e\xc0\x61\x8c\x6b\x35\x8e\xf2\x5c\x67\x78\x5e\xea\x74\x75\xd2\x03\xf7\x3a\x31\xf4\x61\x10\x26\x9d\xe9\x80\x77\x4c\x4b\xe5\x68\x7f\x06\x3f\x70\x0f\xec\x65\xb9\x40\x95\xe2\xff\xca\xe0\x3d\xff\x25\xfa\x4b\xf4\xb3\x71\x5b\x49\xc5\x0a\xd8\x09\x32\x00\xc4\xc9\xcb\x57\xb8\xc6\xf2\x4e\x2e\x40\x73\x07\xae\x9f\x3c\x7b\xf6\xf9\x41\xc6\x03\x7b\xbf\xd1\xee\xfb\x3e\x9b\xb5\x3f\xf1\x68\xd8\x95\x34\x2a\xee\x62\xd4\xdf\x4c\x77\x03\x3e\xf2\x93\xea\xd0\x55\xd0\x1c\xd4\xfd\x29\x3a\x17\x76\x78\x5a\xdd\x05\x1f\xa7\x68\x13\x8c\xf1\xe7\x4d\x49\x2f\x3f\xb7\xe7\x50\x72\xbe\x5d\x47\x6a\x3b\x44\xaf\xf7\xdf\x11\x5c\x08\xf0\x5f\xb4\xc6\xd0\x4b\x87\xd5\xfe\x11\x01\xe6\x70\x08\xad\x56\xbb\x4c\x69\x8c\xec\x5d\xec\x16\x43\xb7\x6a\x30\xff\x6e\xbb\xb0\x54\x2f\x15\x3d\x84\x9e\xb9\x1d\x69\xa4\xdf\xef\xd4\x76\x97\x46\x82\x38\x48\xb5\xa1\xd6\x9d\x1a\x5e\x18\x71\x43\x92\x19\x0b\xe2\x03\x7e\x75\x87\xf3\xf2\x4e\x9f\x91\x5f\xb8\x1c\xba\xe3\xde\x3b\xa5\xa3\xf8\x01\x76\xc4\x3f\x90\x77\x68\x90\x4c\xa3\x07\x36\x66\x89\xce\x3a\x0f\x7e\x22\x87\xd5\xe2\x42\xf8\x37\xb1\x7b\x95\x46\xd4\xf6\x8a\x12\x86\xe4\x6e\x17\x76\x85\x59\xd2\xcf\x42\x9a\x86\xf1\x80\x68\x3f\x71\x1e\x3e\x84\x7b\x9d\x24\x3a\xd2\xa1\xab\xb7\xff\xe5\xa0\xe7\x5b\xd4\xe1\xc9\x27\xe2\x3f\xfd\x48\xbd\xf4\x34\x1e\xb3\xcc\x30\x17\x4d\xe9\x4e\x76\x2f\xf5\x96\x26\xf5\x3f\x01\x00\x00\xff\xff\x79\x87\x97\xf7\x9b\x0d\x00\x00")

func docsGoBytes() ([]byte, error) {
	return bindataRead(
		_docsGo,
		"docs.go",
	)
}

func docsGo() (*asset, error) {
	bytes, err := docsGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "docs.go", size: 3483, mode: os.FileMode(420), modTime: time.Unix(1465926397, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _docsMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\x8f\x51\x6e\xc3\x20\x10\x44\xff\x39\xc5\x48\xf9\x69\xa5\x36\x55\xaf\xd0\x33\xf8\x00\x20\x58\xc7\x28\x86\x25\x0b\xd4\xf6\xed\x0b\xb4\x75\x24\x7f\xd8\xcf\x33\x3b\x33\x6a\x5a\x08\xda\x24\xda\xe1\xd8\x66\x0d\xcb\x21\x98\xe8\xb0\x52\xc9\x38\xb8\x42\xc8\x38\x94\xc5\xe7\x2e\xa8\x81\x62\x31\xc5\x73\xc4\x2c\x1c\x1a\xa7\xa7\xc3\x47\xba\xe2\xeb\x80\xa3\xd9\xd4\xb5\xc0\xb7\x27\x23\xf9\x44\x0e\x3e\x16\x1e\x6a\xbd\x52\xce\x2f\x9f\xaf\x1a\xc9\xdc\x48\x90\x3b\x36\x65\x44\x59\x13\x91\x48\x66\x96\x00\x6e\x2f\x23\x28\xb7\xc3\x77\x42\xb6\xc2\x6b\x8b\xb8\x81\x9b\x89\x8c\xd8\xa5\x7f\x9c\x2d\x0a\x49\xf0\xd1\xac\x57\xa5\x2e\x17\x4c\x3e\x65\xa5\xde\x31\x1d\xa9\x45\x7e\x68\xf4\x82\xbf\x2e\x18\xdc\xe9\xd8\x58\xdc\xdb\xa0\x49\x5a\x21\xb4\x59\xad\x4c\xeb\xf8\x27\xea\x27\xff\xf7\x9e\x77\xa2\xee\x8a\x6f\x4f\xdb\xf8\x1f\x69\x2f\x60\x6b\xab\x08\x45\x4b\xe0\xb9\xaf\x10\x3c\x2a\xc9\x71\x9a\xea\x30\xf5\xb1\xa8\xe9\xa4\xee\x49\x1d\x6f\xf1\xe4\x8f\xc1\x69\xf7\x45\xfd\x04\x00\x00\xff\xff\xf3\x5e\xe3\x49\x9b\x01\x00\x00")

func docsMdBytes() ([]byte, error) {
	return bindataRead(
		_docsMd,
		"docs.md",
	)
}

func docsMd() (*asset, error) {
	bytes, err := docsMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "docs.md", size: 411, mode: os.FileMode(420), modTime: time.Unix(1456962277, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dryrunMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x55\x4d\x6b\xdc\x30\x10\xbd\xeb\x57\x0c\x4e\x20\x2d\x89\x43\x13\x08\x94\x2d\x14\x16\x9a\x42\xa1\xf4\x92\x40\x8f\xb1\x62\x8f\xd7\x4a\x65\xc9\x95\xe4\xf5\xfa\x92\xdf\xde\x27\xd9\xd9\x7c\x6d\xd3\x36\x3d\xec\xc1\x9a\xd1\x9b\x37\xef\x8d\x66\xc5\xb2\xe3\x0d\x69\x0e\x9e\x46\xdb\x53\xc7\xae\xb6\xae\x25\x49\x59\xe5\x46\x72\xbd\xc9\xc8\xd6\x24\xcd\x48\x16\x31\x19\x94\x35\x34\xa8\xd0\x50\x68\x98\x8a\x3c\x47\x56\x8e\xac\x82\x6a\x2d\x57\x47\x48\xac\xc8\x58\xaa\xd8\x07\xd7\x97\x41\xad\x99\x96\xdf\x2f\xa8\x6c\xa4\x59\xb1\xc7\x4d\xad\xe9\x9a\xa9\x95\x15\x1f\x0b\xb1\xb7\x47\xdf\x6c\x48\xa0\x42\x7c\x9a\xea\x79\xea\x3d\x27\xf4\xda\x6a\x6d\x07\x65\x56\xe4\xc7\xf6\xda\x6a\xbf\x10\x22\xa7\xe2\xb0\x20\xc7\xde\xf6\xae\xe4\x2d\x5e\xe9\x58\x06\xae\x62\x38\xdf\x11\x76\xdc\xda\xf5\x14\xbe\xdd\x11\xee\xbb\x2a\xdd\x8e\x7c\xce\x37\xb2\xed\x34\x7b\x21\x3e\x5b\x47\x3c\x7d\x91\xaa\x93\x3a\x8d\x5c\xcf\xd4\x7a\x53\x46\xd6\x9e\xb2\xda\xda\x2c\xb5\x9d\x5d\x4b\x97\xd1\xd0\xa8\xb2\x99\x12\x0d\xaf\xd9\x01\x9f\x0d\xf4\xe8\xb4\x1d\xb9\x3a\x8a\x30\x07\xa8\xea\xf9\x69\x8f\xb6\x0f\x5d\x1f\x8e\xe9\xb2\x51\x7e\xfe\x00\xd3\x0e\x64\xd9\xc0\x9c\x94\xac\x8c\xd4\x38\xfc\xd9\x43\x5e\x9f\x44\xa4\x60\xa3\xc0\x1f\x20\x7a\x50\x68\xa9\xb1\xc3\x23\x82\x64\x64\x0b\xdd\xa5\x63\x02\x54\xad\x36\x5c\xdd\xdb\xd7\x39\x7b\xc3\x65\x38\xf0\xf4\x26\x0b\x80\x04\x8d\xec\x6d\x44\x44\xea\x1a\x55\xa9\x04\x3b\xe5\x63\x9f\x93\xb3\x52\x2b\xe9\x67\xb8\xbb\xea\xad\x54\x26\xe0\x97\x10\xb3\xb2\x77\x0e\x37\x33\xb0\xd4\x8c\xdc\xe9\x0a\xac\x2e\x8a\xc2\x37\x62\x9f\x64\x1c\xb7\x49\x0e\xda\x4e\x8f\x10\x44\x87\xf7\x9c\x67\x2e\x57\x10\x14\x01\x82\x9a\xa6\xd2\xec\x16\x74\x15\x6f\x5f\x29\x53\xf1\xe6\x78\x3a\x4c\x71\x20\x04\xd5\xf2\x02\x22\x54\x7c\xe3\xd3\x59\x0b\xcb\xdd\xb8\xa0\x93\xd3\xf7\xe9\x3b\x26\x40\xd5\x05\x9d\x4d\xc5\x12\xaf\x67\x95\xd2\xe9\x82\xe6\x2e\xd2\x11\x3c\x8c\x0a\x00\xe9\x37\x2c\x31\x00\x7f\xaa\xf8\x9a\x26\x76\xb0\xbc\xab\xf4\x32\x4b\x28\x2d\xc4\x97\x69\x60\x07\x76\xc9\x24\x80\x53\xf1\x50\x7a\x40\x15\x47\xd1\x32\xf3\x3c\xf6\xe0\x51\xcb\x15\x9c\x7d\x32\xb4\x32\x90\x35\x7a\x9c\xe7\xdd\x30\x57\x7e\xbe\x09\x8e\x8b\xff\x73\xfa\x1f\x9d\x7c\xa4\xeb\x23\x45\x5f\xed\x71\x52\xef\x42\xb5\x4a\x4b\x87\x26\x43\x7c\x8d\xa5\x34\x69\x4d\x78\x3c\x9e\xf9\x75\x28\x1e\xf0\x3a\x4c\xad\x56\xfd\xbc\x14\xe7\x15\xf7\x37\x02\xdc\xbe\xc2\xd7\xfd\xaf\xcb\xcb\xf3\x8b\xcb\xe9\xfa\x54\xf9\xa5\x09\xa4\xfc\x23\x9d\x9d\x9c\x3e\x11\x2c\x9e\x9e\xbc\x9b\x7a\x5c\x62\x81\xa0\x0a\xc0\x63\x57\xb1\xcd\xc1\xba\x1f\x1e\x93\xe1\x40\x44\xa7\xb5\xbd\x5d\xf9\x78\xff\x0d\x46\x09\x9b\x42\xa2\x23\xfc\x5b\xf0\x9d\x0a\xcf\xfb\x4d\xd1\x6d\xbf\x94\xd7\x91\x73\xbe\xdb\xf3\xdd\x91\xd8\x4f\xe4\xf8\x2b\x00\x00\xff\xff\x9f\xaa\x2b\x78\x9c\x06\x00\x00")

func dryrunMdBytes() ([]byte, error) {
	return bindataRead(
		_dryrunMd,
		"dryrun.md",
	)
}

func dryrunMd() (*asset, error) {
	bytes, err := dryrunMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dryrun.md", size: 1692, mode: os.FileMode(420), modTime: time.Unix(1454345227, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _envMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\x41\x6f\xdb\x3c\x0c\xbd\xeb\x57\xf0\x73\x3f\x60\x2d\x10\xbb\x48\xba\x53\x81\x1d\x82\xa1\x0d\xb6\xa6\x69\x81\x14\x18\x7a\xaa\x55\x9b\xb1\x95\xc8\x92\x21\xc9\x71\x8d\xa1\xff\x7d\x94\xdc\x18\x46\x97\x6e\xbb\xd9\xe2\x23\x1f\x1f\x1f\xc9\xe6\x35\xbe\x80\xd2\x2d\xd8\xa6\xae\xb5\x71\x16\x5c\x89\xa0\xb0\x05\xc5\x9d\xd8\x23\xcc\x7f\xac\x61\xc9\xab\xe7\x9c\x03\xaa\xbd\x30\x5a\x55\xa8\x1c\xec\xb9\x11\xfc\x59\xa2\x9d\x40\x5b\x8a\xac\x04\x6e\x90\x00\x99\xe9\x6a\x87\x39\xec\x05\x87\x9b\xdb\x75\x02\x0f\x25\x52\xc0\x07\x2d\xee\xd1\x70\x09\x2d\xef\x88\x44\xd3\xbf\xf3\x5c\x16\xc7\xb5\x24\xba\x4f\x14\xe5\x3b\xca\x01\xa9\xf5\xee\x3f\xc6\x4e\x4e\xe0\x5a\xf2\x02\xe2\x98\x52\x18\xa3\x8a\x90\xc6\x84\x0d\xff\x29\x6c\x7c\x8c\x4b\xa9\x5b\x0b\x9d\x6e\x0e\xa5\x8f\x36\x3b\xee\xf5\xa5\xd6\x96\x3a\x25\xb8\x57\xbc\x69\x54\xe6\x84\x56\xc0\x1d\x98\x46\x39\x51\x61\x02\xd7\xda\x10\x8e\x57\xb5\x44\x10\x0a\x56\x3a\xc7\x64\x6b\xa1\xb1\x42\x15\x90\xd6\x46\x67\x68\x6d\x42\x4c\xc9\x6a\x7e\x7b\x95\x02\xc1\x09\xb6\xd0\x07\x84\xb6\xc9\x02\x1d\xc5\x4f\x23\x0f\x88\xce\xd2\x04\x1e\xa9\xc5\x8a\x77\x04\x41\x22\x16\xb6\xef\xbf\x6a\xa4\x13\x9e\xc6\x13\xdb\x84\xb1\x31\x75\xb0\x86\xe0\x5e\x5d\xc9\x73\x9a\xcc\x52\x17\x85\xec\x68\x40\x05\x64\x5a\x4a\xcc\x1c\xc1\xb9\xca\x41\x38\xf2\x0e\x73\x4b\x3f\x30\xbf\xff\x46\xea\x76\xa8\x26\x21\xb3\x12\x45\xe9\x20\xc7\x5a\xea\x0e\x5a\xe1\xca\x4b\xc6\xd2\x34\x65\xff\x03\xf7\x3b\xf0\x16\x88\x2d\x2c\xef\x16\x8b\xe5\xe3\xd3\xc3\xdd\xcd\xd5\xea\x4b\x28\xe0\x89\xe2\x81\x28\x64\x8d\x5c\x21\x7d\xf1\x46\x48\x3c\x58\x73\x35\x19\x3d\x7e\xe8\xcf\xa0\xf8\xb8\x51\xfd\x04\x39\x7c\x5f\xdf\xad\xc0\x17\x4a\x8e\x76\x3b\xf0\xc0\x79\xcd\x5d\x79\xee\xf4\xb9\xb7\x63\x6b\xb5\xea\xdb\x5c\xf7\x23\x3c\x3c\xf6\x9a\x43\xf8\x27\x03\x88\xc6\x5a\xa3\x4b\x88\xa6\xb3\x8b\xe9\xe7\xd9\x74\x36\x9b\x5e\xd0\x67\xc4\x5e\x07\xb1\x5f\xb5\xda\x88\x02\x4e\xc9\xf5\x2d\x8d\x21\x54\xf3\x86\x1f\x16\x27\x3c\x9c\x11\x61\x8d\x99\xd8\x74\x1f\xc8\xa2\xf5\xf8\x63\x81\x09\xdd\xa2\xf3\x8b\xc1\xc3\x71\x50\xa6\x6c\x28\xed\xa9\x6a\xac\x7b\x82\x67\xda\x05\x67\x68\x30\x36\x79\xa7\x63\xc4\x46\x32\xfc\xd3\x3f\x88\x03\x78\x1d\x09\xbc\x37\x98\x61\x4e\x27\xfc\x66\x64\x3d\xfc\x03\x6d\x69\xd6\x18\x43\xc5\x69\xe9\x38\xad\xac\x0e\x76\xd2\x30\xe3\xdf\x4f\xb1\x6f\x39\x44\xde\x6f\x82\xf7\x69\x08\x1f\x1f\x90\x0d\xe3\x13\x74\x98\x7f\x1b\x15\xfb\x15\x00\x00\xff\xff\x01\x41\xcc\xd7\xbc\x04\x00\x00")

func envMdBytes() ([]byte, error) {
	return bindataRead(
		_envMd,
		"env.md",
	)
}

func envMd() (*asset, error) {
	bytes, err := envMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "env.md", size: 1212, mode: os.FileMode(420), modTime: time.Unix(1480275781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _faqMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x56\xc1\x8e\xdc\x36\x0c\xbd\xef\x57\x10\xc9\x21\x29\x30\x3b\xe9\xa5\x97\x5e\x82\x60\x8b\xa6\x5b\x34\x09\xd0\x0d\x90\x43\x90\x83\x6c\xcb\xb6\x32\xb2\xe8\x4a\xf2\x38\xf3\xf7\x7d\xa4\xe4\x19\x6f\x0b\x14\xcd\x8e\x2d\x91\x8f\x8f\x8f\x8f\xbe\x7b\xf9\x92\xfe\xe0\x95\x3a\xa6\x0b\x2f\x34\x99\x60\x06\x4b\xd3\xe2\xb3\x9b\xbd\x25\x1b\xce\x2e\x72\x98\x6c\xc8\xe9\xed\xdd\xdd\x63\x7e\x95\x68\x74\xc3\xe8\x2f\x14\x6d\xcb\x13\x5e\x74\xb6\xa3\xcc\xd4\x46\x6b\xb2\xa5\x64\x67\x13\xe5\x8f\x77\x5f\x9e\xc8\xb4\x2d\x2f\xb8\x49\x3d\x47\x4a\xd9\x0c\x2e\x0c\x64\x42\x47\x73\xe4\x6e\x69\xb3\xe3\xf0\x2c\xc3\x91\x3e\x8f\x2e\xc9\xdb\xb3\xeb\x6c\x22\x24\x00\x08\x04\x73\x89\xbd\xd1\xe3\xdc\x23\x71\xe2\x25\xb6\x36\x1d\x34\x96\xf1\x9e\xd7\xa4\xe8\x01\xc3\x9a\xe4\x00\xae\x86\xa0\x21\x9a\xb0\x78\x13\x05\x8a\x4d\x49\x4f\xec\x12\x92\x49\x08\xf7\xcf\xe2\xa2\xed\x8e\xf4\x64\x2d\x7d\x15\xdc\xa8\xa5\xc3\x6b\x67\x7c\xfa\xf6\xfa\xa5\x59\xd3\xfd\xee\xc9\x4f\xa5\x9a\x65\x9e\xfd\xa5\xd4\xb3\xd5\x29\x59\x7b\xe7\xed\xf1\xee\x4e\xa2\x3c\xbe\xfb\x40\x91\xbd\xd4\x81\x33\x8d\xa5\x25\x15\xaa\x36\x70\xc8\xdb\x9e\xf6\xc8\x4c\x3b\xee\xe1\xe1\x82\x26\xa0\x2e\xf2\x7c\xdf\xf1\x1a\xc8\x05\xca\x63\x21\xf7\x81\x03\x58\x91\x64\x68\xe1\x03\x32\x3c\x52\xb6\x29\x53\xbf\x04\x65\x36\x91\xe7\x16\xe4\x5c\xd0\xb7\x87\x25\x46\x04\x04\x31\xb8\x1d\x85\x4f\x0a\x4c\xab\xb9\x48\xda\xb8\x84\xff\x5f\x3a\x90\xcb\xb4\xf2\xe2\x3b\x41\x6e\xe8\x6c\xe3\x85\x40\x24\xc4\x91\x4d\x3a\x29\x5c\xa8\x44\x3a\x5d\x01\x1d\xe9\x8b\xbd\x89\x82\xd6\xe8\xb2\xa0\x97\xb7\xcd\xe2\x4f\xd2\x39\xf4\x28\x22\xc1\xe0\x5a\x21\xde\xbb\x26\x9a\xe8\xc0\x0f\xf8\x9c\x4d\x7b\x82\xf2\x80\x0b\x7d\x3e\x5b\x89\xaf\xa7\xdb\x91\x93\x0d\xc8\x1c\x86\x05\xef\x0f\x95\x13\x0e\x5a\x0b\xe8\x68\x39\x04\xdb\xea\x1d\x6f\x2e\x36\xa6\x8d\xa3\xbf\xcc\xd4\x74\x66\x57\x19\x1e\x4e\xc9\xfa\xb3\xdd\x74\x36\x99\x13\x12\xa2\x4e\x88\x46\x99\x58\x82\xcb\xf7\x4a\xa2\xe6\xbe\x5e\x2d\x42\x2b\xc7\x25\x0a\x4d\x0c\x12\x67\x8e\xd9\x34\x18\x12\xa7\x95\xbd\xc2\xa3\x95\x23\x0a\x82\x26\x1b\x5e\x32\x38\x0b\x1d\x4b\xc1\xed\xe9\xde\x85\xd2\x28\x99\x35\x27\x51\xf0\xbf\xce\xf5\xbd\x95\xbe\xe0\x27\xfa\xf7\x64\x23\x58\x86\x5e\x64\xd2\x6e\x3f\x44\x36\x89\x1e\x3c\x2f\xdd\xef\x1c\xa7\x32\x06\x00\xdb\x30\xe7\x94\xa3\x99\xf7\x03\xb1\x8e\x0e\x1a\xaa\x7a\x1b\x64\x24\x55\xad\x83\xcd\xda\x0c\xcc\x60\xcc\xb6\x3b\xa0\x23\x59\x60\x0c\x36\xd8\x28\xed\x26\xcd\x14\xb9\x59\x52\x45\xf3\xf5\xb3\x8d\xd1\xe0\xf2\xf4\xed\xf5\x98\xf3\x9c\x7e\x7d\xf3\x66\x5d\xd7\x63\xde\x1e\x1f\x1d\xbf\x29\xb3\xa0\xa6\x21\xe1\x5d\xe8\xa3\x01\x26\x8c\xf6\x12\x45\x18\x91\x97\x61\x14\x2a\x5c\x96\x7e\xf7\x36\xbb\xc9\x1e\x09\x75\x14\x06\x00\x30\xa1\x9a\x77\xb3\xfd\x01\x07\x92\xee\x73\xa6\xf6\x2a\xd6\x6d\x50\xb6\x02\xab\x3d\xc9\x6c\x5c\x5b\x78\x81\x44\x20\x0e\xbb\xb5\xbd\x5f\x34\xb7\xe0\xf2\x30\xaa\x7c\xe3\x69\x06\xc4\x03\x1e\x9e\x2c\x42\xe3\x34\x8a\xe4\x59\xd8\x34\x9e\xb4\x20\x8c\x6d\xd6\x18\x82\x52\xf4\xba\x69\x78\xd7\x8c\x2b\x4a\x31\x00\x08\x80\xd2\xe8\xa6\x49\x0e\x69\xc6\x2a\xd3\x54\x1b\x61\x80\x64\x77\x18\xca\x28\xf2\x06\x80\xe6\x52\x15\x7a\xc0\x5b\x39\x9a\xe8\x3d\xcb\xfd\xe3\x8e\x0e\x25\x49\x02\x8b\xbb\x09\x8f\x00\xa5\x03\xc5\x3f\x80\xf6\x33\xfe\xba\xb2\x0d\x21\x4f\x33\x8b\xc3\x20\xb2\x3a\x09\xd8\xfb\x8e\xc9\x50\x10\x57\xa9\x1d\x24\xd1\x6a\xbd\x97\x7f\xcf\x26\xaa\x85\xf5\xd0\x89\x84\x00\x14\x5b\xe6\xb9\xe3\x76\x11\x9a\x8b\xda\x04\xc1\xb3\x90\x90\x9f\x9c\x5c\x47\xe8\xcb\x3a\xf1\x94\xad\xc4\x74\x7c\xa6\x5d\xe3\x26\xb5\x36\xa8\xb1\x36\x13\x56\x3c\x04\x4e\xd9\xb5\xff\x51\x6b\xc3\x19\x2c\xc8\xb1\x62\xeb\x32\xd9\xd4\xd9\x19\x43\x54\x26\x5e\x81\x79\x0b\xf6\x84\x06\xd3\x48\x53\xcb\x0e\xa9\xd3\x07\xeb\xe9\xb7\x99\x5c\x81\xaa\x8c\x6d\x99\x4e\x44\x4a\x2e\xaa\xaf\x8c\xe6\x2c\x8e\x96\x99\x3d\x06\xb9\x03\x17\x20\xad\xf5\xe0\x2e\xca\x6b\x43\xe2\x30\xfe\x06\xf8\x95\x18\xf8\x6c\x1a\xe7\xa1\x86\xab\x79\x24\x37\x39\x59\x2c\xb8\x21\xb8\x00\x36\xcb\x82\x00\x1a\x03\xd5\x23\xef\xa7\xbf\x3f\xd0\x39\xd1\x8b\x68\xd6\x17\xb0\x7a\x2b\x4e\xf7\x9c\x1c\x44\x11\x85\xe1\x5e\x75\xb5\x8f\x40\x73\xfc\x8e\x36\xa8\x02\x76\xaf\xa1\xd6\xf7\x5c\x85\xb1\xa3\x54\xa0\xca\x86\xd4\x3a\xeb\xf0\x62\x27\x2c\x02\x43\xd9\xc5\xab\x7d\x3e\x81\xd8\x25\xa1\xb2\xd4\x56\xb6\x8b\x9a\x59\x95\xc0\x7d\x94\x8e\xdc\x62\xcc\xb2\xa1\xd4\x0c\x67\xc6\x12\xae\x26\xf6\x98\x2a\x60\xa9\xbc\x82\xd6\x41\xa0\x84\x5d\xfc\xb6\x2a\x53\x7e\x97\xaf\x82\x24\xdd\x04\x1a\x5d\xfc\xb2\xed\x0e\xb8\xb9\xa4\xdd\xdb\xde\xae\xf7\x23\x58\xc3\x9a\x25\xf0\xea\x5d\xc2\x22\x41\x51\xe8\x0e\x26\xbc\x57\xbf\x00\x48\x17\x51\xa1\x0b\x67\xec\x28\xc1\x87\x95\xbd\x34\x09\xfb\x5b\x3c\x54\xd6\x56\x2a\x0d\xdc\x8c\x5b\xa5\x5f\x07\x5e\x1a\x0f\xab\xd7\x6d\xad\xdb\x42\x3a\x66\x1c\xfc\x0f\x3b\x25\x28\x3f\xc5\x3e\xea\x55\xe8\x3b\xd5\xad\x87\x1e\x80\x48\xa8\xad\xef\x45\xb5\xa6\x87\x07\x56\xed\xaa\x24\x51\x43\x68\x2f\xd2\x2f\xf5\x3b\x24\xfb\xf9\xf8\xcb\x94\x0a\x57\xbf\x71\xb1\x08\x14\x76\x73\x87\x22\xc1\x20\xb1\x27\x57\x86\x2c\x3d\xa3\xed\x6a\x81\x3c\xdb\xa8\x1c\x15\xc2\xff\x7c\xfa\xf4\x91\xf8\x2c\xf3\x96\x3b\x18\x02\x9c\xdc\xb6\x06\x1b\xa2\x38\x83\x2b\xdf\x41\x93\x08\x41\x1e\xe2\x10\xec\xba\x58\x13\x0f\xe2\xd1\xfb\xcf\x85\xfa\xb1\xb7\xdf\x90\x98\xe7\xe2\x3e\xae\x2b\x5e\xac\x1d\x02\xb4\x4d\x91\xf2\x50\x46\x69\x08\xe5\x5b\x06\xde\xdb\x79\x19\xcb\xc1\x80\x82\xd6\x24\x71\x11\xde\xed\xce\x1a\x42\x6d\x89\x8b\x53\x70\x9f\x57\x74\xa6\xec\x81\x09\x5e\x50\xab\xd4\xe3\x9a\x28\x5a\x75\xab\xb6\xec\xdb\xf2\x4d\xb2\x5f\xc7\x98\x69\x97\x6f\x70\x7a\x27\x68\xae\x5f\x2e\xb8\xa2\x9e\x20\xce\x22\x07\x2a\x87\x30\x1e\xf4\x5b\x04\xb4\x6d\x0f\xfc\xd7\x5c\xee\x4b\x39\xc5\x2b\x92\x68\xe1\x2a\x98\xb2\x59\x8e\x77\xff\x06\x00\x00\xff\xff\x8c\xa7\xb0\x84\x25\x0b\x00\x00")

func faqMdBytes() ([]byte, error) {
	return bindataRead(
		_faqMd,
		"faq.md",
	)
}

func faqMd() (*asset, error) {
	bytes, err := faqMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "faq.md", size: 2853, mode: os.FileMode(420), modTime: time.Unix(1486529624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _functionsMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x56\x4d\x53\xdc\x46\x13\xbe\xcf\xaf\xe8\x5a\x1f\x5e\xa8\x5a\xeb\xc5\x10\x2a\xb1\x6e\x94\x09\x29\x2a\x40\x8c\x49\x39\x95\x13\x9a\x95\x7a\x57\x03\x9a\x19\x79\x3e\x16\xe4\x54\xfe\x7b\xba\x47\x1f\x68\x09\x49\xf0\x85\x62\x5b\xdd\x4f\x3f\xfd\x3d\xe2\x04\xd6\xd1\x94\x41\x59\x03\xca\x43\xa8\x11\xbc\x96\x4d\x83\x3e\x40\x34\x2a\x80\x32\x70\xd2\xe2\x63\x06\x33\x45\x87\xad\x43\x8f\x26\x78\x90\xf4\xf9\xb7\x1b\xb8\x90\x7a\x55\xc9\x49\x23\x13\xe2\x6c\xf8\xd7\x83\x8e\x9e\x61\xca\x26\x56\x08\x32\x40\x83\x92\x04\xd6\x90\x27\x1b\x5d\x89\xb0\x56\x0d\xc2\x9e\x8b\x26\x28\x8d\x50\x61\x8b\xa6\x22\xf0\xfd\x25\xf8\x58\xd6\x20\x3d\x59\x57\x44\xe1\xce\x83\x75\xa0\xa5\x32\xd9\xc6\x66\xf0\x4b\xcb\xf8\xc4\xb5\x83\x99\xe7\x3b\x4f\x04\x13\xa2\x96\x1d\xac\x10\xda\x46\x96\x58\x71\x1c\x1c\xdc\xed\xa8\xf8\x3f\x0f\x95\x72\x58\x06\xeb\xba\x5b\xf2\xd4\x62\xa9\xd6\x9d\x32\x1b\x22\x10\xa4\x6a\xfc\xe4\x9c\xcd\x34\x6a\xd2\x03\x72\x66\x4b\x19\x08\x8e\x88\xb0\x9c\x63\x3f\x3f\xb9\x04\x67\x1b\xcc\xe0\x7c\x9d\xc2\x62\x92\xd6\xe1\xc4\xc9\x73\x66\xb5\xf2\x9e\xd1\x5f\xa4\xda\xd9\xd8\xa7\xa9\x75\x76\xab\x2a\x4e\xc2\x5a\xc6\x86\xf2\xbb\x1e\x1c\x39\xfc\x12\x89\x6e\x45\xfa\xd8\x54\x9c\x11\xd6\xbd\x23\xfe\x3d\xcc\x9e\x47\x84\xc5\xc7\x5e\xe4\x17\xc9\x8e\x6a\x83\x8f\x52\xb7\x0d\xee\x53\x41\xde\xbc\x81\x0f\xd6\xac\xd5\x26\x3a\xc9\xee\x85\x28\x8a\x82\x6d\xc5\x1f\x02\x60\x51\xa1\x2f\x9d\x4a\x29\x5d\xe4\xb0\xb8\xb2\x15\x72\xc2\x07\x80\x89\xf4\x62\xc9\xca\x43\xad\x58\xd1\x90\xe2\x9d\xef\xc5\x7d\x96\x48\xfa\xee\xf0\x87\x24\x60\x25\x1b\x03\x49\x8e\x7b\x3b\x4a\x13\x1b\x49\x67\x72\xf9\xe0\x73\x25\x75\x9e\x1f\xbe\x3f\x3a\x3e\x38\x7a\xf7\xfe\xfb\xa3\xc3\xef\x72\xd6\xf8\x7f\x93\xba\x69\x21\xfe\x64\x8a\x89\xf9\x59\x8a\x9a\xba\xaa\x8f\x5e\x4b\x77\x4f\xb9\xa0\xe2\x14\xca\xd4\xe8\x14\x95\xa4\x98\x0a\xde\xe7\x70\x2a\xf9\x4e\x9e\x52\xba\x95\xf1\x01\x65\x95\x92\xf2\x06\x66\x91\x0b\x71\xfa\xf4\x03\xec\x3a\xd9\x4f\xf5\x82\x5f\x6b\x95\x6a\x19\x7d\xef\x9c\xbf\xce\xac\xd3\xac\x4c\xc3\x40\xe8\x6f\x21\x74\x2d\xe6\x50\xf8\xe0\xa8\xf6\x05\x09\xc6\x3a\xf6\xae\x87\x3c\x0a\xf1\x69\x68\xfe\x57\xb9\x1c\x27\x65\xc7\xdd\x92\xdb\xee\xa1\x46\x33\xb9\x58\x4e\x76\xc1\x72\x53\xa3\xd3\x8a\xba\x33\xd4\x34\x83\x0c\x33\x96\xd8\xd7\x4a\xd3\x1f\x1b\x9b\x8a\xd3\xc7\x16\x19\x9c\x11\xda\x58\xfb\x84\x1a\x98\x48\x6a\x3e\x86\x5d\x6c\x6c\x23\xcd\x66\xb1\x4c\x48\xa5\x34\xd6\xa8\x52\x36\x13\xb5\xe4\x96\xf5\x86\xf6\xa0\x5e\x24\xfa\xbd\x2b\x0e\xc8\x70\x45\x52\x89\x88\x1b\x43\x7c\x55\x6d\xaa\xcd\x7f\x64\xed\x2d\x4c\xf5\xee\x33\x58\x13\x70\x83\x4e\x88\x1f\xb7\xb4\x32\xc6\x9f\x60\xa4\xc6\x65\xcf\x79\xd8\x6a\x4f\x5b\xce\x6c\x2d\x37\x4f\x9a\x10\xd8\x28\xb2\x03\x64\xe3\x0c\x4e\xc7\xa9\x93\x0e\x73\x26\xd2\xb3\xcf\xb9\xcb\x78\x01\xf5\xe8\x05\xec\x4d\xfb\x28\xb5\xd3\x83\x0a\x35\x14\xe3\x47\x7c\x6c\xad\xe3\xd8\x46\x8f\xfb\x04\xd4\x76\xa1\xb6\x26\x9f\xb4\x48\x74\x27\xb7\x92\x04\x7d\xaf\x67\x97\xb4\xd5\xf2\x7c\xa0\x5f\xf4\xb1\xf5\xe3\x24\xc4\xe5\xf3\xe5\x33\xe4\x6c\x74\xb0\xe4\x4e\xd0\xb8\x91\xab\x2e\xa0\x9f\x67\x90\xd2\xfb\xef\xe9\x1b\x06\xf4\x69\x5d\x8f\x12\x86\xf4\x58\x5a\x53\xf9\x8c\x3a\x25\x0c\x7d\x33\xec\xf9\x32\x3a\x47\x19\xa3\xcd\x4b\x77\x80\xaa\x44\x2b\x07\xaa\x61\xaf\x78\xa6\x77\x4c\xfb\xce\x44\x62\x03\x7b\x47\x07\x07\x7e\xff\x9b\x48\xf1\x0e\x10\x62\x76\x56\x58\xd0\xf7\xe5\x37\x76\x07\x9a\xad\x72\xd6\x68\xe2\x4a\x1d\xf2\xf4\x03\xb6\xd2\x29\xb9\x6a\x76\xb3\x65\x57\xdc\x95\xc5\x0b\x84\xf8\x22\x18\xac\x3e\xa3\xf3\x1c\xa1\x10\x57\x51\xaf\xa8\xcd\x68\x5c\xc7\x6f\x30\x3b\x2c\xdb\x41\x8f\xae\xc1\x7c\x21\xf0\x7d\x30\x36\x0c\xb7\x46\x91\x4d\x41\xc7\xae\xb1\x5d\x01\xa5\xd5\x9a\x47\xe4\x41\x35\x0d\x1f\xc8\x2d\xc2\xbb\x83\x09\xe7\x85\xec\x3d\x63\xb8\x6d\x4b\x21\x08\x9e\x0e\x89\x7b\x6a\x75\x83\x58\xa5\x72\xc8\xb2\x44\xef\xb9\x58\xe9\xe2\xa6\xf3\x21\xe1\xf3\xc7\x0f\x5c\xe3\x48\x38\x1d\x6c\x9c\x8d\xad\x4f\x73\xea\xe3\xca\x20\x55\xb4\x66\x1a\x64\x3d\xdb\xa9\x19\xfc\xfe\xfc\x54\xed\x5e\xf4\x1d\xb8\x84\x96\xc4\x09\xf1\x35\xb9\x4e\xa1\x64\x23\xcc\x4f\x89\x94\x10\x17\x8a\xf1\xd7\x7f\x63\x7b\x7e\xea\x67\x98\xd2\x39\xd9\xfd\x23\x64\x1f\xd4\x0c\x6b\x88\xf2\x55\x18\x70\xaf\xfd\x2d\x5d\x2d\x21\xc6\x57\x07\x9c\x7c\xba\x1a\xd7\xf5\xcf\x97\x37\x70\x8f\xdd\xb4\x6c\xd1\x94\xae\x6b\xc3\x6e\x35\xa8\x2f\xf0\xc5\x0e\xe4\xb6\x40\xdd\x86\x8e\xe6\x38\xd0\x1c\x4b\x6a\x1c\x7e\x10\xd0\x12\x22\x44\x7e\x33\x8c\x2f\x8d\x61\x1c\x86\xc7\x01\x65\xc3\x6d\x15\xbd\x9f\xc8\xf5\x74\xca\x24\xed\x8f\x40\xab\xfe\x65\xb2\xfc\x5a\xd3\xf2\x2b\xb5\xc6\xcd\xf5\x0d\x7c\x89\x18\xd3\x6b\x65\x94\x5d\xdd\x10\xfb\x56\x95\xc9\xfd\xf0\x22\xe2\xa3\x93\xe2\x38\x25\x6c\xb8\x48\xe0\x70\x9d\x2c\xf7\x4e\x2f\xae\x69\xb2\xff\x0a\x00\x00\xff\xff\x8d\x12\x5d\x05\x43\x0a\x00\x00")

func functionsMdBytes() ([]byte, error) {
	return bindataRead(
		_functionsMd,
		"functions.md",
	)
}

func functionsMd() (*asset, error) {
	bytes, err := functionsMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "functions.md", size: 2627, mode: os.FileMode(420), modTime: time.Unix(1487186726, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gettingStartedMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x54\x4d\x6f\xdb\x30\x0c\xbd\xfb\x57\xb0\xc1\xb0\x62\x58\x1a\xdf\x03\xec\xd0\x43\x0b\x14\x68\xb7\x62\x3d\x0c\xc3\x3c\x38\x8a\x4d\xc7\xea\x14\xc9\x10\xe5\x26\xde\xb2\xff\x3e\x52\x72\xbe\xd6\x01\x33\x10\x7f\x48\x8f\x8f\x8f\x8f\x54\xb2\xeb\x0e\xb7\x50\x29\x0b\x2d\x9a\x0e\xb4\xd5\x41\x2b\xa3\x7f\x22\x28\x58\x2a\xd2\x15\x74\xde\x3d\x63\x15\x20\x38\x58\x61\x80\xc1\xf5\x40\x41\xf9\x80\xf5\x0c\x6e\xb5\xa7\x00\xd4\x61\xa5\x9b\x41\xb6\x3c\x5c\x7f\x79\x82\xca\x63\x8d\x56\x88\x08\x14\xc1\x5a\xde\x9d\xc5\x9a\xe9\x21\xb4\xc8\x94\xf8\xa2\x5d\x4f\x40\x4c\xcc\x3b\x53\x59\xb5\xe0\x7b\x0b\x0b\x25\x7a\x44\xc6\x62\x9e\x65\x8b\xc5\x22\x7b\x03\xb8\xed\x9c\x0f\xc2\x5c\x3e\x7e\xfe\x74\x7b\x77\x7f\xf3\x81\x8c\x0b\x2d\x5d\xb1\x90\x15\x32\xe2\x10\x14\x23\xb2\xaf\xae\xbf\x34\x06\x96\x31\x13\x71\x76\x4e\xbd\xd1\xa1\xe5\x9a\x1a\xdc\x48\x45\xeb\x2e\xd0\x74\xd4\x12\xcb\xbb\x24\xa8\xb1\x51\xbd\x09\x70\xaf\xd6\xcb\x5a\xc1\xdd\xf5\x03\x78\x67\x10\xde\x42\xe7\x8c\xae\x06\xa6\x48\xa4\x5c\x9e\x62\xca\x51\x35\x57\x7d\xe9\x11\x78\xad\x1e\xa2\x49\xee\x22\x4b\xca\xe1\xf4\x2a\xe3\x8d\xaf\x74\x1f\x5f\xce\x30\x39\x14\x00\x3b\x81\x16\xbb\x08\x2a\xa0\xc8\x21\xcf\xce\x20\xbc\xc9\x98\x5d\xf9\x2e\x22\xf9\xc7\x31\xa7\x90\x5c\x22\x85\x80\x9f\xb9\x00\xf9\x2b\x67\xd4\x11\x92\x97\xfc\x0d\x45\x59\x48\x74\x04\x30\xb2\xcc\x79\x81\x75\x33\xec\x86\xfd\xf2\xd1\x1b\xab\xd6\x08\xae\x49\x8d\x1d\x8d\x9a\xc1\x1d\x77\xbc\x75\xbd\xa9\xc5\x8b\xb5\xaa\x5a\x6d\xf1\xaa\xf1\x1a\x6d\x6d\x86\xa9\x34\x3c\xb4\x9a\x98\x48\x13\xf4\xc4\xd6\xb3\x29\xdc\x87\x46\x6f\x13\x51\xd3\xdb\xd8\x75\x92\x71\x48\x66\xcf\xb2\x28\xef\x71\x1c\x35\xc9\x3b\x87\xd4\xe3\xa3\x22\x9e\x51\xd7\x49\xa0\x32\xdc\x2b\xaa\xbc\x8e\x5f\xaf\x04\x9e\x73\x9d\x20\xe7\xf0\x30\x24\xd6\x61\x0f\x16\xec\xb7\xf7\xdf\x53\x4b\xb5\x5d\xc5\xae\x47\x48\x69\xa2\xb2\x72\xaf\x36\xce\xc2\x7f\xd1\xc6\xad\x68\x1c\x97\x11\xab\x42\x88\x16\xad\xf6\x53\xc4\x6e\xfc\x8b\x7a\xf6\x37\xf7\x2c\xdf\x17\xf4\x4c\xce\xbe\xde\x3d\xd8\x28\x35\x3c\x61\xe8\x3b\xa8\x78\xae\x0d\x06\x9c\x72\xd5\x9d\x71\x9c\xab\x75\x84\x47\xc3\x2f\x92\x35\xe3\x79\x49\x98\x34\xaa\xd9\x47\xb7\x81\xe0\x07\x6e\xc9\x8b\xfb\x21\x09\xa4\xff\xa4\x84\xef\x10\x7f\x38\x90\xe3\x71\x63\x24\xca\xdf\x86\x71\xd9\xaf\x49\x7c\x4e\xe6\x93\x8d\xf3\xa6\x9e\xfc\x8e\xc8\x3f\x01\x00\x00\xff\xff\xc8\xa7\xad\xff\x5d\x04\x00\x00")

func gettingStartedMdBytes() ([]byte, error) {
	return bindataRead(
		_gettingStartedMd,
		"getting-started.md",
	)
}

func gettingStartedMd() (*asset, error) {
	bytes, err := gettingStartedMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "getting-started.md", size: 1117, mode: os.FileMode(420), modTime: time.Unix(1471966032, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _hooksMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\xcd\x6a\x1b\x4d\x10\xbc\xef\x53\x34\xf2\xc1\x9f\x41\x12\xdf\x21\xe4\x10\x70\xc0\x31\x89\xed\x93\x21\x7e\x01\x8d\x76\x7b\xb4\xe3\xcc\x4e\x0f\xf3\x83\xad\x04\xbf\x7b\xaa\x67\xd7\x42\x04\x02\xb9\x08\x66\xbb\xab\xaa\xbb\xaa\xd5\xdd\x44\x7e\xa5\x5c\x63\x94\x54\x32\x95\x91\x29\x48\x71\x12\x48\x2c\x8d\x22\x3f\xf2\x9a\x5e\x46\xd7\x8f\x64\xbc\x97\x17\x3a\x4a\xa5\x22\xc4\xaf\xdc\xd7\xc2\x94\x47\xf6\x9e\x7a\x99\x26\x13\x06\x85\x27\xa9\x87\x51\x6a\x21\x43\xb6\x86\x5e\x99\x2e\x33\x79\x67\xb9\x3f\xf6\x9e\xb7\xf4\x4d\x12\xd0\x66\x8a\x9e\x1b\xd9\x64\x8e\x54\x33\xab\x32\x7e\x9b\xa2\x0a\xa4\x1a\xa8\x70\xc6\x48\xe8\xf7\x2e\x14\x17\x0e\xb4\x67\x2b\x89\x41\x3d\x70\xf4\x72\x5c\x6b\x0d\xbd\x25\x99\x90\xa3\x03\x61\x96\x9a\x7a\xc6\x3c\x03\x83\x54\x21\x5f\xcc\x9e\xfd\x9a\x6e\xc5\x5a\xe6\xa7\x3e\xb9\x58\x1a\x2c\xbb\xc9\x79\x93\xb6\x5d\x77\xdf\x24\x75\x8c\x3d\x08\x22\xf7\xce\x3a\x1e\xc8\x05\x8a\x49\x9e\xb9\x2f\xdb\xe7\xac\x76\xa4\xd3\x42\xed\xc3\x96\x66\xa0\xc1\x40\x8b\x1b\x0d\xa4\x0e\x9e\x6d\x3e\xb8\x04\x0a\x49\x18\x16\xbe\xb6\xea\x42\x7b\x5e\xdc\xd2\x83\xc5\x5a\xba\x3d\xc8\x1c\xb6\xfe\x4c\xff\x6b\x73\xa0\x96\xcf\x8b\x83\xcb\xa3\xf1\xb0\x35\x0c\x80\xe5\xe8\x31\xaf\x92\x71\x4a\xa2\x5b\x3c\x84\xc2\x29\x20\xa3\xe3\x8c\x80\xa5\xf9\x4f\x4f\x9d\x9a\x3e\x71\x28\x84\x80\x36\x62\x37\xa8\x6f\xf6\x72\x8a\x9f\xe0\x2e\xdd\x89\x37\xf0\x4d\x75\x04\xf5\xa4\xe1\xaa\xb7\x03\xe9\xf7\x6a\x0e\x9c\x21\x77\x71\x41\x4f\x33\x08\x85\x26\xd0\x75\x1b\xda\xed\xab\xf3\xc3\xae\x85\x77\xca\xea\xdd\x0c\xfa\xe9\x22\xb9\x4c\xda\x53\xe8\xbf\x39\x73\xd7\x06\x5b\x24\x68\xef\x82\x49\x8e\x5b\xe6\x2d\x54\x50\x4c\x4b\xa8\x57\xca\x3f\xe7\xfe\x37\x01\x90\xcd\x0d\x98\x49\xf9\x6d\xf5\x6d\x25\xbd\x23\xdc\xc2\xfa\xfd\x8e\x1a\x15\x8e\xd1\x84\x99\xc9\x58\x78\xf7\x2f\x44\x0d\xa3\x57\x55\x63\x5b\x63\x40\xfa\xc5\x59\xd3\x97\x7c\xd5\x3c\xf9\x3a\x1f\x36\xcc\xb8\xe7\xc4\x97\xf3\xff\x69\xf6\x1f\x34\x7a\x1f\xa7\x94\xce\xbc\x5e\xec\x87\xad\xbb\xdd\x4e\x6f\xab\xfb\xd5\x11\xad\x1a\x6e\xf5\x89\xf4\x81\x67\x13\xc4\x73\x75\xf7\xf8\xf8\x74\x8d\x55\xea\x2b\xdd\x3d\xde\x7c\xbf\xbd\xbf\x36\xd3\xf0\xf1\x03\x1d\x64\x19\x6a\x23\x38\x67\x9c\xa2\xfe\x6c\x0f\xb2\x5a\xcf\x04\x6d\x7a\x25\x80\xa7\x1b\xdb\xaa\x2b\x54\xde\xba\x37\xd5\xed\x7e\x07\x00\x00\xff\xff\x50\x2e\x7c\x0a\x0a\x04\x00\x00")

func hooksMdBytes() ([]byte, error) {
	return bindataRead(
		_hooksMd,
		"hooks.md",
	)
}

func hooksMd() (*asset, error) {
	bytes, err := hooksMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "hooks.md", size: 1034, mode: os.FileMode(420), modTime: time.Unix(1465855969, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ignoreMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x90\xc1\x4e\xc3\x30\x10\x44\xef\xfe\x8a\x91\x7a\x28\xa0\xe2\xdc\xcb\x0d\x09\x09\x4e\x7c\x00\x42\x8d\xeb\x6c\x92\xad\x1c\xaf\x65\x6f\xa0\xfd\x7b\x92\xa6\x45\x80\xb8\xd9\xde\x99\x37\xe3\x35\xaf\x49\x59\xa2\x0b\xa8\xad\x4b\x74\xe4\x2e\x4a\xa6\x1a\x2d\x07\x2a\x18\xdc\x09\x7b\x42\x0a\xce\x53\x03\x8e\xd0\x7e\xba\x65\x39\x90\xd7\x75\x41\x16\xd1\x0d\x24\xe3\x93\xb5\x9f\xa6\x25\x91\xe7\x96\x3d\xda\x31\xfa\x19\x8b\x86\xf3\x24\x95\xcc\x54\x2c\x5e\x14\x63\x99\xa8\x6f\xb6\x63\x5d\x82\x90\x9c\x2a\xe5\x88\x56\xf2\xe0\xf4\xfd\xa6\x57\x4d\x65\x5b\x55\x93\xe2\xbe\xf8\xc1\x7a\x19\xaa\x46\x7c\xa9\xbe\x2d\xab\xdd\xc5\xb3\x5b\x3c\xb7\x0f\x70\x21\x5c\x41\x05\x0d\xb5\x1c\xa9\xd9\xc0\x4d\xf8\x4c\xc1\x29\x7f\x10\x54\xfe\x2d\x05\x17\x1b\x44\xd1\x9f\x1f\x03\x6b\xa1\xd0\x5a\x3c\x9e\x66\x98\x1b\x83\x62\x2f\xda\xff\xd9\xd0\xec\xac\xaf\x4c\x7b\x28\x12\xeb\x73\xe4\x32\x6f\xac\x31\xab\x15\x9e\x8e\x6e\x48\x81\x8c\x79\xa6\x4c\xeb\x39\x0e\xb4\x3c\x2d\x3a\x8e\x1d\x3a\x41\x91\x31\x7b\xba\x2c\x7d\x06\xcf\x75\x7e\xb1\x2f\xa5\xb6\xc6\xd4\x75\x6d\xee\x6c\x27\xe7\xc3\x57\x00\x00\x00\xff\xff\x01\x63\x0b\xe0\xbf\x01\x00\x00")

func ignoreMdBytes() ([]byte, error) {
	return bindataRead(
		_ignoreMd,
		"ignore.md",
	)
}

func ignoreMd() (*asset, error) {
	bytes, err := ignoreMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ignore.md", size: 447, mode: os.FileMode(420), modTime: time.Unix(1455649920, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _infraMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x54\xcd\x8a\xe3\x46\x10\xbe\xeb\x29\x0a\xef\xb2\x3f\x30\x96\x21\xc7\xb9\x99\x65\x72\xca\xce\x21\x59\x08\x21\x04\x77\x59\x2a\xd9\xbd\xd3\xea\x56\xba\x5b\xd2\x88\x10\x08\x79\x06\x1f\x73\xd8\x67\xd9\x47\x99\x27\x49\x95\x5a\x96\x6d\x6d\x08\x18\xa3\xae\xee\xfa\xfb\xbe\xaf\x2a\xdb\x36\xf4\x0c\x3a\x80\xb6\x91\x0e\x1e\x23\x95\xd0\xeb\x78\x84\x5f\x3f\x91\xf7\x58\x39\x5f\xff\xf6\xee\x18\x63\x13\xee\x37\x9b\xbe\xef\xf3\x78\x36\xe7\xda\x6d\xde\x43\x74\xd0\x78\xd7\xe9\x92\x38\x42\xe5\x31\x44\xdf\x16\xb1\xf5\x04\x35\x5a\x3c\x50\x4d\x36\xe6\x30\x26\x29\x5a\xef\xf9\x64\x06\x70\x96\xff\xd2\x7d\x80\x1f\xb0\xde\x97\x08\x55\x6b\x8b\xa8\x9d\x0d\x77\x10\x1c\x0c\xae\x7d\x6b\x0c\x18\xfd\x44\xfc\xb4\x47\x1b\x25\x53\x1b\x08\xe6\xb2\xc0\x79\xf8\x60\x5c\x5b\x7e\xcf\x07\x14\x57\x79\x92\xa2\x02\x96\xa5\x16\x13\x1a\xf0\x14\x5c\xeb\x0b\xce\x14\xda\xe2\x08\x38\x67\x9c\xcc\x79\x96\xbd\x7a\x05\x1f\xc5\x4f\xdb\xc3\xa2\x8b\x2c\xfb\x74\x24\x50\x38\x82\x24\x37\x0a\x0a\x57\x73\x92\x52\x30\xa3\xaa\x22\x2e\xba\x93\x1a\x11\x7a\x8f\x4d\x43\x1e\xd0\xbb\x96\xef\xa3\x38\xce\x68\xcd\x7e\x13\x18\x13\x68\x5c\x14\x75\xe4\xb9\xcc\x0e\xbd\xc6\xbd\x61\x8b\x04\x3f\x92\x69\xc2\x8c\xec\x05\x54\x0e\x05\x75\x6b\xa2\x6e\xcc\x35\x14\x64\x3b\xed\x9d\x15\xb0\xa5\x9f\x07\xe4\x46\xaf\x6c\x73\xe7\x2b\x8e\x58\xae\x04\xb9\x55\x88\x8c\xd3\x8a\x11\xee\x48\xc8\x1f\xcb\xcd\x37\x0b\x0e\x4b\xed\xb9\x41\xe7\x87\x1c\x18\x65\x86\xb2\x22\xa6\xb0\x60\xae\x23\x23\x3d\x80\x71\xee\x89\x71\xac\x29\x1e\x05\x3b\xa1\xeb\x3e\xcb\x94\x52\xd9\x6d\xa0\x4d\xf6\x72\xfa\xe7\xe5\xf4\x17\xff\xa4\xa9\x92\x8f\x7f\x7f\xfd\xf2\xf5\x0b\xbc\x9c\x4e\x93\xb9\x46\x6d\xf3\x58\x5d\x3d\x1c\x2b\xfc\x9f\x97\x92\x26\x93\xb2\xe8\x19\x6b\xc1\xe3\x8a\x26\x58\xaf\xb9\xff\x31\x17\x34\x06\xad\x5a\xd2\x45\xbf\xb7\xba\x43\x43\x49\x58\xd2\x7c\xe5\x8c\x71\xbd\xb4\x31\x31\x75\x97\x06\x81\x3f\x07\x50\x6b\xe6\x47\xbd\x65\x4a\x30\x04\x1e\x11\xf6\xa1\xe7\xc6\x85\x51\xf5\xb3\xfe\x2a\xef\xea\x91\xde\x3c\x81\xf0\x1a\x8a\x72\x21\xa8\xcd\x58\xd2\x9b\x37\x30\x2b\x63\xac\x2f\x35\x23\x5a\xbb\xa6\x8d\x6b\x0e\x0d\x15\xba\xd2\x9c\xb2\xd3\x98\x34\x35\xb6\xa6\xa0\x32\x78\xb8\x13\x2a\xf7\x03\x94\x54\x21\xab\x02\x2a\x34\x26\xc0\x1e\x8b\x27\x70\x89\x52\x35\x5d\x3d\x5c\xc2\x2a\x81\x85\x85\x1a\x79\x10\x2b\xf9\xfe\xcc\xa8\xe4\x9f\x83\xb3\x69\x14\x2e\xb2\x9a\x35\x99\x65\x1f\xe6\xe1\xbd\xc5\xea\x4a\xb6\xac\x97\x84\xc9\x08\xcf\x1c\x85\x05\xb1\x66\x6a\xfa\xb0\xf3\x74\x60\x94\xd4\x18\x61\xfb\xf3\x4f\x90\xce\x60\xb1\xa6\x8b\x42\xdb\xb0\xee\x29\xc4\xf5\x77\xab\xd1\x8d\xc1\xdc\xd1\x75\xed\x71\x81\xd1\xad\xf7\x52\xdf\x73\x8c\xf3\x7a\xd9\x79\x67\x28\x45\x99\xd6\x80\x18\x60\xfb\xe3\xe3\xb7\x4f\x1f\xb7\x1f\x1f\xd4\x72\x3f\xc9\xd3\x20\x98\xef\xc6\xfb\xdd\xee\xbf\xfd\x76\x52\xd7\xb7\xce\x62\xbd\xf5\x16\xc4\x1f\x5d\x14\x8c\xd7\xf0\x4b\x5a\x7b\x71\x68\x74\xc1\x54\x0e\x60\x29\xa1\xc9\xaa\xd3\x07\x0b\xea\xf5\x1f\xb7\xa9\xea\xe1\xfc\xf9\xe7\xfd\xb4\x5f\x95\xbc\x4f\xb2\x11\xb2\x30\x8e\xcd\xae\xa6\xdb\x15\xa0\xd1\x8c\x14\x4b\x6b\x9e\xe6\x32\xe7\xd4\xf3\x9e\x5b\xf6\x7f\xcb\xb0\x75\x11\xb0\x43\x6d\xc4\x04\xad\x8d\xda\x24\x45\x9c\xd7\x37\x1c\xb1\x23\xd8\x13\x59\x56\x65\x63\xdc\xc0\x0d\xbc\x13\xed\xa6\xe9\x4c\x36\xf5\x1e\xb8\x2e\x43\x3c\x17\x2c\xd4\x82\xf2\xec\xdf\x00\x00\x00\xff\xff\xe6\xd0\x61\x9a\x88\x06\x00\x00")

func infraMdBytes() ([]byte, error) {
	return bindataRead(
		_infraMd,
		"infra.md",
	)
}

func infraMd() (*asset, error) {
	bytes, err := infraMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "infra.md", size: 1672, mode: os.FileMode(420), modTime: time.Unix(1486498028, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _installationMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x90\xbd\x6a\x2b\x41\x0c\x85\xfb\x79\x0a\x95\xf7\x82\xd9\xed\x5d\x86\x34\x81\x10\x17\x2e\x52\x84\xc0\xc8\x3b\xb2\x77\x60\x2c\x2d\x92\xc6\xeb\x85\x3c\x7c\x26\xfe\x2b\x52\xa7\x51\x21\xd0\xf9\x3e\x9d\xb0\x61\x38\xe2\xb0\xd9\xae\xe0\x35\x73\x3d\xaf\x40\x14\x36\x13\xf1\xd3\xf6\x19\xb4\x32\xf8\x48\xb0\x97\x52\x64\xce\x7c\x58\x87\x10\x63\x0c\x43\xd5\x02\xa3\xfb\x64\xeb\xbe\x57\x9c\xbb\x43\xf6\xb1\xee\xaa\x91\x0e\xc2\x4e\xec\xdd\x20\xc7\x1e\x27\x3a\x5f\xc7\x11\xcd\x49\xfb\xcc\xe6\x58\x4a\x67\x23\x7c\x81\x8d\x97\xac\xf0\x26\x4e\x8d\x82\x0e\x8b\xd4\xe6\xb2\x00\x13\x25\x70\x79\xe0\xa3\xd5\x24\x11\x4e\xa4\x96\x85\x61\x47\x4d\xe6\xe2\x89\xa5\xa5\x32\x7a\x3e\x51\x59\x60\x18\x65\x66\x88\x7d\x35\xed\x8b\x0c\x58\xe2\xfa\x0f\x6d\x9b\xc2\x43\xb9\x75\xf6\x9e\x39\xc9\x6c\xd0\x06\x17\xc1\x04\x1f\xbb\xcc\xa8\xcb\xe7\xbf\x3b\xe9\x4a\xf9\x15\xad\x54\x08\x8d\xec\x7f\x17\xc2\xcb\xbe\x3d\xa0\x84\x69\x81\x1b\x8a\xd2\x0a\xea\x74\x50\x4c\x04\x73\x3b\xbf\xd5\xfd\x73\x79\xdf\x5f\x16\xdf\x01\x00\x00\xff\xff\xfb\xea\x57\x0b\xb5\x01\x00\x00")

func installationMdBytes() ([]byte, error) {
	return bindataRead(
		_installationMd,
		"installation.md",
	)
}

func installationMd() (*asset, error) {
	bytes, err := installationMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "installation.md", size: 437, mode: os.FileMode(420), modTime: time.Unix(1471966032, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _invokeMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x55\x5b\x6f\x9b\x58\x10\x7e\x0e\xbf\x62\xe4\x56\xca\x4b\xc1\x17\xe2\xab\xf6\xc5\xb1\xa9\xe2\xae\x2f\x2b\x4c\xfb\x52\x55\xf2\x00\xe3\x98\xf6\xc0\x61\x39\x87\x24\xde\x6c\xfe\xfb\x9e\x03\x4e\x02\x4a\x2c\x37\xda\x3c\x72\x66\xe6\x9b\x6f\xbe\xb9\x60\x8c\x53\xba\x03\x64\x8c\xdf\x0a\xd8\xf3\x1c\x24\x87\x28\xb9\xe1\xbf\x08\xb6\x79\x12\xc8\x88\x27\x02\xb6\x19\x8f\x41\xee\x08\x02\x1e\xc7\x98\x84\x26\x8b\x12\xfa\x04\x3c\xd5\x66\x15\xbb\x87\x14\x85\x88\x92\x6b\x40\xf8\xb2\x5e\x2d\x81\x6e\x28\x91\xc0\x33\x10\x32\x23\x8c\x35\xe8\xda\x9b\xce\x96\x16\xcc\xe4\xb9\x80\x28\x4e\x79\x26\x51\xb9\x28\x43\xc2\x25\x29\x70\x94\xb0\x29\x13\x6f\xe0\x36\x62\x0c\xe8\x8e\x82\xbc\x30\x11\x64\x14\x6b\xaf\x39\xc6\x7e\x88\x4f\xc4\x40\x51\xd1\xe1\xc0\x78\x50\xb0\x78\x0c\x51\x75\x64\x4f\x5e\x3a\xe7\x4b\xc4\x8f\xf3\xb1\xe7\xac\xbd\x97\x90\x37\x18\x31\xf4\x19\x59\x86\xf1\xe1\x03\x38\x77\x18\xa7\x8c\x84\x61\xcc\x4a\x51\x6e\x23\xb9\xe3\xb9\x54\xa9\xcb\x22\x47\x86\xb1\xd9\x6c\xc4\xce\xf8\x08\xa8\x95\x3c\x68\x17\x70\xc6\x28\x90\xa6\x90\x28\x85\xf6\xa8\x01\x54\x44\xaa\xc4\x53\xb0\xe3\x60\x26\x70\x7e\x0f\x8d\x1b\x64\x39\x35\x46\xd0\xf0\xb8\x1f\x15\x84\xb7\x94\x65\x24\x1b\xf0\x70\x0e\xff\xd6\x52\xe5\x69\x4a\x59\x80\x82\x8c\x5a\xdc\xea\x72\x06\xde\x95\x03\x9f\x1d\xd7\x75\x3c\x15\x57\x63\x51\x74\x54\x95\x1d\x31\x3a\x52\xc1\x13\x2c\xfc\x51\x32\xb5\x7e\x0a\x9e\xd4\x40\xb0\x2c\x46\xc8\x30\x4a\x20\x60\x51\xea\x73\xcc\x42\x08\x51\x62\x05\x34\xf5\xd5\x70\x28\xd5\xeb\xac\x31\x97\xbb\x3a\xa3\xc7\x0e\x28\x2c\x84\x30\xda\xaa\x82\xf5\x10\xa5\x19\xff\xa9\x94\x3c\x0e\x68\x4e\xd4\xf4\xc9\x5d\x53\xf2\xe6\xc1\xf7\x65\x8e\x75\x31\x86\x7a\x40\x4b\x93\x80\x18\x7f\xe9\xcf\x38\x67\x32\x52\x0d\x56\x13\xf6\x77\x4e\x42\x8a\x4f\x70\x4d\x09\x65\x28\xb5\x55\x57\x52\xd6\xf8\x3d\xdd\xf1\x64\xff\xe3\x7b\xfb\xc7\x91\x86\xe5\x82\x32\xad\xfb\xfd\x7d\x82\x31\x3d\x3c\x1c\x1a\x55\x84\x1d\x6f\xd8\x21\xac\x31\x75\xe6\x0b\xc7\x85\xc5\x78\xbe\x5a\x3a\x8d\x87\x67\xc3\x97\x09\xb8\x8e\xf3\xcd\x59\x57\x1f\xe7\x5f\x97\x63\xf8\x3c\x77\xbc\xc9\x95\xe3\x2a\x83\x65\x59\x6f\x2d\xb3\x58\x1d\x35\xc7\x69\x2e\x8b\x4a\xcb\x25\x13\xa9\xda\x76\x52\xeb\x74\x2d\xde\xb1\x4c\x30\x4d\x8d\x68\xac\xbd\xb1\xeb\x81\x5b\x32\x98\x85\x23\xb0\x5b\x34\xe8\xf4\xf0\xc2\xc4\x9e\xdf\x35\xdb\x6d\xea\x9a\xc3\x4e\xb7\x6f\x06\xed\xee\x85\x4d\x43\xbf\x6f\x63\x00\xdf\x28\x13\x6a\x2c\x46\x8f\x1b\x6b\x38\xcb\xe9\x5b\x41\x0c\xd7\xf9\x6b\xf5\xf6\xdc\x67\xd3\x5c\x0f\x82\x4e\xde\xb2\xfa\x36\xc4\xe2\xec\x52\xdd\x11\x0a\xe1\xd9\xd0\x6e\xb5\xd4\x3b\x9c\x2d\xd4\x85\xca\xf6\xb0\x8e\xfe\x21\xf5\xd8\x19\xc0\xe2\xf2\x6c\x81\x77\x70\x78\xff\x2a\x28\xd4\xce\xea\xf9\xb9\x8f\x93\xd5\xdc\x53\x77\xc0\xbd\x5a\x4d\x8b\x06\xbf\x22\xd0\xb6\xe5\x77\xec\xa0\x42\x12\x5b\xb6\xe2\x1c\xf6\xec\xf0\x62\x10\x60\xd7\xc6\xdf\x10\xe8\x34\xc8\xab\x02\x9d\x0e\xab\x08\xd4\xb1\xba\xbd\xff\x2f\xd0\xb0\xae\xcf\xd8\x5d\xcd\xc7\x70\xe9\x4c\xfe\x3c\xa2\x4e\xb7\x4d\xbd\x7e\x85\xe1\x60\xd8\x19\x9a\xdb\xae\x6d\xf7\x07\xb4\x6d\x6d\x2f\xfa\xbf\xa3\xce\x49\x90\xd7\xd5\x39\x19\x56\x1b\x9f\x4e\xe7\xbd\xd5\x29\x2e\xfc\xe1\xba\x57\x6e\x80\x3e\x51\xb0\x93\x32\x15\xa3\x66\xf3\x5a\xdd\xae\xdc\xb7\xd4\x6f\xbb\xb9\x8f\x88\x85\xa2\x59\x6c\xaa\xf1\x5f\x00\x00\x00\xff\xff\x88\xee\x91\x60\xf6\x07\x00\x00")

func invokeMdBytes() ([]byte, error) {
	return bindataRead(
		_invokeMd,
		"invoke.md",
	)
}

func invokeMd() (*asset, error) {
	bytes, err := invokeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "invoke.md", size: 2038, mode: os.FileMode(420), modTime: time.Unix(1478797364, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _javaMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8e\xb1\x4e\xc4\x30\x10\x44\xfb\x7c\xc5\x48\x34\x20\x91\xa4\xa7\xbb\x16\x41\x03\x12\xb4\xde\xd8\x73\x17\x07\xc7\x0e\xb6\x43\x0e\xbe\x9e\xcd\x5d\x75\xc5\x4a\xab\x9d\x99\x37\x7b\x87\x37\x7e\xaf\x3e\x73\x66\xac\xa5\x69\x0e\x0b\xcf\xe0\x79\xa1\xad\x05\x75\x94\x8a\xdf\xb4\x66\x3c\x7f\xbc\x62\xc9\x69\xd2\x33\x4e\x8c\xcc\x52\x09\xc1\x51\xf5\x49\xf2\x23\x36\x5f\x47\x48\x08\x70\x5c\x18\x1d\xa3\xf5\x2c\xf0\xd1\x86\xd5\xd1\x75\x37\x25\x38\xa6\x7c\xa5\x6a\x14\x35\x61\x4b\xf9\xeb\x4a\xd8\xdb\x9f\x9a\xa6\x85\x11\xdd\x3a\xd5\x0d\x46\x29\xbb\x69\xa0\xe2\x40\x75\x31\xc3\x54\xc9\x27\xd6\xde\x40\x51\x66\x58\x7d\x70\x7d\xf0\x43\xe9\x8d\x66\xf7\xc0\xe1\xf3\x1d\x2f\x32\x0f\x4e\x6e\x3f\xba\x37\x36\xcd\x9d\xcc\xf2\x97\xa2\x6c\xa5\xd3\x69\xc3\xc5\xd7\x4e\xf2\x23\xad\x4d\x99\xe6\xa1\xf9\x0f\x00\x00\xff\xff\x7a\x6d\x57\xa8\x16\x01\x00\x00")

func javaMdBytes() ([]byte, error) {
	return bindataRead(
		_javaMd,
		"java.md",
	)
}

func javaMd() (*asset, error) {
	bytes, err := javaMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "java.md", size: 278, mode: os.FileMode(420), modTime: time.Unix(1459710048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _linksMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\xd0\xcf\x4e\xc4\x20\x10\x06\xf0\x7b\x9f\x02\x6f\x72\x68\xb9\xfb\x02\x7a\xd1\x98\xec\x71\x63\x0c\xb4\x5f\x58\xb4\x14\x32\x33\x74\x57\x9f\x5e\x4a\xfc\x77\xa9\xf1\x42\x32\x99\xf9\xc1\x7c\x74\x5d\xaf\x8e\xb7\x41\xee\x8a\x7b\xba\x3e\x89\x64\xbe\x31\xc6\x07\x39\x15\x37\x8c\x29\x1a\x9b\x71\x69\x87\x56\x84\x9c\x38\x48\xa2\xb7\xcd\xdc\x63\x0a\x25\xfe\x98\xd8\xea\x6f\xd3\x33\x68\x05\xcd\x60\xd6\xca\xcd\xc9\x6f\xe6\x91\xd2\x0b\x46\x51\xb8\xd8\x98\x6b\xeb\xef\x17\x8d\x10\x60\xa2\x65\x01\x99\xe7\x2f\xa3\xd5\xb9\xce\x2a\x4e\x85\x46\xb4\xe5\xd3\xfe\x35\x3e\xf5\x9f\xbb\x97\x45\x42\x84\xca\x76\x7c\xb5\xbe\xb9\x87\x34\x61\x5f\x2e\xb5\xbb\x6f\xaf\x8e\x87\xb9\x56\xea\x20\x56\xca\xaf\x18\x2d\xf9\x84\x75\xb0\xef\x85\x70\x86\xab\xff\x05\x1e\x16\x88\x71\x76\xf2\x18\x78\xf5\xfa\x5f\xe3\xba\xfb\x08\x00\x00\xff\xff\x12\x27\x59\x3f\x9a\x01\x00\x00")

func linksMdBytes() ([]byte, error) {
	return bindataRead(
		_linksMd,
		"links.md",
	)
}

func linksMd() (*asset, error) {
	bytes, err := linksMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "links.md", size: 410, mode: os.FileMode(420), modTime: time.Unix(1471966032, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _listMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x92\x4d\x8b\xdb\x30\x10\x86\xef\xfa\x15\x83\xd3\x63\x9c\xc6\x76\x42\x1b\x41\x21\x3d\xf4\xd6\x63\xef\xc9\x24\x1e\xc7\x2a\xfa\x30\x23\x29\x1f\xff\xbe\x92\x5d\x97\x6e\x58\x58\x58\xd8\x8b\xb1\x34\x33\xaf\x9e\x79\x67\xc4\xf7\x81\xee\xe0\xe3\x30\x38\x0e\x1e\xb4\xf2\x41\xd9\x0b\xb8\x0e\xba\x68\xcf\x41\x39\xeb\x41\x59\xb8\x22\x2b\x17\x3d\xb8\x18\x86\x18\xfc\x12\xce\x91\x99\x6c\xd0\x0f\xe8\xa3\x41\x5b\x76\xac\xc8\xb6\xe9\x18\x88\x8d\xb2\xa8\xff\xa6\x02\xda\x16\x8a\xd0\x25\x01\x5f\xcc\xef\x40\xe7\x38\xa9\x06\xba\x30\xe6\x27\xe0\xa6\x42\x0f\xbf\x88\x19\x53\xc4\xac\x84\x58\x2c\xe0\xc7\x1d\xcd\xa0\xc9\x0b\xf1\x33\x41\x01\x6a\xfd\x1f\x52\x56\x0d\x3d\x29\x86\xb3\xb3\x9d\xba\xc4\x49\x48\x0a\x71\x3c\x1e\x7d\x2f\x3e\x01\xe6\xbe\x72\x3b\x42\x00\x9c\x90\xd3\x17\x80\xa3\x0d\xca\x90\x04\xeb\x5a\xfa\xed\xc7\x3b\x43\xc6\xf1\x43\x42\x55\x7f\x35\xa7\xf1\x26\xa7\x24\x7a\x09\xdb\x29\x83\x9d\x4e\x25\xc8\x56\xe2\xcd\x4b\x85\x46\xca\x7a\xd7\x6c\xd7\x4d\xb5\xfb\xd2\xd4\x1b\x99\xe3\x9f\x35\x9a\x53\x8b\x63\x7e\x9f\xe8\x34\xb1\x4c\x2d\xb6\x74\x5f\x4d\xc7\x31\x82\x5a\xa1\x27\x2f\x67\xfb\xf6\xd7\x66\x99\xcc\x70\xfb\xeb\x26\x63\xa6\xbf\x37\x31\xb7\x55\xfd\x8c\x59\xad\x3f\x9e\xb3\xaa\xb3\xb3\x42\xfc\x1b\x52\x5e\x89\x79\x1f\x5e\xb3\x1d\xca\x72\x9a\xba\xc8\x57\x87\x79\x74\x87\x34\x8a\x6f\xc5\xcc\x38\xc1\xc8\xe8\xcb\x1b\xf9\x50\xd6\x2f\x79\xe7\x1a\x19\x68\xdc\xca\x5c\x5b\x3c\xc9\x25\xcb\xde\x2d\x97\x6a\x8b\xb1\xab\x3f\x01\x00\x00\xff\xff\x7a\x38\xa6\xf1\x05\x03\x00\x00")

func listMdBytes() ([]byte, error) {
	return bindataRead(
		_listMd,
		"list.md",
	)
}

func listMd() (*asset, error) {
	bytes, err := listMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "list.md", size: 773, mode: os.FileMode(420), modTime: time.Unix(1467166413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _logsMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x53\xb1\x8e\xd4\x30\x10\xed\xf3\x15\x4f\x39\x0a\x40\xb7\x27\x51\xd0\xd0\x01\xe2\x2a\x24\x3a\x10\xdd\xce\x25\x93\x8d\x25\xc7\x8e\x3c\x63\xf6\xf2\xf7\x8c\x9d\xdd\x1c\x77\x04\xba\xd8\x9e\xf7\xe6\xbd\x79\x93\xe6\xe3\xcc\x8f\x70\x02\x17\x94\x4f\x89\x94\x7b\x9c\x9d\x8e\xf8\xec\x63\xee\x7f\x90\x76\x23\xbe\xc6\x93\x40\x23\x7e\x39\x3e\x43\x47\x46\xcc\x3a\x67\x45\x1c\x30\xe4\xd0\xa9\x8b\x41\xee\xf0\x69\x41\xcf\x03\x65\xaf\xb5\xc6\x17\xd0\x10\x13\xc8\xfb\xa7\x32\xe3\xb6\xe3\x03\xa3\x77\x32\x7b\x5a\xb8\xbf\x45\x0e\x9e\x45\x10\x83\x11\x27\x4c\x31\xf1\x56\x8f\x40\x13\x0b\xc8\xae\x66\x12\x31\x6d\x26\xe3\x48\x45\x72\xe1\x3f\xde\xe1\x67\xcc\x98\x68\xb1\x2e\x12\x21\x33\x77\x6e\x58\x6a\xff\x3e\x9b\x99\x42\x61\x2a\xd5\x4d\x6c\x06\x71\x1e\x9d\xd9\x29\xaf\xa3\x13\x8d\x69\x29\xc6\x37\x25\x78\x7d\xd1\x5f\xcd\xbe\xc7\xe4\x42\x56\x96\x37\xb7\x20\xd3\xcd\xa6\x9b\x8a\x23\xef\xe3\xd9\x85\x13\x28\xf4\x18\x9c\x57\x4e\xe5\x94\x58\x0a\xf2\xae\x69\x6e\x6e\xf0\xe5\x91\xa6\xd9\x4c\x35\xcd\xf7\x32\xb2\x3f\x27\xb0\xce\xa5\x4c\xd8\xf4\xd4\x39\x91\xe8\x53\xb3\x0f\x4d\x73\x3c\x1e\x65\x6c\x5e\x61\x73\x59\x6e\x2e\x4c\xdb\x50\xdb\x3c\xcf\x9c\x3a\x12\x6e\xab\x90\xd6\x44\x5d\xcf\xdb\xb0\xf7\xc8\xb0\x01\xb1\x41\xd6\x06\xf7\xd5\x59\x89\x40\xc9\xf9\x6b\x86\xd7\xac\xff\x4a\x72\x97\xfc\x30\x3c\xe3\xa2\x4b\x22\xae\xdb\x70\xff\x80\x19\x7f\x7c\x06\x5d\x27\x6b\xa1\x3c\x2c\x16\xbd\xda\x77\x40\xcb\x29\xc5\xd4\xfe\x87\x02\x87\xc3\x0a\x44\x2d\xdd\xad\xb8\xbf\xbc\xd5\x6e\xdf\x56\x77\x5b\x10\x63\xcc\xa9\x6c\x4c\x41\xec\xf7\x39\x88\x0b\x1d\xe3\xdd\x8b\x6b\x29\x37\x95\xd2\xfe\x96\x97\x3b\x5f\xd7\xae\xac\x32\x44\x29\xe9\x9a\x3f\x5a\xca\x3a\xee\xbb\x29\x2f\x6f\x2b\xdd\xef\x00\x00\x00\xff\xff\x6b\xf0\x43\xfc\xa0\x03\x00\x00")

func logsMdBytes() ([]byte, error) {
	return bindataRead(
		_logsMd,
		"logs.md",
	)
}

func logsMd() (*asset, error) {
	bytes, err := logsMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "logs.md", size: 928, mode: os.FileMode(420), modTime: time.Unix(1462580160, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metricsMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x91\xcd\xae\xda\x30\x10\x85\xf7\x7e\x8a\x23\xd1\x25\x54\x89\x49\x58\xb0\xef\x1b\x54\x5d\xc7\x75\x06\x32\xaa\x7f\x52\xff\x04\x78\xfb\x3a\x51\x40\xb0\xa0\x57\xf7\xee\xec\x99\x39\xc7\xdf\xf1\x88\x9f\x03\xa1\x53\x23\x5d\x61\x29\x05\xd6\xb1\x83\xf6\xd6\x2a\xd7\x63\x0c\x7e\xe2\x9e\x22\x14\xfe\x66\xd6\x7f\x70\x36\xca\x69\x82\x4a\x48\x45\xe5\x27\x0a\xca\x98\xbb\x0e\x27\x1f\x70\xf3\x39\xe0\x94\x9d\x4e\xec\x5d\xdc\xa2\xe7\x38\x1a\x75\x63\x77\x5e\x24\x2e\xdb\xdf\x14\xe0\x4f\x60\x37\x79\xad\xd6\xa9\xe4\x93\x32\xa0\x2b\xe9\x3c\x57\xd0\xe7\xb0\xb4\x4a\x67\x08\x3e\x25\x53\xf4\x5b\xcc\x48\x14\x82\x0f\x11\x17\x4e\x03\xbb\xc2\x75\xe6\x89\x1c\x12\x5b\xc2\x48\x81\x7d\xff\x5d\x88\xcd\x06\x3f\xae\xca\x8e\x86\xa2\x10\xbf\x98\x2e\x98\x29\xef\x50\x0f\xdc\xd5\x63\xc6\x32\x2a\x26\xc8\x06\x43\xa1\x8f\x47\x21\xba\xae\x8b\x83\xf8\x86\xe7\x6f\x11\x22\x8f\xe5\x09\xad\x22\x09\x3c\xe3\x1f\x51\xcb\x46\x96\xda\x9d\xfa\x88\x43\x2b\xf7\x8d\x8d\xa5\xb6\xf2\x53\x99\xaa\xca\x75\xc1\x9f\x8f\xc2\xf8\xcb\x1b\xb3\x46\x56\x9f\x32\x6b\x17\xde\x35\xe9\xf3\x2e\x1e\xc9\xea\x16\x96\x5d\x4e\xf4\x2e\x1b\x76\xbb\xc8\xf3\x66\xeb\xd6\xfe\x2f\xe7\xe1\x05\xac\x91\xb5\xfc\x62\x48\xb9\x7f\x71\x6a\x65\x55\x7d\x9c\xf0\x5f\x00\x00\x00\xff\xff\x2d\xe5\x07\x32\xab\x02\x00\x00")

func metricsMdBytes() ([]byte, error) {
	return bindataRead(
		_metricsMd,
		"metrics.md",
	)
}

func metricsMd() (*asset, error) {
	bytes, err := metricsMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metrics.md", size: 683, mode: os.FileMode(420), modTime: time.Unix(1459217960, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _projectsMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x58\xdb\x6e\xdc\xc8\x11\x7d\xe7\x57\x14\xc6\x0f\xb6\x81\x11\xe5\xcb\x2e\x36\x3b\x6f\xca\xda\x4e\x14\xf8\x06\x7b\xe3\x20\x08\x36\x62\x0f\xd9\x33\xd3\x12\xd9\xcd\x74\x37\x67\x34\x30\x1c\x04\xf9\x06\x3f\xe6\x61\xbf\x65\x3f\x65\xbf\x24\xa7\xfa\x32\xa4\x14\x69\x17\x41\xe4\x00\x86\x87\xac\xae\xae\x7b\x9d\x2a\xaa\x38\xa1\x59\x6f\xcd\xb9\xac\xfd\x8c\x94\x23\xbf\x91\xd4\x0a\xbb\x96\xce\xd3\xa0\x95\x27\xb3\x22\xb1\x74\xde\x8a\xda\x2b\xa3\x49\x69\x3a\xe9\xe5\x65\x49\x27\x94\xae\x51\x6d\xb4\x53\xce\x3b\x66\xad\x4d\xdb\xca\xc8\x89\xb7\x93\x3f\xbd\xa7\x97\xa2\x5b\x36\x82\x56\x83\x0e\x64\x37\x27\xa1\x9b\x42\xb4\x2d\x55\x02\x82\x1e\x3c\x7e\x58\x91\xe9\xa5\x15\xe1\x94\x36\x62\x2b\x49\xd4\xb5\x74\xb0\xc5\xb0\x39\x4e\x8e\x97\xcb\xa2\xb8\x77\x8f\xbe\x33\x7a\xa5\xd6\x43\xbc\x52\x14\x6f\xa3\x1d\xf9\x6e\xb6\xab\x3c\x77\xb0\x62\xa5\x5a\xc9\x46\xb3\x5f\xd6\x18\x4f\x8d\xb2\x38\x34\x76\x5f\xd2\xf7\x1b\x38\x1c\x18\xe0\x82\x17\x0a\xea\x1b\x89\xdf\xd6\xc1\x65\x33\x78\xda\x9b\xc1\x66\x71\xb0\xdb\xd1\x4e\xc2\x6e\xe1\x8a\x46\xae\xc4\xd0\x42\xe5\xca\xd8\xa9\x6b\x6a\x05\x09\x0e\x1a\x9a\x92\x7e\x2f\xad\xbc\x0f\x49\x9a\xe4\xa5\xe8\x7a\x68\xe1\x50\xde\x60\x5d\x23\x6b\x44\x5c\xe9\x35\x4e\x93\xe0\x10\xb9\xd3\x93\x57\x34\xb3\xa6\x95\x33\x0e\x19\xcd\x3a\xd9\xc1\xec\x59\xd0\xc9\xf1\x9b\x46\xa5\xaa\x2a\x16\x58\x7c\x2c\x88\x66\x5a\x74\x72\xb6\xc0\xaf\x69\xe4\x6c\xce\x14\x18\x55\x5b\xd5\x33\x37\x1f\xbc\xc6\x01\x0c\x38\x18\x96\x0b\x20\xf0\x06\x8d\x60\x12\x56\x2f\xc4\xce\x2d\x94\xe8\x16\x8b\x27\xdf\x3e\xfd\xfa\xd1\xd3\xc7\xdf\x7e\xf3\xf4\xc9\x57\x0b\xe6\x38\x6e\x43\x5e\xe3\x95\x64\xd9\x82\xbe\x7e\xfc\xa4\xf8\xc4\xc6\x84\x3c\xbd\x82\x27\x8a\xe5\x3f\xd7\x5b\x65\x8d\xee\xa4\xf6\xae\x28\x0e\x64\x39\x21\x93\xb0\x92\xdc\xd0\xf7\xc6\x7a\xd9\xd0\x4e\xf9\x4d\xc8\xd9\xd1\x11\xb8\x68\xd5\x8a\x75\x49\xbf\xdd\x1f\xe2\x73\x25\x8a\x1c\x9d\x1c\x8c\x44\x81\xb0\xc1\xc9\x66\x4e\x1b\xb3\x93\x5b\x69\x69\xb7\x91\x3a\x09\x43\xd2\x5d\x2f\x6b\xb5\x52\x50\x94\x05\x3d\x7f\xfd\xe1\x06\x61\x07\xea\x4e\x21\xe0\xcb\x2c\x74\x85\xf0\x73\xbe\x96\xa2\xbe\x20\x4e\xe3\x15\xe5\x9c\x9f\x5a\x38\xe9\xa2\x52\xe7\xc5\x3a\x24\x57\x07\x6d\xcd\x10\xdb\xa3\x0e\x45\x9c\x5b\xce\x21\x65\x25\xbd\xc0\xcd\x9c\x93\x50\x7b\x87\x62\x85\x14\x8b\x8b\x03\xfc\xea\xc4\x9e\x5a\x63\x2e\xc8\x99\x4e\xfa\x0d\x8b\x6e\xd5\x85\x0c\x62\x56\x68\x3f\xb3\x03\x69\x11\x4a\xa2\xc8\xde\xb1\x0d\x32\x58\x77\x20\xb1\x29\x91\x72\xa8\xa3\xe2\xe7\xcf\xff\xfa\xf9\xf3\x3f\xf0\x0f\x9e\x59\xbc\xfd\xf3\xa7\x1f\x7f\xfa\x91\x46\xea\xc1\xcf\x89\xbc\x5f\xe0\x1a\x55\x8c\x4c\x9f\x13\x93\xd2\x0d\x50\xe4\x9c\x75\x66\xd2\xca\x18\x14\x13\xfd\x8a\xbe\x5b\x38\x46\x5d\x91\xe1\x3f\xf4\x84\xa2\x3c\x5d\x71\x5c\x91\x06\xb9\x42\x4d\x84\x10\xa3\x37\xb6\x33\x42\xe0\x67\x29\x51\xb3\x69\x5d\x32\x06\x2d\x63\x6c\x15\xd2\xc2\x15\x93\x4b\xd0\x73\x72\x5b\xc9\x98\x13\x42\x8f\x56\x76\x8c\x11\xbf\x5c\x9a\xd7\x12\x73\x77\x29\xf9\xff\x25\xe3\x7f\x4f\x03\xb0\xe1\xfd\xbe\x43\x0b\x5d\x00\x0e\x4e\x3d\x50\x12\xc1\x45\xe3\x8b\x18\x70\x6d\x3c\xc7\x54\xf8\x30\x6a\x32\x2a\xa0\x6b\xe3\x1d\xe4\x20\x05\x1b\xc1\xcd\x1d\xa2\xa4\x2b\x23\x7b\x68\x55\x2b\x45\x13\x67\x19\x2b\x89\xbd\x37\x80\x1e\x27\x81\x4b\xe9\x9a\x13\xb0\x41\x33\x6a\x4f\x58\xad\xd4\xf7\x83\x19\x51\x09\x23\x11\x6e\x85\x5a\x39\xb8\x19\x47\x87\xd4\x62\xc9\x2c\x7c\x19\xc0\xc0\xf8\x5e\xe9\xbe\x0b\x82\xaa\x39\xb9\x0d\x64\x35\xa9\xd1\xd3\xb4\x0a\x96\x38\x03\xd0\x88\xa3\xec\x85\x92\x6d\xe3\xf8\xf1\x1e\x31\x6c\x17\xc5\x6b\xfc\xcf\x92\x58\x68\x2e\x8c\x3c\xa9\xc0\xcb\x80\xc1\x20\x94\x67\x5a\xae\xc6\xad\x68\x07\x19\xa0\x27\xc0\xff\xf7\x12\xd5\x2a\x3c\x46\x07\x1c\x41\xb9\x6f\xb9\x96\x79\x38\x2b\x17\xc6\xec\x52\xfa\x9d\x84\xeb\x5d\xc6\xe2\xa4\x8a\x67\xc9\x11\xf9\x7d\x2f\x17\x54\x01\x73\xd0\x0f\x15\x08\x56\xfe\x6d\xe0\xa9\x16\x0d\x9d\x4c\x93\xa2\x78\x36\xbe\xfc\x8a\xd9\x4a\xc3\xbc\x2e\x84\x41\xb4\x37\xe9\x09\xc2\xed\xa0\xbd\xe2\x40\x3c\x4b\x9e\x25\x02\x0b\xcf\xf1\x7f\xe0\x1e\x62\x39\x69\x79\x47\x18\x91\x3c\x06\x44\xd9\x6b\x68\x7c\x25\xfc\x37\x6a\x7d\x17\x15\xb8\x71\xfc\x2c\x98\xed\xec\xec\x5c\x6c\xc5\xd9\x19\x3d\xf8\x03\x7e\xe9\x37\x0f\x03\xad\xdf\xfb\x8d\xd1\x4c\x7d\x1b\x9e\xe8\x49\xf9\x4d\x3c\xe1\x69\x7b\xee\xf8\x24\x8f\xd7\x47\xe5\xe3\x47\xd3\xb3\xaf\xca\xa7\xd3\x63\xbc\xc6\xd3\xb5\x69\x85\x5e\xf3\x91\xd0\x7b\xc2\xb4\xe2\x1c\xc5\x23\x3b\x38\x7f\xd4\x0d\xae\xfd\xcb\x5f\xc3\x63\x0a\xc6\x0f\xe9\x15\x95\x36\x5c\x1e\x19\xdd\xee\x7f\xb8\xfd\xfa\x5a\x0f\xff\xfd\xed\xe2\xda\x95\x05\xbd\xc3\x2b\x56\x2c\x94\xfb\xce\x84\x18\x86\x85\xaf\x55\xcb\x1a\x05\xd1\x4b\x34\xb8\xae\x55\xea\x4a\xae\x82\x89\xf1\x90\x8e\xfc\xa3\x51\x4d\xd7\x31\x23\xb6\xa3\x3f\x73\x3f\x31\x03\xb5\x57\x17\xc4\x30\xdf\x80\xcf\xdc\x50\xa8\x5d\xe8\x47\xb1\xd6\x22\xf5\xd7\x3a\xe8\x4b\x56\x52\xa7\x1c\xea\xa9\xde\x1c\xca\x39\xc9\x72\xd2\xf2\xcc\x67\x4b\xe2\x0a\x57\xc7\x51\x3c\x06\x04\x16\xe5\xba\x4a\x0d\x55\x1e\x5c\x9e\x84\x25\x79\x9d\xf5\xb1\xbf\x51\x43\x3d\x58\xe0\x84\x6f\xf7\x98\xf4\xa0\x83\x97\xc7\xc4\x72\x50\x28\x58\x30\x06\x11\xf0\xa4\x06\x74\x60\xae\xa7\xb1\xe3\x31\xc7\x79\x9e\x80\xab\x61\xae\x57\xa2\x7e\xf3\x7e\x1e\x8e\x02\x68\x21\x80\x06\x46\xc1\xf2\x0c\x47\x78\x94\xd6\x1a\x5b\xd2\x1b\x8d\x25\xc1\xb4\x43\x5c\xc2\xd9\xe4\xb0\x53\x30\xe0\x61\x6f\x55\x0d\x2f\xbe\x51\x6b\x63\x6a\xbe\x97\x56\x5a\x3c\x65\x4d\x65\x6c\xb0\xb8\xac\x8d\xfd\x15\xdf\x79\xa3\x34\xb5\xc8\x6d\x7c\xa7\x9d\xa6\xb4\x4f\xcd\xcd\x01\xc7\x62\x3d\x2a\x4f\x84\x2f\xa8\x92\x97\xd5\x09\x98\x98\xf6\x0b\x22\x09\xeb\x03\xf8\xf1\xe0\xb8\x0a\xe4\xbc\xce\xa7\x03\xae\x00\xd4\xdb\x1c\x74\xc6\xc4\x38\x3d\x18\xb2\x23\xac\xe3\x34\xe4\x21\xde\xa9\x81\xb9\x28\x33\x25\x5a\x86\x4f\xfa\xfb\x71\x89\x8d\xfc\x78\x42\x2d\xe9\x8f\xdc\x27\x41\x54\x28\xb2\xfb\x4d\xde\x6e\x30\x45\x59\x5a\x74\x6b\x4f\x15\xe4\x9d\xbd\x7d\xf7\xe6\xc5\xe9\xcb\xe7\x15\xef\x3b\xd5\xd1\x51\x32\xa9\xba\xd5\x99\x34\x5d\x26\xfb\xfb\x18\x4a\xc0\xb9\x15\xe3\x5a\x3a\x59\x9a\x6e\x15\x27\x6f\x92\x33\xdd\xb6\xb6\xf8\x0e\x8a\x33\xf5\xae\x73\x64\x96\x3c\x92\xaa\x71\xd2\xe6\x09\x59\x14\xf9\xe9\x90\x00\xc0\x54\x3f\xf8\xb4\xd6\x65\x58\xe2\x3b\xee\xca\x37\x08\x1f\xfb\x7c\xb7\xfa\xf8\xb1\x4c\x1f\xa2\x25\x67\xfe\xd3\xa7\x33\x50\x5e\x64\xe3\x22\xa9\xca\x60\x33\x0f\x93\xfa\xda\xe7\x17\x3e\xb9\x7a\x15\xbf\xf5\xaa\xf2\xf8\xb0\x02\x1e\xe3\x82\x75\x15\xa3\xa0\xe1\x29\xc5\x5c\x67\x81\x36\xc3\x84\x35\xd8\x80\x1c\x87\x2c\xa4\x5d\x5d\x22\xd8\xf3\xb0\x8c\x54\x37\xa8\x9f\x03\x06\x15\xe0\x72\x67\x06\x20\x90\x95\x2e\xe6\x91\x66\x49\xdc\xad\x33\x59\x06\x28\x69\x3e\x44\x1c\x74\x63\xf2\xf4\xd0\x2d\x19\x62\x56\x07\x9e\x43\xc4\xb0\xd5\x25\xdc\x74\x0c\x41\x93\xbf\x05\xdc\x61\x77\x6f\xfb\x7a\x34\xe6\xc3\xdb\xef\xae\x6d\x5b\x5f\xb2\x8a\x82\xf2\xd2\x49\x8c\x02\xe5\xf7\xbf\xb3\x66\xe8\x11\x98\x97\xca\x05\x34\xcb\x74\x5a\x87\x03\x3a\x7d\xe6\x26\x72\x84\xb5\x62\x7f\x45\xcc\xb0\xd4\xd2\x4f\xef\x47\xc2\xcd\xf7\xfe\x1d\x00\x00\xff\xff\xb1\x36\xe9\x85\xb5\x11\x00\x00")

func projectsMdBytes() ([]byte, error) {
	return bindataRead(
		_projectsMd,
		"projects.md",
	)
}

func projectsMd() (*asset, error) {
	bytes, err := projectsMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "projects.md", size: 4533, mode: os.FileMode(420), modTime: time.Unix(1483031456, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rollbackMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\x31\x4e\x03\x31\x10\x45\xfb\x39\xc5\x97\x42\xc9\x22\x05\x89\x26\x1d\x05\x3d\xe2\x02\xac\x71\x66\x59\x0b\xe3\xb1\xc6\x76\x36\x69\x38\x3b\xb6\x96\x6c\x40\x21\x29\xad\x37\xf3\xfe\xf7\xd0\x63\xe4\x3d\x8c\xf7\x32\x25\x1c\xa4\x20\x0b\x54\xbc\xc7\x9b\xb1\x1f\xed\x91\x47\x46\x54\xde\x39\x29\xe9\x16\xa2\x48\x91\xad\x1b\x1c\x6f\xb1\x63\x4d\x4e\x02\x64\x80\xc1\x50\x82\xcd\xf5\x75\x47\xb4\x5a\xe1\x69\x6f\x3e\xa3\xe7\x44\xf4\x52\x65\xff\xb9\xa0\xec\xd9\x24\xde\x10\xf5\x7d\x9f\x46\xba\x81\x69\x55\xf4\x38\x3f\x88\x34\xf2\xd7\xf0\x13\x6e\x8f\xd9\xd7\xb6\xf1\x30\xef\x3f\xb7\x44\x9e\x4e\x6c\x72\x79\x44\xdf\x75\x5b\x3d\x74\x5a\x42\x7f\x51\xb2\x8c\xa0\x9e\x87\xd5\xd6\xba\x44\x5f\xf5\x5a\xce\x24\x64\x4e\xd9\x85\xf7\xd7\x13\x9a\xc1\x06\xb6\xa8\x72\xc8\xb4\x94\xc4\x3d\x5d\x71\x97\x18\x67\x01\xd6\xe7\xf6\x05\xfe\xb2\xad\xcf\x92\xda\x3f\xbf\x03\x00\x00\xff\xff\x78\xc2\x4d\x71\xca\x01\x00\x00")

func rollbackMdBytes() ([]byte, error) {
	return bindataRead(
		_rollbackMd,
		"rollback.md",
	)
}

func rollbackMd() (*asset, error) {
	bytes, err := rollbackMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rollback.md", size: 458, mode: os.FileMode(420), modTime: time.Unix(1454345227, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _shimMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8f\x41\x4e\x04\x21\x10\x45\xf7\x73\x8a\x7f\x80\xb1\xef\xa0\xd1\x85\x89\x19\x93\xb1\x3d\x40\x0d\x54\x03\x06\x28\x42\x41\xdb\xde\x5e\x5a\xd3\x9b\xd9\x56\xbd\xff\xf3\xdf\xe9\xb1\xf0\x86\xae\xac\x20\x5c\xc4\xf2\xf4\xa5\x50\x1f\x12\x16\xa9\xc8\x92\x1f\x32\xb5\xb0\x32\x22\x65\xd7\xc9\x31\xb4\x97\x22\xb5\x4d\x98\x7d\x50\x84\x3d\xb7\x72\xfd\x81\x26\x8a\x11\xa5\x8a\xab\x94\xf0\xed\x83\xf1\xe0\x8d\x4d\x6f\xa3\x3b\xe4\x81\x19\x1f\xa2\xdd\x09\xc3\xaa\x67\x50\xb6\x58\x98\xad\xe2\x8d\xd2\xcd\xd2\x80\x4a\x6f\x68\xbe\x4a\x77\x1e\x1f\xf3\xf3\xeb\xe5\x9f\x3a\x4a\xa5\xb7\x3b\xe2\xfd\x73\x9e\xf0\xc4\x86\x86\x01\x64\x19\xaf\x31\x68\xdc\x5f\xae\x57\xa4\xae\x0d\x37\xde\xe5\xec\x9f\x4d\x14\xe7\x42\x76\xe7\xa1\xd5\x8e\xf0\xe9\x37\x00\x00\xff\xff\x5a\x55\x30\x0a\x01\x01\x00\x00")

func shimMdBytes() ([]byte, error) {
	return bindataRead(
		_shimMd,
		"shim.md",
	)
}

func shimMd() (*asset, error) {
	bytes, err := shimMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "shim.md", size: 257, mode: os.FileMode(420), modTime: time.Unix(1454345227, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _upgradeMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe2\x0a\xc9\x48\x55\x48\x48\x2c\x48\xad\x50\x28\x2d\x48\x2f\x4a\x4c\x49\x4d\x50\x48\xce\xcf\xcd\x4d\xcc\x4b\x51\x28\xcf\xcc\xc9\x01\x8a\xa6\x24\x96\xa4\x2a\x54\xe6\x97\x16\x29\x64\xe6\x15\x97\x24\xe6\xe4\x24\x96\x64\xe6\xe7\x29\xe4\xa7\x41\xf4\x69\x18\x6a\x26\x28\x58\x69\xea\x71\x01\x02\x00\x00\xff\xff\x97\x4e\x2a\xdd\x4b\x00\x00\x00")

func upgradeMdBytes() ([]byte, error) {
	return bindataRead(
		_upgradeMd,
		"upgrade.md",
	)
}

func upgradeMd() (*asset, error) {
	bytes, err := upgradeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "upgrade.md", size: 75, mode: os.FileMode(420), modTime: time.Unix(1454345227, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"alias.md": aliasMd,
	"autocomplete.md": autocompleteMd,
	"aws-credentials.md": awsCredentialsMd,
	"bindata.go": bindataGo,
	"build.md": buildMd,
	"delete.md": deleteMd,
	"deploy.md": deployMd,
	"docs.go": docsGo,
	"docs.md": docsMd,
	"dryrun.md": dryrunMd,
	"env.md": envMd,
	"faq.md": faqMd,
	"functions.md": functionsMd,
	"getting-started.md": gettingStartedMd,
	"hooks.md": hooksMd,
	"ignore.md": ignoreMd,
	"infra.md": infraMd,
	"installation.md": installationMd,
	"invoke.md": invokeMd,
	"java.md": javaMd,
	"links.md": linksMd,
	"list.md": listMd,
	"logs.md": logsMd,
	"metrics.md": metricsMd,
	"projects.md": projectsMd,
	"rollback.md": rollbackMd,
	"shim.md": shimMd,
	"upgrade.md": upgradeMd,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"alias.md": &bintree{aliasMd, map[string]*bintree{}},
	"autocomplete.md": &bintree{autocompleteMd, map[string]*bintree{}},
	"aws-credentials.md": &bintree{awsCredentialsMd, map[string]*bintree{}},
	"bindata.go": &bintree{bindataGo, map[string]*bintree{}},
	"build.md": &bintree{buildMd, map[string]*bintree{}},
	"delete.md": &bintree{deleteMd, map[string]*bintree{}},
	"deploy.md": &bintree{deployMd, map[string]*bintree{}},
	"docs.go": &bintree{docsGo, map[string]*bintree{}},
	"docs.md": &bintree{docsMd, map[string]*bintree{}},
	"dryrun.md": &bintree{dryrunMd, map[string]*bintree{}},
	"env.md": &bintree{envMd, map[string]*bintree{}},
	"faq.md": &bintree{faqMd, map[string]*bintree{}},
	"functions.md": &bintree{functionsMd, map[string]*bintree{}},
	"getting-started.md": &bintree{gettingStartedMd, map[string]*bintree{}},
	"hooks.md": &bintree{hooksMd, map[string]*bintree{}},
	"ignore.md": &bintree{ignoreMd, map[string]*bintree{}},
	"infra.md": &bintree{infraMd, map[string]*bintree{}},
	"installation.md": &bintree{installationMd, map[string]*bintree{}},
	"invoke.md": &bintree{invokeMd, map[string]*bintree{}},
	"java.md": &bintree{javaMd, map[string]*bintree{}},
	"links.md": &bintree{linksMd, map[string]*bintree{}},
	"list.md": &bintree{listMd, map[string]*bintree{}},
	"logs.md": &bintree{logsMd, map[string]*bintree{}},
	"metrics.md": &bintree{metricsMd, map[string]*bintree{}},
	"projects.md": &bintree{projectsMd, map[string]*bintree{}},
	"rollback.md": &bintree{rollbackMd, map[string]*bintree{}},
	"shim.md": &bintree{shimMd, map[string]*bintree{}},
	"upgrade.md": &bintree{upgradeMd, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

