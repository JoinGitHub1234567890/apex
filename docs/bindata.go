// Code generated by go-bindata.
// sources:
// aws-credentials.md
// bindata.go
// build.md
// delete.md
// deploy.md
// docs.go
// docs.md
// dryrun.md
// env.md
// faq.md
// functions.md
// getting-started.md
// ignore.md
// installation.md
// invoke.md
// links.md
// list.md
// logs.md
// projects.md
// rollback.md
// shim.md
// upgrade.md
// DO NOT EDIT!

package docs

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _awsCredentialsMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\x4d\x6f\xd4\x30\x10\xbd\xe7\x57\x8c\x5a\x0e\x20\xed\x26\xf7\x0a\x21\x95\x55\x80\x15\x15\x45\xdd\x02\x42\x08\x35\x53\x7b\x92\x58\x38\x76\x64\x3b\x09\xe1\xc0\x6f\x67\x1c\x77\xb7\x5f\x7b\xe0\xb0\x5a\xc5\xf3\xf1\xe6\xbd\x37\x93\xbd\xa5\xda\x3a\x82\xc1\x2b\xd3\xc0\x79\x4f\xbf\x61\xb6\x03\x18\x22\x09\xc1\x42\xad\x9c\x0f\xd0\xa8\x91\x40\x85\x18\x71\x80\x42\xd8\xc1\x04\x10\x8e\x24\x99\xa0\x50\x7b\xf0\x16\x42\x8b\x21\xd5\x0b\x34\xd0\xa1\xc1\x86\xc0\x91\xe7\x12\x41\x3e\x87\xeb\x96\x18\x06\xe3\x0f\xcc\xd0\xdd\x92\x03\x5b\xc3\x84\xb3\x8f\x38\x32\x35\x58\xc1\xd4\x2a\xd1\x2e\x69\x76\x08\x5a\x19\x1e\x23\x16\xe6\x59\x76\x7a\x0a\x5f\x15\x02\x99\x51\x39\x6b\x3a\x86\x86\x11\x9d\xc2\x5b\x4d\x3e\xcb\xbe\x2c\xf3\x1f\x0d\x82\x35\x7a\x5e\x2d\xb4\xba\x81\xd9\xf8\x9e\x84\xaa\x67\x06\x24\xa8\xad\xd6\x76\xe2\xd2\xb3\x2c\x5b\x43\x75\xfe\x6d\x77\x73\xbe\xd9\x94\xbb\xdd\xcd\xc7\xf2\x7b\x05\xfc\x7d\xe0\xcb\xff\xe4\x3d\xfc\xa2\x79\x9f\xb9\x2b\x37\x57\xe5\xf5\xf3\x4c\x4f\xac\x4d\x78\x98\x79\x55\xbe\xdf\x5e\x7e\x4a\x59\x8e\x1a\x65\xcd\x81\xcf\xdf\x22\xc7\xc9\xb3\xd0\x0f\x68\xc4\xc9\xd2\x7b\xf1\x50\x65\x34\xf2\xf0\x6c\x4d\xad\x9a\x54\x95\x98\xe1\x7c\x20\xb6\x40\x7e\xbe\xba\x7c\xb7\xbd\x28\xab\xa8\x6e\x20\xad\x01\xa3\x37\x49\x5e\x6b\x28\x3e\x3b\xaa\x59\x5a\x23\x28\x87\x0f\x76\xa2\x91\xdc\x0a\x54\xbd\xb4\x63\x3f\x8c\x0d\xd0\xe2\x18\xfd\x7a\x0e\xba\x02\xeb\xe0\x24\x51\x39\x01\xe5\x97\x6c\x49\x75\x34\x2c\x49\xed\x5b\x3b\x68\xc9\x5a\x84\xb8\x39\x93\x0a\xed\x42\xeb\x91\x1c\xc7\xec\xe2\x4d\x89\x93\xa1\x84\x2e\xee\xa5\x35\x90\x60\x07\x77\xa7\x8c\xa7\x3b\xda\xa3\xa2\x09\x7e\x6c\x1e\x47\x17\x89\x37\x17\xdb\x9f\x2f\xdb\x10\xfa\xb3\xa2\x90\x56\xf8\x38\x7d\x8e\x1d\xfe\xb1\x26\x17\xb6\x2b\x84\x56\x85\xc6\x40\x3e\x14\x83\x27\xd7\x0c\x4a\x52\x7c\x5c\x8b\x16\xfb\x75\x43\x21\x70\xb7\xb5\x0f\xe8\x02\xc9\xbc\x0d\x9d\x7e\x75\xbf\x80\xbd\xb3\x11\x1f\x6a\x8d\x4d\x96\x6d\x93\x5e\x8b\x50\xb7\x96\x49\xfe\x97\x6f\x4f\x1d\x8b\x83\xef\xfb\x4a\xe5\x48\x04\x3d\x27\xcd\xaa\xc5\xb6\xf5\x7a\x1f\x7d\x6d\xb0\xa3\x37\x15\x1b\x49\x86\x75\xf7\x43\xe4\xcd\x9c\xf8\xe0\xe4\x72\x65\xec\x45\x47\x68\xfc\x33\x1b\xd9\xf0\x3d\x1c\x9a\xf9\xf8\xa9\xac\xa0\x4d\x8b\x70\x7f\x2d\x0c\x3c\xb2\x3c\x07\x13\x09\xe3\x02\xf5\xe4\x30\xb0\xf7\x7c\x36\x55\x55\x65\x2f\xe0\xc9\x98\xdd\x8c\x7d\x1f\xbf\x24\x6f\x45\xaf\xed\xbc\xa4\xfd\x0b\x00\x00\xff\xff\x1c\x03\xc5\x97\x6d\x04\x00\x00")

func awsCredentialsMdBytes() ([]byte, error) {
	return bindataRead(
		_awsCredentialsMd,
		"aws-credentials.md",
	)
}

func awsCredentialsMd() (*asset, error) {
	bytes, err := awsCredentialsMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "aws-credentials.md", size: 1133, mode: os.FileMode(420), modTime: time.Unix(1454259434, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bindataGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x97\xdf\x8f\xdb\xc6\x11\xc7\x9f\x8f\x7f\x05\x73\x40\x0a\xa9\x38\xeb\x28\x92\xe2\x0f\x03\x7e\x89\xed\x02\x7e\x88\x03\xb4\x7e\xeb\x15\xc1\x72\xb9\xab\xb0\xd6\x89\x0a\x49\x39\x77\x36\xf2\xbf\x77\x3e\x9c\xa5\x7a\xb1\xeb\xfa\x25\x07\xf0\xb4\xbf\x66\xe6\x3b\x33\xdf\x99\x25\x6f\x6f\xe3\x97\x7d\xeb\xe2\xbd\x3b\xba\xc1\x4c\xae\x8d\x9b\xc7\x78\xdf\x3f\x6b\xba\x63\x6b\x26\xb3\x89\xe4\xc0\xd8\x9f\x07\xeb\xc6\xe7\x8c\xcd\x6f\xe3\x33\x3b\xb8\xd6\x1d\xa7\xce\x1c\xc6\xcd\x7d\xcb\xea\x72\x7a\xdf\xcf\xb3\x73\x77\x68\xc3\x4e\xeb\x0e\x6e\x72\x97\xc9\xe9\xd0\x3f\x2e\x93\xde\x8e\x41\x60\x1e\x86\xd5\xe1\x71\x38\x1f\xc3\xc4\x1d\x3f\x84\x91\x37\xbf\x2e\xa3\xf3\xd1\x4e\x5d\x7f\x5c\x04\xf6\x6e\x9a\xba\xe3\xfe\xd9\x38\x99\x41\xe0\x87\xd5\x6e\x7f\xec\x87\xc5\x6c\x77\x94\xcd\xc3\xc1\x20\x76\x59\xfa\xd0\xbf\x5f\xf6\x0f\xdd\xf1\xfd\x78\x19\x8f\xd3\x32\xec\xf7\xcb\xea\x69\xe8\xff\xed\xec\xb4\x4c\x87\xfe\x70\x68\x8c\x7d\x1f\xa6\xe3\x2f\xdd\x7d\x18\x9e\x4f\xfb\xc1\xb4\x8b\xe2\x57\x3f\xc5\x6f\x7f\x7a\x17\xbf\x7e\xf5\xe6\xdd\x77\x51\x74\x12\x09\xb3\x77\xb3\xb7\x51\xd4\xdd\x9f\xfa\x61\x8a\x57\xd1\xd5\x75\xf3\x38\xb9\xf1\x5a\x06\xb6\xbf\x3f\x0d\x6e\x1c\x6f\xf7\x1f\xbb\x13\x0b\xfe\x7e\xe2\xa7\xeb\xf5\xff\x6d\xd7\x9f\xa7\xee\xc0\xa4\x9f\x05\x4e\x66\xfa\xe5\xd6\x77\x07\xc7\x80\x85\x71\x1a\x24\x18\xf3\xde\xd4\xdd\xbb\xeb\x68\x1d\x45\x44\x6c\xc9\xd0\xdf\x9d\x69\x57\x0c\xe2\x7f\xfe\x0b\xb3\x37\xf1\xd1\xdc\xbb\x58\xc5\xd6\xf1\x6a\x59\x75\xc3\xd0\x0f\xeb\xf8\x53\x74\xb5\xff\x38\xcf\xe2\xe7\x2f\x62\x50\x6d\xde\xba\xdf\x50\xe2\x86\xd5\x0c\x9b\xf9\x0f\x67\xef\x65\x8e\xda\xf5\x3a\xba\xea\xfc\x2c\xf0\xdd\x8b\xf8\xd8\x1d\x50\x71\x35\xb8\xe9\x3c\x1c\x99\xde\xc4\xe2\xd2\xe6\x35\xda\xfd\xea\x1a\x45\xf1\xf7\xbf\x3e\x8f\xbf\xff\x70\xad\x48\x66\x5b\xa2\xe3\xf7\x28\xba\xfa\x60\x06\xa1\x92\x8f\xd5\x8e\x1a\x89\xae\x7e\x56\x38\x2f\xe2\xae\xdf\xbc\xec\x4f\x8f\xab\xbf\xc8\x99\x1b\xc1\x26\x52\xf6\xf0\x7a\x41\xba\x79\x79\xe8\x47\xb7\x12\xf7\xff\x24\x3c\xa8\x51\xfd\x5f\x51\x24\x07\x15\x77\x58\x14\x58\x9b\x1f\x80\xbe\x5a\xdf\x70\x22\x92\xbd\xe9\xf1\xe4\x62\x33\x8e\x6e\x22\xe4\x67\x3b\xa1\x65\xf6\x2f\xe4\x43\xcc\x1c\x7d\x1f\xc7\xfd\xb8\xf9\x9b\xa4\xf5\x8d\x4c\x2e\x72\x21\x85\xcb\xfa\x13\x0d\x73\x0e\xe5\x4f\xd3\x18\x5d\x8d\xdd\xc7\x79\xde\x1d\xa7\x22\x8f\xae\xee\x29\xf0\xf8\xa2\xf4\x47\x99\xce\x8b\xef\x84\x21\x31\x34\xd9\x30\xc2\xce\x4c\x95\x95\xef\x3e\xb7\xb5\x8e\xdf\x8a\x89\xd5\x3a\x58\xc0\x66\xf0\xd2\x77\x1b\xac\x8b\xf0\xd7\x65\xff\x21\x70\x44\x76\x46\xf3\x47\x51\x80\xfe\x5f\x51\xb0\x8a\xe8\x13\xe4\x7f\x54\x80\x6b\xdf\x52\x80\x73\xa2\xe3\xe2\xe8\x17\x1a\x82\xf7\x5f\x57\xf2\x66\x7c\xd5\x0d\xa2\xa2\xe9\xfb\xc3\x53\x69\x69\x80\xdf\xf0\xfc\x71\x54\xc7\xdd\xe0\x8d\x75\x9f\x7e\x7f\x22\x1d\x28\x01\xcb\x7f\x96\xae\xfa\xf2\xbf\x4d\xf5\xc7\x56\xe8\xad\x7c\x58\x5d\xdf\x3d\x6c\xfd\xdd\x43\xd5\xdc\x3d\x24\x95\x3c\x49\x78\xea\xbb\x87\xc2\xc9\x7a\x58\xf3\x9c\xb1\x77\x0f\xbb\xec\xee\x21\x6f\x65\x4f\xe6\x6d\x7e\xf7\x90\xc9\xde\x56\x9e\x46\xd6\x5c\x29\xfb\x65\x38\x67\x44\x4e\xe4\x53\xd9\x73\xb2\x97\x16\xa2\x43\xf6\x12\x59\x4f\xb7\x77\x0f\xf5\x4e\xce\xc8\x53\x21\xbf\xd3\x27\x97\xa7\x95\xb3\x49\x2a\xe3\x54\xf1\x64\x3b\xb5\x59\x0a\xbe\x5a\xd6\x76\xac\xc9\x53\x8a\xbe\x02\xfb\x8d\x62\x75\xa2\xd3\x26\x8a\xab\x10\x3b\x5b\xc1\x50\xca\x6f\x03\x26\xaf\xf2\x0e\x9c\x89\x62\xb3\xa2\xd7\x8b\x5e\x2f\x72\xae\x50\xfc\x99\x9c\xad\x33\x1d\x1b\xb0\xc8\xb9\x4c\x9e\x4a\xec\x5a\x39\x97\x8a\x8e\x36\x53\x3b\xa5\xd8\xcc\x45\x6f\x83\x3d\xd9\x6b\x44\x47\x22\x7b\x5b\xc1\x96\xa6\x8a\x09\x19\xfc\x30\xa2\xaf\x16\x3c\x09\x31\x13\x59\x23\x67\x6a\xf6\x64\x5c\xed\x54\xa6\xdc\x6a\x2c\x38\xdf\x56\x2a\x9b\xe4\x1a\xdb\x8a\x38\xca\xb8\x16\x9d\x06\xfc\x89\xfa\xe3\x89\x5d\xa1\x32\xe4\x8f\xb8\xb6\xa2\x2f\x91\x71\x96\x07\x5b\x5b\xd5\x55\x15\x8a\x1b\xbb\xe4\x69\x4b\x8c\x65\x9c\x91\x63\x99\x3b\xe2\x5b\x28\x96\x44\x7e\x5d\xa6\x78\xad\x55\x3d\xe4\x85\xf8\xe3\xe3\x4e\xce\x5a\xf9\xad\xc4\x46\xc3\xaf\xd7\x9c\x64\x69\xc8\x57\xc0\x0f\x3f\x52\x89\x5f\x4b\xec\xc4\x4e\x51\x6b\xde\xc8\x2b\x39\xd8\xca\x7c\x8b\x6f\x99\xfa\x41\x1e\x76\xe1\x4c\x69\x94\x2b\xe4\x0e\x6e\xc0\x09\xfc\xdf\x81\x19\x6e\x36\x21\x37\x85\x3e\x5b\x38\x25\x18\x6d\xaa\xf8\xe0\x28\xbe\x59\x19\x37\xd8\xb0\x9a\x6f\xb8\x9e\xb4\x9a\x53\xb0\x62\x67\xc7\xbe\xac\x35\xf8\x83\x4e\xb0\x8b\x0d\x4f\x9e\x9c\xfa\x69\x8c\xf2\x8a\xd8\x90\x0b\x72\x48\x5e\xdb\x42\xf1\x3a\xf2\x96\x6a\x3c\xb0\x35\x63\x80\xb7\xf0\x0c\xdf\x5b\xe5\x63\x99\x29\x1e\xf4\xd7\xd8\x6b\x34\xb6\x96\x47\xf6\x7d\xaa\xb9\x4d\x90\x83\xc3\xad\xf2\x16\x3f\xa8\x41\x07\xe7\x5b\xdd\x33\xa9\xf2\xb0\x86\x87\xb5\xf2\x33\x0b\x35\xe8\x90\x0f\x1c\xcf\xad\x72\xd5\x58\x8d\x4b\x89\x5f\x95\xca\x52\x83\x33\x1e\xaf\x71\x28\xe5\xc9\x8d\xe6\x01\xde\x6d\xf1\x7b\xa7\xf8\x88\x8b\xf5\x7a\x16\x8e\x83\xd7\xd6\xea\x33\x1c\x81\x2f\x05\xb9\xcf\x75\xbd\x0d\xbe\x50\x63\x70\x16\x3d\xf0\x12\x1f\xe1\x6e\x11\xf0\xcc\xf5\x81\xcd\x5c\xfb\x02\xd8\xa8\xe7\xd2\x6a\xff\xa0\xb6\xa8\x15\xb0\x81\x95\x1c\xb1\x47\x6d\x53\xab\x29\xb9\x68\x34\x27\x45\xe8\x39\xe8\x4c\x44\x87\xc9\x34\x26\x79\xad\xfe\xc1\x1b\xce\xc3\x0d\x7a\x87\x09\xbe\xc2\x47\x78\xc8\x1e\xf5\x80\x2f\xe4\x95\x18\x53\x33\xad\x0d\x7c\xcc\xd5\x26\x5c\x29\xd0\x1d\xfa\x22\x9c\x22\x06\xf0\x80\x1a\xf2\x6d\xe0\x70\xc0\x0b\x7f\x5d\xe8\x41\xf0\x67\xe1\x31\x18\xc9\x55\x5d\x86\x78\xd4\xca\x19\xe2\x94\x86\x39\xfd\x13\x3e\x81\x77\x8e\x6f\xc0\x3b\xd7\x5f\xa5\x7a\xe8\x5b\xe0\xe3\x6c\x1e\x6c\x81\x9b\x3e\x48\x9e\x9c\x55\x6c\xc4\xbb\x0a\xe7\xe9\x0d\xe8\xa0\x36\x9d\xd3\x9e\x47\x4d\xd4\xe4\x86\x7c\x96\xca\x59\x13\x7a\x3a\xbf\x60\xa0\x2f\x12\x57\x13\xfa\x1c\x79\x01\x3b\xb5\x9c\xd3\x5b\x4a\xb5\x91\x85\x71\xdb\x28\x47\x53\xaf\x63\x7a\x9a\x37\xca\x9b\x39\xbe\xf4\xb4\x42\xeb\x6d\xee\xed\x6d\xe0\x5e\xab\xb5\xd3\x6c\xf5\xfe\x40\x17\x5c\x80\xe7\xe0\x46\x86\xfe\x69\x03\x3f\xc8\xe9\x56\xd6\x2b\xf2\x88\x5d\xf2\x68\x03\x9f\x53\xe5\xcc\xce\x6a\xaf\xa4\xdf\xf8\x46\x63\x4d\x9d\xd2\x3b\xcb\x24\x70\x6a\xa7\xf9\x77\x95\xe6\x6d\xe6\x78\xc8\x31\x3d\x06\x7f\x91\xa3\xf7\x57\xe1\xee\xc3\x17\x7a\x10\xfd\xa5\x20\x37\xad\xc6\x9a\x9e\x4a\xed\x13\x6f\xf8\x87\xed\x5d\xb0\xc3\x1e\xf9\xc5\xc7\x39\xff\x5e\xeb\x14\xbf\x39\x87\x1f\xce\x2b\x4e\x7c\x80\x27\x79\xa5\xf7\x02\x3d\x00\x1f\xa9\x4b\x13\xee\x33\x62\xe3\x43\x4f\x03\x07\x71\xc4\x36\x77\xde\x52\x07\xf3\x5d\xdb\xa8\x5d\xfa\xe6\xdc\x9f\x4a\x8d\x01\xbd\xc5\x86\xbb\x8a\x5c\xc0\x55\xd6\xca\x54\x6b\x17\x0e\x71\x47\x93\x63\x78\x48\x0f\xca\x32\xd5\x37\xf7\xcb\x44\x71\xc1\x39\xea\xd9\x87\x1e\x6a\x6a\xed\x3d\xdc\x5d\x79\xf0\x8d\x58\x97\x5e\xfb\x2e\x39\xca\xa8\xe7\x54\x7f\xe1\xdd\x36\x0b\xf7\x7a\xa6\x39\xc0\x2f\x17\xde\x37\xf0\x07\xcc\xe4\x33\x2b\xb4\x87\xf1\x80\x11\x8e\xcd\xfd\xb2\xd6\x3e\x42\x6f\xad\x42\x1f\xdd\x86\xfb\x9a\xfa\x9b\x63\x2d\xe7\x8d\xd7\x9a\x21\xbf\x26\xd7\xba\xe5\xfe\x5c\xde\x83\xe8\xb9\x3c\xf8\xc4\xdd\x67\x97\x5a\x6d\x35\x0f\x7a\xee\x7a\xf9\x0a\xfa\xfc\x3d\x2b\xbc\x9f\xff\xaf\xef\x9e\xe5\x2d\xfe\xc9\x77\x93\xbc\xf0\x7f\xf1\xa6\x76\x23\x8b\xd7\x5f\x7e\x14\x5f\xcb\xfa\xfa\xf2\x46\xfd\xb9\x10\x16\xff\x3a\x7f\x06\x3c\xb5\x38\x7f\x07\x5c\x3e\xb6\xbe\x02\xf5\x5b\x9f\x33\x97\xaf\x90\xf9\x3b\x42\xf4\x7c\xf6\x4e\xfa\x89\xb7\xf5\xe7\xf1\x05\xf2\x7f\x02\x00\x00\xff\xff\x1a\x95\x23\xf6\x00\x10\x00\x00")

func bindataGoBytes() ([]byte, error) {
	return bindataRead(
		_bindataGo,
		"bindata.go",
	)
}

func bindataGo() (*asset, error) {
	bytes, err := bindataGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bindata.go", size: 8192, mode: os.FileMode(420), modTime: time.Unix(1454429263, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _buildMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\x8e\xb1\x4e\xc3\x30\x18\x84\x77\x3f\xc5\x49\x45\x62\x41\x7d\x00\x06\x24\x24\x98\x3b\x10\xf6\x38\xf1\x25\xb1\x64\xfb\xb7\x62\xff\x34\xe1\xe9\x71\x23\xaa\x6e\x37\xdc\x7d\xdf\x99\xf7\xcc\x0d\x33\x13\x57\x5b\x59\x60\xf1\xeb\x33\x26\x1f\x88\x49\x56\xec\xa2\xd0\x2c\x09\x8e\x39\xc8\xfe\x82\x45\xae\xfc\xe1\x8a\x22\x91\xd5\xc7\xb6\xf0\x15\xa3\x4d\x18\x08\x2d\x9c\x34\xa0\x0a\x0a\x09\x6e\x76\xac\x61\xc7\x75\xb1\xf5\xb9\xd5\xd2\x18\xd4\xd1\xb5\x80\xba\xf8\xf2\x70\x38\x0e\x3a\xcf\x3e\xcd\xc8\xba\x66\x29\x2c\x67\x74\x0b\xd1\xdb\xdb\xb5\x41\x7d\x70\x3d\x46\x89\xd1\x26\x07\xd1\x9a\xb5\x96\x86\xe0\xf1\xb4\xc9\xbe\xba\x8f\xcb\x77\x77\xa0\x0e\xf0\x3f\xe5\x6c\xcc\xe9\x84\xcf\xcd\xc6\x1c\x58\x8c\xb9\x1c\xcb\xfb\xa8\x71\xce\x2d\xbe\x1a\xd3\xf7\x7d\x59\xcc\x13\x1e\xb6\x86\x12\xbc\xdd\x2b\xb7\x82\xf9\x0b\x00\x00\xff\xff\xda\x69\xc7\xac\x27\x01\x00\x00")

func buildMdBytes() ([]byte, error) {
	return bindataRead(
		_buildMd,
		"build.md",
	)
}

func buildMd() (*asset, error) {
	bytes, err := buildMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "build.md", size: 295, mode: os.FileMode(420), modTime: time.Unix(1454192858, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deleteMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x90\x31\x4f\xc3\x30\x14\x84\xf7\xf7\x2b\x4e\x2a\x03\x48\x4d\xd9\xbb\xa0\x4a\xc0\x2f\x80\x81\x2d\x4e\xfa\xdc\x58\x72\xf2\x2c\x3f\xa7\x69\xf8\xf5\xd8\x49\x04\x4b\x07\x26\x0f\x7e\x77\xf7\xdd\xd1\x29\xf0\x0d\xc6\x7b\x99\x14\xb3\x8c\x48\x82\x33\x7b\x4e\x0c\x3b\x0e\x6d\x72\x32\xe8\x1e\x9d\x4c\x7c\xe5\x08\x97\x30\x39\xef\x11\xa2\xf4\x21\xa1\x99\xf3\xad\x35\xa3\x4f\x07\x7c\x2a\x23\x75\x8c\xba\xb2\x7b\x54\x95\x95\xd8\x72\x0d\xeb\xcd\xa5\x58\x4a\x56\x47\x77\x2e\x27\x4e\xd1\x70\x67\xae\x4e\xc6\x78\xc0\x57\x8e\xec\xcd\x8c\x60\x54\xf1\xcd\x31\x9f\x46\xf4\x12\xff\xe2\x31\x98\x9e\xf5\x40\xb4\xdb\xe1\xed\x66\xfa\xe0\x59\x89\x5e\x57\xc6\x0c\x9e\x89\x52\xb7\x11\x1d\x89\xea\xba\xd6\x8e\x1e\x60\x4a\xaf\xb5\x09\x7d\x64\x2e\x2b\xa5\xa3\x1b\x2e\x6b\x83\x86\xb7\xcf\x73\xd6\x00\x15\x1a\x13\x97\xd7\x8a\x10\x9d\x72\x7e\x19\x43\xc7\xc8\x2f\x78\x9c\x59\x9f\x07\x79\x3a\x16\x73\xa2\xf7\x4c\xb8\x4d\x24\x76\x21\xf8\x5d\xea\x7e\x3e\x2a\x7b\x4f\xa9\x81\x5b\x67\x5d\xfb\x0f\x79\xa1\x5a\x08\x8b\xcd\x4f\x00\x00\x00\xff\xff\x98\x12\x03\xcb\xb3\x01\x00\x00")

func deleteMdBytes() ([]byte, error) {
	return bindataRead(
		_deleteMd,
		"delete.md",
	)
}

func deleteMd() (*asset, error) {
	bytes, err := deleteMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "delete.md", size: 435, mode: os.FileMode(420), modTime: time.Unix(1454192861, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deployMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\xbd\x4e\x2b\x31\x10\x85\x7b\x3f\xc5\x51\x72\xa5\xdb\xe4\x26\xfd\xa5\x42\x40\x41\xcf\x03\xec\xc4\x9e\xd5\x5a\xd8\x1e\xcb\x3f\x28\xdb\xf0\xec\xd8\x9b\x90\x04\x14\xe8\x76\xc7\x73\xbe\xcf\x3e\xea\x45\x60\x38\x3a\x99\x21\x81\x21\x09\x5e\x12\x63\xac\x41\x17\x2b\x21\x83\x9c\xc3\x2c\x15\x81\xd9\xa0\xb4\x65\x81\xcd\x48\x35\x60\xa0\xc8\x87\x53\x78\xd8\xe2\xfe\xf2\xd7\x52\x8d\x61\x0d\xfb\x28\x85\x43\xb9\x03\x61\x5f\xad\x33\x3d\xaa\x13\x53\x61\xa3\xc6\xe6\x62\xd2\xd3\xd9\xb5\x01\x05\x73\xc4\xf4\x8f\xc8\xa9\xad\xf8\xc6\x82\x9e\x58\xbf\xe6\xea\xbb\x3f\x73\x23\x8f\x28\x13\x9f\x64\xed\x5a\x9f\x04\x78\x2a\x6d\x37\x2f\xa7\x4e\x34\xb9\xa3\x76\xd3\x13\x59\x94\x2d\x7f\x33\x82\x94\x73\x72\xab\xd4\xf3\xb8\x3c\x2f\x26\x1e\x39\x75\xc1\x9e\xc1\x87\xe8\xac\xb6\x65\x39\xd1\x14\x10\x29\xe7\x9b\xfd\x20\x90\xef\x3e\xf9\xd6\x86\x52\xeb\x35\x9e\x0e\xe4\xa3\xe3\xac\xd4\xe3\xb1\xe1\xde\xe5\xa5\x59\x1b\x96\x7b\xea\x9a\x52\xeb\x08\xc6\x26\xd6\x45\xd2\xfc\x5f\xa9\x61\x18\xf2\xa4\xfe\xe0\x8a\xd9\x67\xbf\x83\xce\x00\xac\xde\x77\x86\xdf\x76\x7e\xa6\x18\x57\xb7\x71\xf8\xf7\x80\xab\xad\x2f\xf4\x1c\x59\xdb\xd1\xea\x8b\xe2\x07\x06\xd5\x72\x6b\xd4\x06\x76\x01\x7e\x04\x00\x00\xff\xff\xc2\x6d\x00\x28\x5d\x02\x00\x00")

func deployMdBytes() ([]byte, error) {
	return bindataRead(
		_deployMd,
		"deploy.md",
	)
}

func deployMd() (*asset, error) {
	bytes, err := deployMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "deploy.md", size: 605, mode: os.FileMode(420), modTime: time.Unix(1454192864, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _docsGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x56\xdf\x6f\xdb\x36\x10\x7e\xb6\xff\x8a\xab\x8b\x16\x52\x6b\x2b\xed\x8a\x61\x40\x80\x3c\x24\xdd\xba\x06\xe8\xaf\x35\xdd\x3a\xa0\x19\x56\x5a\x3a\xdb\x9c\x29\x52\x23\x29\xbb\x41\x91\xff\x7d\x77\x14\x2d\xc9\x96\xd3\x0d\xcb\x83\x43\x1f\xbf\xbb\xfb\x78\xfc\xee\xe8\x93\x93\xa5\x39\x5d\xa2\x46\x2b\x3c\xc2\xd2\xcc\xe6\x52\x17\xc2\x0b\x98\x55\xeb\x25\x14\x26\x77\x90\x8d\xc7\x27\x27\xf0\x4e\xe4\x6b\xb1\xc4\xc6\x64\x6a\x5f\xd5\xde\x41\x6e\x94\xb1\x58\x40\x29\xec\xba\x30\x5b\x0d\x0b\x63\x41\xc0\x52\x6e\x50\x83\x37\x95\xcc\xb3\x71\xd5\x73\x1c\x8f\x65\x59\x19\xeb\x21\x19\x8f\x26\xf3\x1b\x8f\x6e\x42\x8b\x45\xe9\xf9\x9f\x34\xfc\xe9\xbc\x95\x7a\x49\x76\x5a\x2f\xa5\x5f\xd5\xf3\x2c\x37\x25\xb1\x54\x42\x2f\x67\xb4\x2c\x8d\xe6\x74\x27\xbb\x9c\x93\x7d\x60\x29\x7d\xbe\x42\xa5\x56\xe4\x32\xdb\x1a\x5b\x6c\xad\xa8\x0e\xa3\x89\x0a\xbf\x34\x1f\xe1\x04\x94\x2d\x0d\x87\xac\x98\xa8\x59\x30\xd7\xba\x44\xed\x85\x97\x46\x67\x63\x7f\x53\x61\xb3\x47\xec\xea\xdc\xc3\xd7\xf1\xe8\x8d\x28\xc3\x57\x22\x3b\x1e\xbd\x90\xaa\xfd\x72\xdb\x46\x72\x30\xbf\x01\x62\x80\x36\x1b\x6f\x84\x8d\xb6\x33\xf8\xf4\x07\xaf\x28\xc6\xd7\xc9\xa5\x76\x5e\x28\x15\xf2\x4c\xa6\x30\x91\xbd\xef\x59\x59\x4c\x6e\xa7\x8c\x3a\xff\x78\x05\x39\xd5\x99\x18\x49\xa1\x1c\x03\xc5\xd6\xcd\x7a\xa6\x0e\x7b\x15\x18\xd6\x4c\x05\x2a\x6b\xfe\xc2\xdc\x07\x87\xdd\xfa\x38\x72\x51\xeb\x9c\x73\x06\x68\xfb\xa5\xc3\xfe\x88\x95\x32\x37\x03\x64\x11\xcc\x1d\xec\x52\x6f\xcc\x7a\x80\x92\x6c\xc5\x0e\xf5\x4a\x3a\x3f\x00\x29\x32\xf6\xf3\x29\x1c\x62\x0a\xb6\xf6\x02\x5d\xd4\x52\x15\x03\xd4\x9c\xad\x1d\xe8\xbd\x51\x8a\x31\x73\xd2\x21\x6c\xd0\xba\x1d\xce\xd2\x06\x1b\x3b\xe8\x6f\x12\xb7\x0c\x55\x66\x19\x25\x1e\x98\x99\xa5\x1b\x62\x42\x96\x1e\xea\x20\xeb\x3b\x8b\x9b\x88\xdc\x92\xee\xa0\xb0\x37\x33\x5b\x87\x3b\xa6\x25\xad\x3a\xe8\x4f\x7a\x23\x2d\x89\x9a\xae\x12\x48\x26\x52\xcc\x15\x06\x82\xa8\x37\x1d\xea\x2d\x09\xbb\xa9\x88\x8c\xdb\x72\xa9\xa9\xf9\x3a\xc4\xaf\x9a\x94\x46\xf2\xd1\xa1\x24\x7e\x45\x8a\x5c\xc9\x92\x91\xfc\x7f\x78\x82\x3d\x91\x07\x62\xd4\xa1\xbd\x70\xd5\xd2\x8a\x10\xea\x9c\x1a\x85\xf7\xeb\x60\xe9\x65\x7c\x71\xfe\x4b\xd0\x8b\xf8\xbb\x7f\xb9\x7a\x1d\x2f\x94\x16\xd1\xde\xf4\xc4\x7b\x24\x6f\x0b\x16\x49\x74\xda\x01\xe9\x7c\x9f\x03\x08\x32\x82\xa3\x94\xaa\x69\xb7\x6c\xcc\x17\x1b\xfd\x92\x14\xa4\xc9\x62\x0c\x6a\x1e\xee\x28\xa9\x21\x4c\x91\xec\xa2\x5e\x2c\xd0\x52\x97\xf3\x00\xfa\x73\xda\x34\xeb\xe9\x19\x58\x1a\x1a\x18\x1b\x8f\x7c\x46\x52\x67\x1f\xad\xf4\x78\x15\x7a\x35\xa1\xc9\x93\x5d\x55\xb4\xf4\x8b\x64\x72\xad\xef\xc3\x03\x77\xcd\xa5\x08\xc9\xb9\xc3\xd3\xb4\xe7\x94\xbc\xae\x9d\x3f\x77\x0e\x7d\x12\x00\xdc\xf5\x0c\xa0\xd3\x8d\xca\x82\xd3\xed\x66\x52\xf6\x06\xb7\x49\xfb\xe5\xf7\x97\x1f\x5e\xbf\x7a\x1b\x94\x92\x50\xcf\x61\x3a\xed\x01\xcd\x82\x64\x68\xb6\xcd\x06\x05\xdb\x70\x9c\x87\x16\xf9\x32\xd1\x7e\xbd\x1d\x8f\x1c\x5b\x36\xd9\x46\x3a\xe9\x93\xb2\xc8\xde\x09\xeb\x30\x21\x52\x17\x7c\xf4\x24\x65\xaf\xa6\xa6\x71\x04\x39\x4e\x1f\x8b\xe6\xd2\x58\x7c\x1a\xeb\x2c\xb0\x06\x01\x6f\xc0\xcb\x92\xea\xd6\x14\xb8\xd9\x4b\x5c\xdc\x9d\x82\x26\x93\x4f\x77\x60\x2a\x9c\x64\x0e\xbb\xe8\xef\xb1\x42\xe1\x93\x09\x00\x95\x4a\x77\xd9\x25\x3c\xee\x63\x94\xc8\x31\x71\xa4\x84\x50\x52\xfe\x7c\x2c\xa7\x30\x7b\xba\x63\xb4\x3b\x63\x78\x34\x3c\xda\x52\x6a\xa1\x62\x47\xc5\x99\xdb\x42\xba\xb9\x2b\x35\x9d\x5f\x90\x10\xab\x15\xcc\x8d\x51\x6c\xe1\x81\x02\xe1\xaf\xb3\xe8\x75\x63\xd9\x9b\xca\xa1\x86\xf0\xd9\xd3\x38\xd2\xee\x73\x3c\x7d\x62\xe1\xd1\x2e\x51\xda\x40\x92\x06\x41\x93\xba\xbd\xa8\x0f\x6c\x49\xa1\x2d\x52\xca\x64\xa2\xda\x7c\x27\xb5\xe8\xc8\x5a\x73\xf0\x98\xac\xcd\xbd\x05\xef\xc4\x07\xb1\xc4\x72\x75\x94\x9a\x5d\xa2\xf5\x0d\x46\x31\x00\x1c\xf2\xe9\xae\xc8\x6d\xf9\xe5\x03\x9f\x25\x5c\xba\x40\x2f\x17\x0e\xe1\x51\xeb\xd2\x16\xee\x6d\x85\xfa\x94\x18\xda\xac\x5f\xcd\x33\x60\x0d\xb2\xb9\xb9\xce\xc9\xe4\xee\x08\xcf\x95\x71\x78\x2c\xc4\x82\x1e\xa3\x7e\x8c\x6b\x3d\x8c\xf2\xdc\x14\x78\xa1\x4c\xbe\x3e\xed\x80\x07\x9d\x18\xfb\x30\x0a\x93\xce\x74\xc4\x3b\xa5\xa5\xf6\xb4\x3f\x85\xef\xb8\x07\x0e\xb2\xbc\x40\x9d\xe3\xff\xca\x10\x3c\xff\x25\xfa\x4b\x0c\xb3\x71\x57\x49\xcd\x0a\xd8\x0b\xd2\x03\xa4\xd9\xcb\x57\xb8\x41\xf5\x0d\x2e\x70\xfd\xe4\xd9\xb3\x4f\x0f\x0a\x1e\xd7\x87\x6d\x76\x3f\x74\xd9\xb4\xf9\xb1\x45\xa3\x4e\xd1\xa0\xb8\x8b\x4f\x77\x2f\x6d\xfd\x43\xe4\x27\xe5\xb1\x8b\xa0\x29\x68\xba\x33\xb4\x2e\xec\xf0\xb4\xbc\x0b\x3e\x4c\xd1\x24\x18\xe2\x2f\x6a\x45\xef\x35\x37\x67\x5f\x70\xa1\x59\x07\x5a\x3b\x46\xaf\xf3\xdf\x93\x5b\x0c\xf0\x5f\x94\xc6\xd0\x4b\x8f\xe5\xe1\x11\x01\x66\x70\x0c\xad\xd7\xfb\x4c\x69\x88\x1c\x5c\xeb\x0e\x43\x77\x6a\x71\xf1\xcd\x66\x61\xa1\x5e\x6a\x7a\x06\x03\x73\x37\x50\x48\xb7\xdf\x6a\xed\x2e\x85\x44\x71\x90\x66\x63\xad\x5b\x35\xfc\x6c\xc5\x0d\x49\x66\x28\x88\x0f\xf8\xc5\x1f\xcf\xcb\x3b\x5d\x46\x7e\xdf\x16\xd0\x1e\xf7\xde\x19\x1d\x25\x8c\xaf\x11\xff\x54\xdd\xa3\x41\x32\x4d\x1e\xb8\x94\x25\x3a\x6d\x3d\xf8\x81\xec\x57\x8b\x0b\x11\x5e\xc4\xf6\x4d\x1a\x50\x3b\x28\x4a\x1c\x91\xfb\x3d\xd8\x16\x66\x45\x3f\xab\x68\x16\xa6\x3d\xa2\xdd\xbc\x79\xf8\x10\xee\xb5\x92\x68\x49\xc7\x9e\xde\xfd\xf8\xa7\xc7\x5b\x54\xf1\xc1\x27\xe2\x3f\x7c\x4f\xbd\xf4\x34\x1d\xb2\x2c\x70\x21\x6a\xe5\x4f\xf7\x2f\xf5\x96\xe6\xf4\x3f\x01\x00\x00\xff\xff\x4d\x72\xd7\x29\x25\x0d\x00\x00")

func docsGoBytes() ([]byte, error) {
	return bindataRead(
		_docsGo,
		"docs.go",
	)
}

func docsGo() (*asset, error) {
	bytes, err := docsGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "docs.go", size: 3365, mode: os.FileMode(420), modTime: time.Unix(1454429161, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _docsMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x4f\x5b\x4e\xc4\x20\x14\xfd\x67\x15\x27\x99\x1f\x4d\x74\x8c\x5b\x70\x0d\x5d\x00\x04\x6e\xa7\x64\x0a\x17\x2f\x60\xdb\xdd\x0b\xa8\x9d\xc4\x84\x0f\x38\x9c\xa7\x9a\x16\x82\x36\x89\x76\x38\xb6\x59\xc3\x72\x08\x26\x3a\xac\x54\x32\x0e\xae\x10\x32\x0e\x65\xf1\xb9\x13\x6a\xa0\x58\x4c\xf1\x1c\x31\x0b\x87\x86\xd3\x43\xe1\x23\x5d\xf1\x71\xc0\xd1\x6c\xea\x5a\xe0\xdb\xc9\x48\x3e\x91\x83\x8f\x85\x07\x5b\xaf\x94\xf3\xd3\xfb\xb3\x46\x32\x37\x12\xe4\x0e\x9b\x32\xa2\xac\x89\x48\x24\x33\x4b\x00\xb7\xcb\x08\xca\xcd\xf8\x4e\xc8\x56\x78\x6d\x11\x37\x70\x13\x91\x11\xbb\xf4\xc7\xd9\xa2\x90\x04\x1f\xcd\x7a\x55\xea\x72\xc1\xe4\x53\x56\xea\x15\xd3\x91\x5a\xe4\x9b\x46\x2f\xf8\xa3\x82\xc1\x9d\x8e\x8d\xc5\xbd\x0c\x34\x49\x2b\x84\x36\xab\x95\x69\x1d\x7f\x49\xdd\xf2\x6f\xef\xe9\x13\x75\x67\x7c\x79\xda\xc6\x7f\xa4\xbd\x80\xad\xad\x22\x14\x2d\x81\xe7\xbe\x42\xf0\x59\x49\x0e\xe0\x94\xd5\x21\xeb\x73\x51\xd3\x89\xba\x07\xea\x78\x8b\xff\x70\xda\x7d\x51\xdf\x01\x00\x00\xff\xff\xc6\x29\xa6\x02\x9d\x01\x00\x00")

func docsMdBytes() ([]byte, error) {
	return bindataRead(
		_docsMd,
		"docs.md",
	)
}

func docsMd() (*asset, error) {
	bytes, err := docsMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "docs.md", size: 413, mode: os.FileMode(420), modTime: time.Unix(1454418392, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dryrunMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x55\x4d\x6b\xdc\x30\x10\xbd\xeb\x57\x0c\x4e\x20\x2d\x89\x43\x13\x08\x94\x2d\x14\x16\x9a\x42\xa1\xf4\x92\x40\x8f\xb1\x62\x8f\xd7\x4a\x65\xc9\x95\xe4\xf5\xfa\x92\xdf\xde\x27\xd9\xd9\x7c\x6d\xd3\x36\x3d\xec\xc1\x9a\xd1\x9b\x37\xef\x8d\x66\xc5\xb2\xe3\x0d\x69\x0e\x9e\x46\xdb\x53\xc7\xae\xb6\xae\x25\x49\x59\xe5\x46\x72\xbd\xc9\xc8\xd6\x24\xcd\x48\x16\x31\x19\x94\x35\x34\xa8\xd0\x50\x68\x98\x8a\x3c\x47\x56\x8e\xac\x82\x6a\x2d\x57\x47\x48\xac\xc8\x58\xaa\xd8\x07\xd7\x97\x41\xad\x99\x96\xdf\x2f\xa8\x6c\xa4\x59\xb1\xc7\x4d\xad\xe9\x9a\xa9\x95\x15\x1f\x0b\xb1\xb7\x47\xdf\x6c\x48\xa0\x42\x7c\x9a\xea\x79\xea\x3d\x27\xf4\xda\x6a\x6d\x07\x65\x56\xe4\xc7\xf6\xda\x6a\xbf\x10\x22\xa7\xe2\xb0\x20\xc7\xde\xf6\xae\xe4\x2d\x5e\xe9\x58\x06\xae\x62\x38\xdf\x11\x76\xdc\xda\xf5\x14\xbe\xdd\x11\xee\xbb\x2a\xdd\x8e\x7c\xce\x37\xb2\xed\x34\x7b\x21\x3e\x5b\x47\x3c\x7d\x91\xaa\x93\x3a\x8d\x5c\xcf\xd4\x7a\x53\x46\xd6\x9e\xb2\xda\xda\x2c\xb5\x9d\x5d\x4b\x97\xd1\xd0\xa8\xb2\x99\x12\x0d\xaf\xd9\x01\x9f\x0d\xf4\xe8\xb4\x1d\xb9\x3a\x8a\x30\x07\xa8\xea\xf9\x69\x8f\xb6\x0f\x5d\x1f\x8e\xe9\xb2\x51\x7e\xfe\x00\xd3\x0e\x64\xd9\xc0\x9c\x94\xac\x8c\xd4\x38\xfc\xd9\x43\x5e\x9f\x44\xa4\x60\xa3\xc0\x1f\x20\x7a\x50\x68\xa9\xb1\xc3\x23\x82\x64\x64\x0b\xdd\xa5\x63\x02\x54\xad\x36\x5c\xdd\xdb\xd7\x39\x7b\xc3\x65\x38\xf0\xf4\x26\x0b\x80\x04\x8d\xec\x6d\x44\x44\xea\x1a\x55\xa9\x04\x3b\xe5\x63\x9f\x93\xb3\x52\x2b\xe9\x67\xb8\xbb\xea\xad\x54\x26\xe0\x97\x10\xb3\xb2\x77\x0e\x37\x33\xb0\xd4\x8c\xdc\xe9\x0a\xac\x2e\x8a\xc2\x37\x62\x9f\x64\x1c\xb7\x49\x0e\xda\x4e\x8f\x10\x44\x87\xf7\x9c\x67\x2e\x57\x10\x14\x01\x82\x9a\xa6\xd2\xec\x16\x74\x15\x6f\x5f\x29\x53\xf1\xe6\x78\x3a\x4c\x71\x20\x04\xd5\xf2\x02\x22\x54\x7c\xe3\xd3\x59\x0b\xcb\xdd\xb8\xa0\x93\xd3\xf7\xe9\x3b\x26\x40\xd5\x05\x9d\x4d\xc5\x12\xaf\x67\x95\xd2\xe9\x82\xe6\x2e\xd2\x11\x3c\x8c\x0a\x00\xe9\x37\x2c\x31\x00\x7f\xaa\xf8\x9a\x26\x76\xb0\xbc\xab\xf4\x32\x4b\x28\x2d\xc4\x97\x69\x60\x07\x76\xc9\x24\x80\x53\xf1\x50\x7a\x40\x15\x47\xd1\x32\xf3\x3c\xf6\xe0\x51\xcb\x15\x9c\x7d\x32\xb4\x32\x90\x35\x7a\x9c\xe7\xdd\x30\x57\x7e\xbe\x09\x8e\x8b\xff\x73\xfa\x1f\x9d\x7c\xa4\xeb\x23\x45\x5f\xed\x71\x52\xef\x42\xb5\x4a\x4b\x87\x26\x43\x7c\x8d\xa5\x34\x69\x4d\x78\x3c\x9e\xf9\x75\x28\x1e\xf0\x3a\x4c\xad\x56\xfd\xbc\x14\xe7\x15\xf7\x37\x02\xdc\xbe\xc2\xd7\xfd\xaf\xcb\xcb\xf3\x8b\xcb\xe9\xfa\x54\xf9\xa5\x09\xa4\xfc\x23\x9d\x9d\x9c\x3e\x11\x2c\x9e\x9e\xbc\x9b\x7a\x5c\x62\x81\xa0\x0a\xc0\x63\x57\xb1\xcd\xc1\xba\x1f\x1e\x93\xe1\x40\x44\xa7\xb5\xbd\x5d\xf9\x78\xff\x0d\x46\x09\x9b\x42\xa2\x23\xfc\x5b\xf0\x9d\x0a\xcf\xfb\x4d\xd1\x6d\xbf\x94\xd7\x91\x73\xbe\xdb\xf3\xdd\x91\xd8\x4f\xe4\xf8\x2b\x00\x00\xff\xff\x9f\xaa\x2b\x78\x9c\x06\x00\x00")

func dryrunMdBytes() ([]byte, error) {
	return bindataRead(
		_dryrunMd,
		"dryrun.md",
	)
}

func dryrunMd() (*asset, error) {
	bytes, err := dryrunMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dryrun.md", size: 1692, mode: os.FileMode(420), modTime: time.Unix(1454192881, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _envMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x92\xd1\x6b\xdb\x30\x10\xc6\xdf\xf5\x57\x1c\xee\x60\x1b\x24\x86\xa4\x7b\x2a\xec\x21\x85\xcc\x2d\xcb\x92\x41\x33\x46\x9f\x66\xc5\x3e\xdb\xca\x64\x9d\xb1\xe4\x24\xde\xe8\xff\xbe\x93\x1c\x77\xa1\x10\x08\x44\xc8\xa7\xfb\x7e\xdf\x77\x27\x16\x3f\x9f\x60\x25\xeb\x5d\x2e\x21\x27\xb4\x60\xc8\x81\xed\x9a\x86\x5a\x07\x68\x0e\xaa\x25\x53\xa3\x71\x70\x90\xad\x92\x3b\xcd\x15\xd4\x39\xa0\x02\x5c\x85\xb0\xa3\xd3\x04\x2c\xf1\x59\x59\xe0\x9f\x84\x02\xa5\xeb\x5a\x84\xa6\xa5\x83\xca\x31\x87\x5d\x0f\x8b\x06\x4f\xb1\x10\x5b\x7e\x90\x4e\x71\x02\xd3\x29\x37\x4e\xa1\xd0\xb2\x04\xa9\x35\x1d\x2d\xf4\xd4\x81\x23\xc8\xb1\x50\x06\xaf\xe8\x1e\x2b\x95\x55\x20\xb9\x39\x9e\x1a\xb2\xdc\xdb\x51\xa0\x28\x3a\x93\x39\x45\x06\xa4\x83\xb6\x33\x4e\xd5\x18\xc3\x17\x6a\xb9\x4e\xd6\x8d\x46\x50\x06\xd6\x94\x63\xbc\xb7\xd0\x59\x65\x4a\x48\x19\x2f\x43\x6b\x63\x56\x8a\xd7\x8b\x6f\xcb\x14\xb8\x9c\xcb\x12\x1a\x2b\xc8\xc6\x09\x3a\xfe\xfe\x21\xf2\x05\xd1\xc7\x34\x86\x7b\xac\x94\xc9\x83\xa6\xcd\xd0\x30\x53\x30\x5e\xf2\xb1\x95\x0e\xbd\xff\x34\xb4\xdc\x5b\x32\x6c\x50\xb1\xf6\x40\xed\xe3\x31\x7b\xcc\x1c\x53\x2b\xc3\xdc\x6c\xb8\x7d\x05\x7f\x6f\xe1\x8f\x6a\x86\xfa\xae\x61\x23\x39\x36\x9a\xfa\x18\x9e\x39\x96\x5a\xf6\xcc\x84\x83\x54\xc8\xac\xee\xb4\x53\xde\x97\x77\x6a\x39\xd9\x9b\x1b\x58\x0e\x56\xad\x10\x97\xc6\xc3\x20\xf9\xad\x8f\xb7\x92\x39\xf3\x69\x2a\x4b\xdd\xfb\x3f\xc8\x48\x6b\x26\xe2\x72\xc9\xa6\x94\x03\x83\x98\xb3\x07\x03\x8b\xef\x8f\x9c\xed\x6f\x34\x93\xf0\xb2\x56\x65\xe5\xce\x4c\x70\x54\xae\xba\x13\x22\x4d\x53\xf1\x0e\x24\x4f\x76\xfc\x30\x45\x58\x6d\x92\x64\xf5\xfc\x6b\xbb\xf9\xba\x5c\x7f\x0e\x0d\xbc\xd0\xf4\x55\x28\xbc\x12\x9b\xf6\x0d\xd7\x01\xff\x5b\x1a\x23\x19\x27\xe5\xb3\x4e\x94\x7b\xe8\x76\x9e\xea\xcc\xc3\x89\x1c\x25\xef\x06\xe7\x38\xac\x02\x1b\x1b\xe4\xf8\x86\x37\xea\xbc\x9e\xf5\x35\xce\xe4\x71\xfb\xf0\xe3\xfe\x92\x73\x20\x7b\x6a\x30\x53\x45\x7f\x65\xff\x78\x3d\x78\x6d\xfc\x10\xc3\x7c\xfd\xc6\x8c\xb4\xe1\x62\x50\xf3\x27\xf1\x57\x00\x44\x17\x5d\xa2\x3b\xf0\x57\x7c\x79\x19\x11\xdf\x46\xb3\xf9\xed\xec\xd3\x7c\x36\x9f\xcf\x6e\xf9\x18\x71\xd1\x8b\x78\x09\x34\xff\x02\x00\x00\xff\xff\x2f\x34\x2f\x1b\x9a\x03\x00\x00")

func envMdBytes() ([]byte, error) {
	return bindataRead(
		_envMd,
		"env.md",
	)
}

func envMd() (*asset, error) {
	bytes, err := envMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "env.md", size: 922, mode: os.FileMode(420), modTime: time.Unix(1454192898, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _faqMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x55\x4d\x6f\xdc\x36\x10\xbd\xef\xaf\x18\xc0\x87\xa6\xc0\x7a\x7d\xef\x25\x30\x52\x34\x75\x51\xa4\x07\x1b\xe8\x21\xc8\x81\x22\x47\x12\x53\x8a\xa3\xf2\x63\x37\xfb\xef\xf3\x86\xd4\x7e\x18\x30\xe0\x95\x38\x9c\x79\xef\xcd\x9b\xd1\xee\xe1\x81\xfe\x94\x13\x39\xa1\xb3\x54\x5a\x4c\x34\x13\xd3\x52\x43\xf1\x6b\x60\xe2\x78\xf4\x49\xe2\xc2\xb1\xe4\x8f\xbb\xdd\x4b\xf9\x25\xd3\xec\xa7\x39\x9c\x29\xb1\x95\x05\x07\x8e\x1d\x15\x21\x9b\xd8\x14\xa6\xcc\xab\x49\xfa\xe3\xf9\xdf\x57\x32\xd6\x4a\xc5\x4d\x1a\x25\x51\x2e\x66\xf2\x71\x22\x13\x1d\xad\x49\x5c\xb5\xc5\x4b\x7c\x57\xe1\x40\x6f\xb3\xcf\x7a\x7a\xf4\x8e\x33\xa1\x00\x40\x20\x99\xcf\x12\x4c\x0b\x97\x11\x85\xb3\xd4\x64\x39\xef\x5b\x2e\x13\x82\x9c\x72\x43\x0f\x18\x6c\xb2\x07\xb8\x2d\x05\x4d\xc9\xc4\x1a\x4c\x52\x28\x9c\x73\x8b\xb8\x2b\x48\x26\x23\xdd\xff\xd5\x27\x76\x07\x7a\x65\xa6\xaf\x8a\x1b\x5c\x1c\x8e\xbd\x09\xf9\xdb\x87\x07\x73\xca\x8f\x77\x6f\x7e\xed\x6c\xea\xba\x86\x73\xe7\x73\xe1\xa9\x55\x47\x1f\xf8\xb0\xbb\xa8\x0a\x32\x45\x19\x39\x3f\x8e\x9c\x90\x00\x8f\x88\x7f\xe5\x74\xe4\x14\x00\x08\x9a\xde\x1e\xa8\x66\x90\xfe\x14\xa4\xba\x3f\x24\x2d\x9d\x30\x10\x0f\x22\x25\x97\x64\xd6\x7b\xea\xa7\xd9\xdb\x99\x2c\xb2\x0d\x4a\x13\xe2\x37\x5c\x13\x97\xa2\xa8\xa0\x76\x2a\xec\xf6\x34\xd4\xa2\x30\x26\x8e\x9c\x20\xd5\x99\x5a\xa5\x24\x43\xcd\x1b\x9a\xaf\x6f\x9c\x92\xc1\xe5\xe5\xdb\x87\xb9\x94\x35\xff\xf6\xf4\x34\xf9\x32\xd7\xe1\x80\x06\x3c\x99\x95\x7f\x3c\x0d\x02\x5e\x69\x45\x13\xb8\xf3\x6f\x46\xd1\x42\x3e\x8e\xc9\x00\x1d\xda\x59\x13\x23\x63\x92\x3a\xcd\xa2\x55\xa1\x6f\xf0\x23\x17\xbf\xf0\x81\xc0\xa8\x6b\x01\xa8\x19\xbc\x9e\x91\x16\xae\x03\xe1\x28\x85\x6c\x4d\x2a\xcf\x5d\xe7\x2e\x54\x37\x4b\x6a\xbb\x36\x7b\x2c\xe6\x4c\x16\xc0\xe1\x53\x0f\x7d\x66\xa6\xb1\xb6\xda\x8a\x2b\xc0\x9c\xe5\xa6\xd8\x0a\x88\x7b\xbc\xfc\x8f\x91\x1a\xd1\xa0\x2b\xab\xea\x6a\x82\x86\x2f\x68\xd5\x73\x69\x39\x14\xa5\xba\xeb\x94\x7c\x13\xf0\xae\x2d\x57\x94\xda\x74\x49\xf8\x3f\xfb\x65\xd1\xa0\x56\x11\x48\x2a\x10\xe6\xad\x25\x06\x48\xee\x82\x31\x1d\x11\x9d\x3c\x2a\x80\xe1\x4c\x7f\x9b\x65\x70\x66\x8f\x53\x0d\xcd\xf4\x59\xf4\xfe\xe1\x4e\x8e\x26\x92\x26\x56\x47\xab\x8e\x00\xa5\x00\x07\xf9\x01\xb4\x6f\xf8\x75\x55\x3b\x93\x5f\x56\xc9\x28\x81\xcc\x6c\x90\x11\xea\x7d\x67\x5b\x1a\x88\xab\xe9\xf6\x5a\xe8\xc4\x21\xe8\xff\xa3\x49\xcd\xb6\x23\x1c\xa3\x29\x00\x85\xb9\x15\x70\x62\xab\xca\xdc\x7d\xa7\x08\xde\xa5\x84\x11\x35\xf2\x34\xc3\x69\x0c\x7b\x70\xba\x50\xcc\x87\x77\x2e\x06\x7c\x15\xb1\x70\x84\xa1\xb5\xd4\x17\x71\x7c\xf8\x8e\x4a\x8d\xe4\xdd\x31\x1a\xf2\x59\xfa\xb4\xbc\xe4\x2d\x58\x91\x6c\x17\x9a\xce\x94\x31\xde\x1f\x37\xe2\xfa\xdc\x17\x0d\x46\x17\x26\xf0\xa1\xed\x12\x1d\xed\x3d\x6e\xd6\x7c\x77\x3a\xf2\xe9\x71\xae\xd1\x61\x72\x69\xf1\x21\xf8\x8c\x85\x85\x7d\xe1\x38\xc0\x40\x63\xb3\x23\x3c\xe3\x13\xe6\xc0\xc7\xa3\xd8\xc6\x1b\x5b\xa0\x0e\x19\x2b\x41\x87\xd5\x62\x60\xda\xce\x40\xb6\x1a\xfb\xbe\x52\x65\x37\x3f\xe1\x60\xf6\xa5\x2f\x00\xed\x30\xf6\x15\xd4\xf3\x18\xb4\x3d\xd5\xd8\xb4\xe8\xee\xdc\xae\x42\x3e\xe8\xcf\x09\x33\x08\xfe\xd8\xae\x70\xe8\x38\x7a\xdb\x15\xf8\x5d\xba\xaf\x00\xf7\x66\xa9\xd9\x20\xad\x89\x7a\x63\xf1\xbd\x33\xf9\x9d\x18\xd7\xb9\x91\x95\x53\x63\xde\x65\xfc\xeb\xf5\x9f\x2f\x24\x47\x6d\x52\x71\x70\x11\x16\x01\x5b\x83\x05\xd3\xed\xe4\xfb\xc2\x5c\x74\x09\xe8\x4b\x04\x61\x09\x74\x3f\xcb\xa4\x83\xdd\x41\x7d\x02\xb9\x97\xcb\x57\xe1\x42\x44\x69\xc1\x04\xdd\xb2\xde\xf5\x01\x6e\xba\x03\xda\xa5\xc7\xfa\x12\x3b\xdc\x4f\xb1\x7f\x1f\x30\xb0\x0e\x94\x03\x4f\xc6\x62\x7e\x4d\x56\xeb\xa1\xdc\x2d\x69\x4f\xd1\xbc\x2c\xdd\x5e\x32\x96\x13\xf4\xee\xcb\x63\x11\x60\xed\x2c\x5b\x78\x2b\x94\xb8\x59\xdc\x72\x97\x3a\xa0\x8b\xe1\x96\x72\x4f\x7e\xc4\x1a\xba\xc1\x19\xbd\xa2\x69\x51\xe1\xac\x8e\x81\x09\x55\x07\xac\x51\x0d\xd8\x34\x24\x33\xa1\x8b\x6a\x8b\xcb\xca\xc1\xdf\x70\x7e\xec\x74\xda\x47\x07\x2f\xd0\xe1\xab\x0d\xfa\x3a\x3a\xec\x7e\x06\x00\x00\xff\xff\x46\x55\x05\x7f\x4e\x07\x00\x00")

func faqMdBytes() ([]byte, error) {
	return bindataRead(
		_faqMd,
		"faq.md",
	)
}

func faqMd() (*asset, error) {
	bytes, err := faqMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "faq.md", size: 1870, mode: os.FileMode(420), modTime: time.Unix(1454428773, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _functionsMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x54\x5d\x4f\x53\x41\x10\x7d\xdf\x5f\x31\xb9\x3c\x08\x49\xa9\x02\x12\xa5\x6f\x44\x43\x42\x22\x6a\xd4\xc4\x47\xba\xdc\x9d\xdb\x6e\xdd\x8f\xeb\x7e\x08\xd5\xf8\xdf\x9d\xd9\xbd\xf7\x52\x8c\x51\x7c\x21\x74\x3a\x73\xce\x99\x73\x66\x2b\xce\xa1\xcb\xae\x4d\xda\x3b\xd0\x11\xd2\x1a\x21\x5a\x69\x0c\xc6\x04\xd9\xe9\x04\xda\xc1\x79\x8f\x77\x73\xd8\x69\x0c\xd8\x07\x8c\xe8\x52\x04\x49\x5f\x7f\xfe\x08\x6f\xa4\xbd\x51\x72\xea\x98\x0b\x71\x31\xfc\x1b\xc1\xe6\xc8\x30\xad\xc9\x0a\x41\x26\x30\x28\xa9\xe0\x1d\x31\xf9\x1c\x5a\x84\x4e\x1b\x84\xfd\x90\x5d\xd2\x16\x41\x61\x8f\x4e\x11\xf8\xc1\x0c\x62\x6e\xd7\x20\x23\x4d\x2b\x92\xb0\x89\xe0\x03\x58\xa9\xdd\x7c\xe5\xe7\xf0\xae\x67\x7c\xd2\xba\x85\x1d\xe6\x4d\x24\x81\x05\xd1\xca\x2d\xdc\x20\xf4\x46\xb6\xa8\x78\x0f\x5e\xee\x7a\x6c\x7c\x12\x41\xe9\x80\x6d\xf2\x61\x7b\x4d\x4c\x3d\xb6\xba\xdb\x6a\xb7\x22\x01\x49\x6a\x13\x27\x72\x1e\xb3\x68\xa9\x0f\x88\xcc\xb7\x32\x11\x1c\x09\xe1\x3a\xef\x7e\x79\x7e\x05\xc1\x1b\x9c\xc3\x65\x57\xd6\x62\x91\x3e\xe0\xa4\x29\xb2\xb3\x56\xc7\xc8\xe8\x7f\x94\xba\xf5\xb9\xda\xd4\x07\xff\x4d\x2b\x36\xa1\x93\xd9\x90\xbf\xdd\x40\x14\xf0\x6b\x26\xb9\x8a\xfa\xd1\x28\x76\x84\x7b\x37\xa4\xbf\xc2\xec\x47\x44\x68\xde\xd7\x52\x6c\xca\x1c\x65\x83\x77\xd2\xf6\x06\x0f\x28\x90\xbd\x3d\x78\xe5\x5d\xa7\x57\x39\x48\xa6\x17\x62\xb9\x5c\xf2\xac\xf8\x21\x00\x1a\x85\xb1\x0d\xba\x58\xda\x2c\xa0\x79\xeb\x15\xb2\xe1\x03\xc0\x24\xba\x99\x71\xf3\x90\x15\x37\x3a\x6a\xdc\xc4\x5a\xae\x2e\x51\xf5\xe8\xf8\x65\x29\x70\x93\xcf\x89\x2a\xa7\x75\x8e\x6c\xe2\x21\x19\xdc\x42\xde\xc6\x85\x96\x76\xb1\x38\x3e\x3b\x39\x7d\x76\x72\x74\xf6\xe2\xe4\xf8\xf9\x82\x3b\x9e\x9a\x72\x4d\x8d\xf8\xc9\x12\x8b\xf2\x8b\xb2\x35\x5d\x55\xdd\xde\xca\xf0\x85\xbc\xa0\x70\x96\xda\xad\x31\x68\x8a\x64\x39\x05\x5e\x3d\x9c\x22\x7f\xe0\x53\xb1\x5b\xbb\x98\x50\xaa\x62\xca\x1e\xec\x6c\x2e\xc4\xeb\xfb\x0f\xe0\xbb\x32\x3f\xe5\x05\x9f\xd6\xba\x64\x99\x63\x25\xe7\x6f\x77\xa6\xcb\x5b\x99\x1e\x03\xa1\x1f\x42\xda\xf6\xb8\x80\x65\x4c\x81\xb2\x5f\x52\x61\xcc\xb1\x52\x0f\x3e\x0a\xf1\x61\x38\xfe\x47\x51\x8e\x2f\xe5\x01\xdd\x8c\xcf\xee\x76\x8d\x6e\xa2\x98\x4d\x73\xc9\xf3\x51\x63\xb0\x9a\xae\x33\xad\xe9\x0d\x32\xcc\x18\x71\x5c\x6b\x4b\x7f\x7c\x36\x8a\xed\xe3\x89\x39\x5c\x10\xda\x98\x7d\x41\x4d\x2c\xa4\x1c\x1f\xc3\x36\x2b\x6f\xa4\x5b\x35\xb3\x82\xd4\x4a\xe7\x9d\x6e\xa5\x99\xa4\x15\x5a\xee\x1b\xce\x83\x6e\x91\xe4\x57\x2a\x5e\xc8\x71\x22\x25\x22\xd2\xc6\x10\xdf\x75\x5f\xb2\xf9\x87\x6b\x87\x30\xe5\x5d\x1d\xac\x27\x27\xc4\xd5\xef\x0f\x74\xc0\x1d\x9d\x9c\xb1\x5b\x16\x57\xf2\x66\x9b\x30\xee\xb2\x90\x84\xbf\x53\x0c\x47\x7c\xff\x93\x36\x56\x18\x32\x62\x7d\xe2\xff\x85\xc8\x47\x2e\xc4\xce\xef\x26\x17\xaa\xf1\x8f\x5f\xff\x57\x00\x00\x00\xff\xff\x03\xb1\x61\x18\xba\x05\x00\x00")

func functionsMdBytes() ([]byte, error) {
	return bindataRead(
		_functionsMd,
		"functions.md",
	)
}

func functionsMd() (*asset, error) {
	bytes, err := functionsMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "functions.md", size: 1466, mode: os.FileMode(420), modTime: time.Unix(1454416841, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gettingStartedMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x57\xef\x72\xdb\xb8\x11\xff\x8e\xa7\xd8\xea\xda\x58\xea\x58\x94\x25\x27\x71\xab\xc6\x9d\x51\x1c\x39\xf1\xd4\xb1\x6f\x64\xe5\x6e\xae\x99\x4e\x08\x91\x90\x84\x98\x24\x58\x12\x94\xad\x78\xdc\xb9\x77\xe8\x1b\xf4\xd1\xee\x49\xfa\x5b\x80\xb4\x14\xe7\x2e\xe7\x74\xfa\x21\x9d\xa9\x3f\xd8\xe6\x62\xb1\xfb\xdb\x7f\x3f\x00\xe2\xc2\xaa\x9c\x66\x6b\x2a\xf9\xaf\xce\x4a\x5b\x54\x91\xd5\x26\x2b\x69\x6e\x0a\x5a\x28\x6b\x75\xb6\xc0\xaa\x2c\xac\x8a\xe9\x4a\xdb\x25\x8d\x72\x75\x4d\x32\x8b\x69\xf4\xfd\x05\x95\xaa\x58\xe9\x48\x95\x81\x10\xdf\x7c\x53\x4b\x6c\x95\x0b\xf1\x5c\xc1\x80\xa2\xb5\xa9\xd8\x4a\x63\x61\xd7\x09\xae\x74\x92\x50\xa6\x60\xd0\x1a\xaf\x4f\xa5\x49\x15\xd9\x25\x9c\x95\x64\x32\xfc\xa7\x9c\xb1\x08\x48\x4c\xa2\x60\xbd\x1f\xd0\x85\x5e\x64\xc0\x88\x3d\xbc\xfc\x96\xd7\x4f\x46\xaf\xe9\xc8\xeb\xfc\xad\xbd\xb4\x36\x2f\x87\xbd\x5e\xb3\x49\x5e\x95\x81\x4c\xe5\x07\x93\x05\x91\x49\x7b\x5a\xa6\xbd\x25\xdc\x7c\xc3\xbf\x3a\x62\x10\xd0\xa8\x2c\xd9\xa4\xa4\xb7\x15\xe2\x78\xb8\x01\xd6\x2e\x3b\x3e\x1b\x0c\xa5\x80\x32\x85\xc0\x73\x2a\xd3\x59\x2c\x8f\xab\x24\x19\x45\x48\x4a\x19\x8a\xfd\x80\x8e\x0a\x25\xad\x82\x97\x4c\x5d\xd1\xdb\xe2\x8b\xa0\xb2\x36\x3c\x71\x2d\x90\xb8\x82\xbc\x03\x9a\x57\x99\xaf\x52\x20\xce\x8c\x55\xc3\x4f\xe4\x14\x9b\x6c\xc7\xfa\x1c\xcb\x6c\x4d\xb9\x49\x74\xb4\xde\xa5\x59\x65\x49\xc6\x31\xd7\x94\x81\x7b\x31\x85\x47\x89\xa9\xe2\xef\xa5\x8d\x96\xa7\x66\x51\x6e\xe1\xf7\xa5\x92\x49\x62\xae\x28\x31\xd8\x24\x75\x82\xcd\x81\x78\x8c\xb8\xb0\xf7\xb2\x29\xd6\x84\x53\xc0\x4d\x11\x99\x7c\xbd\x91\x8c\x26\x67\x9b\xce\x88\x0a\x15\xab\xcc\x6a\x99\x94\x42\xfc\x60\xaa\x9d\xa6\x0b\x5c\x68\xf7\x34\xb8\x2f\xa8\xca\x03\x82\x22\x2d\xe5\x0a\xdd\x71\x65\xc8\xe4\x2e\xbc\x5d\xb7\xca\x5e\xe6\x86\xb1\x71\x3c\x2a\x5b\xe9\xc2\x64\x29\xf6\xd3\x4a\x16\x5a\xce\x90\xba\xa1\x10\x5d\x57\x99\x77\xa3\xa3\xa3\xf1\xc5\xc5\xbb\xbf\x8c\x7f\x08\x9d\x2b\x19\x45\xa6\x82\xaa\x74\x81\xd2\xa5\x5a\x37\x9a\x17\xe3\xa3\xc9\x78\xfa\xa9\x66\xa9\x00\xcf\x6e\x6b\x4e\xc6\x2f\x4f\xce\xcf\xbc\x56\xa1\x16\x40\x26\xc4\x79\x51\x23\xa7\x7f\xf4\xb8\xac\xbd\xed\x98\x56\x5a\x52\x08\x21\xf7\xf5\x5c\x2f\xaa\x42\x85\xbb\x2e\x6b\xe8\xa8\x87\x84\xc3\xf3\x12\x2d\x8d\x81\xf6\xd5\x52\x47\x4b\xca\x0b\x33\xd7\xc8\x33\xe4\x30\xb1\x89\xf6\xdb\xc9\xf9\xf1\xc9\xe9\x38\xbc\x53\xc8\x64\xda\x68\xfd\x32\x7a\x6a\x03\x5b\xb7\x8c\x2f\xbb\x0b\x83\x0e\x82\xbf\xcc\x58\xac\xc9\xf8\x2e\x18\x87\xbb\xe3\x4a\x7a\x66\x62\x15\xbc\x47\x29\x3f\x6a\x70\xc7\x0e\xf0\xfa\x5e\x45\x16\x78\xc2\x30\x2c\x97\x22\xbd\x8c\x75\x41\xe9\xba\x96\xd3\xa3\x47\x14\xc5\x9b\x6f\x61\x4d\xe5\x83\xe1\x2f\xd8\x44\x22\xfd\x96\x6e\xbe\xe9\xe9\x5e\x95\xe7\xaa\x88\x24\x22\xf0\xfa\x3f\xb3\xd2\xd3\x59\xac\xae\x19\x15\x1c\x0b\x31\x8a\xe3\x7b\x69\x45\x0a\xb6\xdd\x04\xf4\x52\xaf\x7c\xea\x1b\x6c\xd2\xe7\xca\xe7\x57\x97\x9c\xb1\xd8\x6f\x53\x73\x7d\xed\xcd\xdd\x8d\x99\xce\xea\xd1\x43\x19\x29\x56\x65\x54\x68\xd7\xa1\xbe\xaa\x8d\x1e\x56\xe6\xb2\x4a\xac\x27\xd5\x54\xa5\xa6\xc0\x2c\x5a\x9d\x2a\xc3\xf3\x58\x53\x29\xcf\x7a\x40\xd3\x9a\xf9\x1c\xa7\xa4\x55\x69\x69\xa6\x78\x2e\x24\xf3\x2f\xdc\xf1\xda\x5c\x17\xa5\xf5\x2e\xb6\xa6\xd8\x8d\x2a\x5a\x65\x0d\x77\xb9\xca\xdc\x90\xd7\xd3\xc9\x53\x06\x5e\x9d\xfb\x49\x6b\x60\xb5\xcb\x0e\x73\x20\x90\xa7\x3a\xd3\x69\x95\xf2\x32\x0f\x25\x52\x31\x43\xbf\xc1\xa4\xcc\xec\x86\xe1\x90\x04\x3f\x88\x10\x7c\x86\x32\x6a\x38\x1c\x2a\x28\x63\xe1\xe8\x82\xcb\xe1\xca\x7a\x23\x88\x5a\x9c\xe0\xd6\x90\x5a\x77\x0d\xd0\xda\x65\xf1\x56\xfe\x78\xb5\xee\x2f\x52\xd7\x32\xcd\x93\xbb\x02\x79\x5d\x9f\x44\xa8\xf5\x07\x7f\x70\x82\x3a\x9b\x90\x3c\x71\xdf\x8c\x98\xad\x3c\x9b\x9c\x9f\x8e\x99\x87\xe8\xd5\x78\x32\xfe\x73\x4b\xdc\xfa\xd6\xa8\x9b\xd6\x95\x93\xd3\xb9\x29\x16\x92\x1c\x06\xbd\xcf\x35\x57\x38\xac\x03\x12\x0d\x7f\x23\xd0\xf6\x8e\x3b\xe3\x38\xeb\xcd\xde\x9d\x8e\x50\xd7\xb9\x29\x6c\x19\x2c\x51\x2c\xc4\x70\xb8\x49\xbe\xda\xa5\xc8\x5e\x77\x88\x33\xf2\x91\x19\xc4\xc9\x89\x74\x24\xb0\xc2\xf8\x0f\xe9\x77\xef\x77\x76\x09\x47\x16\xf1\x8e\xa0\xac\x90\x68\x15\xb7\x6f\x50\xec\xa4\x02\xf9\xab\xc0\xfd\x13\x58\xf3\x86\xa1\x1e\x01\x6a\xbb\x43\xb7\x9d\x26\xd4\x17\x2a\x4f\xcc\x9a\x74\x3d\x8f\xe2\xb7\x24\x79\x48\x63\x27\x86\x51\xfa\xe9\xc7\x7f\xd5\x5f\xec\xf4\xfe\x4f\x83\xf8\x70\x33\x7f\xf5\x9e\xa6\x2d\x3f\xe8\x9c\xda\x83\x83\x27\xf4\xbc\xf3\xb0\x3d\xdb\x49\x7a\xa8\x1f\xde\x23\x13\x2d\xcb\x87\x61\xf3\xf1\x00\xdc\x03\xe2\x71\x13\x7f\x78\xd7\x8d\xef\x36\x0b\x2b\x1c\xf4\xac\xda\xff\x34\x4d\x9e\x0a\x3f\x0b\xc5\x65\x1f\x4c\xf9\xd2\x7c\x5d\x24\x99\x4a\x9d\x05\x0b\xf3\x7f\x8e\xfc\x9f\xe7\xc8\x97\xe6\x2b\xa2\xc7\xba\xad\xc0\x8e\x30\x81\xf6\xca\x65\x74\x29\x17\xa8\x10\xe4\x42\xe8\x94\x99\x90\xda\xec\x5d\x65\x91\xe1\xdc\xf7\x38\xde\x16\x4b\xf0\xf0\xe0\xbb\x7f\x4b\xf0\xc7\x02\x17\xeb\x6a\xe6\x6e\xc2\xcc\x54\xbd\x85\xe9\xf2\xdf\x96\xc0\xc5\xc3\xae\x73\x45\xaf\x91\x44\xb6\xec\x9f\x2b\x8e\x42\xbf\x63\x0a\x24\x6f\x86\x5c\x1e\x87\x2d\x47\x8b\xad\x10\x31\x09\xc6\xeb\x80\xb4\x3d\xe3\xb2\xbd\xe0\x95\x23\xe5\x63\x2c\xb5\x79\xbd\xed\xe8\x96\x5c\xcf\x4f\xe4\x55\xed\xc4\xd1\x34\xfd\xde\x6d\xc0\x53\xc3\xaa\x6b\xdb\xa1\x36\x9e\x21\xaa\x98\xcb\x48\xdd\xdc\x82\x9a\x8b\xc2\x14\xde\x2e\x71\x77\x51\x5a\x2e\x1a\x8c\xc2\x09\xf5\x9c\x95\x68\x78\xe8\xad\xbf\xc9\x52\x59\x94\x4b\x99\x78\x97\xbb\xf4\x08\x3b\x3a\x7f\x72\x3a\xbf\x39\xa4\x4c\x27\xb5\x31\xc2\xed\xcb\x56\x45\xc6\x22\xe7\xc7\x49\x6f\xbd\xd1\x7a\xe9\x51\xed\xe9\xa6\xce\x61\x30\xf5\xe7\x40\x1b\x36\x03\x97\x96\x0e\x30\xc2\x00\x36\xb9\x43\xc1\x57\xf8\xf3\xc7\x02\x6d\x38\xf0\xd7\x7e\xfe\x6b\x27\xc8\x7e\xd0\xa7\xd7\xcd\x11\xf2\xb5\x9c\x20\x5f\x48\xf5\x27\xd9\xca\x5c\x6e\x83\xc3\xfd\x78\x6a\x30\x34\x10\x33\xfb\xdf\x61\xae\x69\xc4\x0f\x97\x7b\x05\xb9\x27\xb0\xce\x72\xd0\xdd\x4f\x3f\xfe\xb3\x4e\x0d\x05\xbd\x42\xfd\xbd\x52\xa5\xe7\x62\xc7\x67\x78\xc0\x31\x93\x56\x69\xba\xae\x6f\x08\xf7\xb8\xc3\x09\x31\xdd\xbe\x87\xea\x31\xc0\xb0\x4f\xcd\x4c\xbb\x91\x3e\x46\x27\x29\xcb\x83\x77\xdb\x0c\xfc\x08\x60\x18\x65\x24\xfd\x94\xbb\x27\xa4\x22\x83\x13\x10\x53\x85\x61\xc5\x9b\x0b\x04\x2f\xf1\x56\x72\x64\xb7\x0d\x0a\xa4\x17\xba\xde\xf1\x61\x86\xfe\x9d\xf3\x2c\xfc\xb8\xb1\xea\x1c\x6c\x1a\xeb\xd9\x47\x56\xc4\x4d\x03\xb4\x35\x3d\x7f\x7e\x42\xd3\x57\x63\x3a\x1e\x4f\xf0\x14\x6b\xd5\x10\x4f\xbc\x81\xbb\x67\x77\xd8\x3d\x0d\x09\x0c\x1a\x76\xbb\x20\x51\xb0\xea\x3c\x91\xee\xf4\x5a\x69\xe5\x9f\xab\x60\x3c\x4e\xa7\x4c\x0c\x2a\xb2\x79\xae\xab\x32\x47\x61\xd4\xcf\xc2\xf3\xb6\x7e\x19\xe5\xc5\x74\x34\x99\xd2\xc4\x8b\x4e\xe2\x21\x3d\x8d\xe3\xf8\xf1\x5e\xff\x69\x77\x36\x8f\xe6\xdd\x7e\x5f\x3d\xe9\xce\xf6\xfa\xb3\xae\x3a\x78\x3a\xff\xe3\xfe\x20\x9e\x1f\xec\x29\xfa\xce\xdf\x23\xc0\xc7\x62\xc0\xba\x7b\xfd\xee\x60\x6f\x3a\xd8\x1f\x3e\x1e\x0c\xfb\x83\xe0\x60\xf0\xf4\xaf\xf4\x30\x4b\xf4\xe9\xf5\xf0\xe6\x56\x8c\xcf\x5e\x7c\x29\x26\x31\x19\x7f\x7b\xfe\x1f\x84\x42\x2f\xaa\xc2\xf5\xc8\x90\x06\xc1\x7e\x1f\x5c\x47\xcf\x71\xaa\xa2\x81\x37\x0b\xfd\xbd\x3d\x96\x13\x48\x90\xcf\x21\xba\xd0\x1f\x94\x3b\x8b\x30\xdf\xf4\x5a\x5e\x37\xf2\x37\xb8\x37\xc0\xcc\x01\x8b\xe9\xd7\x1b\x00\xf3\xf5\x42\x25\xca\xde\x9b\xaf\xa3\x44\xc9\x8c\x5f\xdc\x3c\x1c\x05\x2c\xd7\xe7\xef\xe6\x0a\x52\xd3\xcc\x7d\xa2\x83\x29\x2e\x38\x4e\xe1\x68\x6b\xea\x6b\x07\x0f\x61\x31\xb6\xf6\xef\x00\x00\x00\xff\xff\xba\xfb\x1d\xb6\x43\x13\x00\x00")

func gettingStartedMdBytes() ([]byte, error) {
	return bindataRead(
		_gettingStartedMd,
		"getting-started.md",
	)
}

func gettingStartedMd() (*asset, error) {
	bytes, err := gettingStartedMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "getting-started.md", size: 4931, mode: os.FileMode(420), modTime: time.Unix(1454192909, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ignoreMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x90\xc1\x4e\xf3\x30\x10\x84\xef\x7e\x8a\x91\x7a\xe8\xff\xa3\xd6\xb9\x97\x33\x12\x1c\x10\x48\x1c\x11\x6a\x4c\xbc\x49\x5c\x39\x5e\xcb\xde\x90\xf2\xf6\xd8\x4d\x11\x1c\xb8\x79\x3d\xbb\xdf\x8c\x46\x3d\x45\x71\x1c\x8c\x47\xab\x4d\xa4\xb3\x1b\x02\x27\x6a\xd1\x3b\x4f\x19\x93\xf9\xc4\x3b\x21\x7a\xd3\x91\x85\x0b\x90\xb1\x4c\x89\x4f\xd4\xc9\x36\x23\x31\xcb\x0e\x9c\xb0\x38\x19\x8b\x9a\x23\x75\xae\x77\x1d\xfa\x39\x74\x15\x0b\xeb\x52\x59\xe5\xe4\x28\x6b\x3c\x08\xe6\x5c\xa8\xaf\x79\x24\xef\x11\x8d\x08\xa5\x50\x4c\xa4\x2b\xd7\xc3\xdb\xbf\x51\x24\xe6\x43\xd3\x2c\xcb\xa2\x87\x30\x6b\x4e\x43\x93\xb9\x97\xc5\x24\x6a\x7a\x17\xec\x2c\xce\xe7\x66\x32\x61\x36\xbe\x19\x65\xf2\xc7\xc0\x76\x95\x8e\x75\x6c\x5e\x2a\x79\xff\xbc\x92\xf7\x8f\x57\xb2\xae\xda\xff\x5b\x98\x1f\xd7\x0c\x4b\xe5\x8c\xec\x0e\x05\x8e\x44\xde\x88\xfb\x20\x08\xff\x19\x1e\x26\x58\x04\x96\xdf\x05\xc0\x49\x26\xdf\x6b\xa5\x36\x1b\xdc\x9d\xcd\x14\x3d\x29\x75\x4f\x89\xb6\x75\x1f\xb4\x7e\xe1\x52\x69\x49\x81\x81\x91\x79\x4e\x1d\x5d\xdb\xad\xcc\xca\xfb\x36\xd4\xa7\x5c\x5c\x57\xea\x41\xa9\xb6\x6d\xd5\x8d\x1e\xf8\xf2\xf8\x0a\x00\x00\xff\xff\xb2\x04\x49\x30\xa8\x01\x00\x00")

func ignoreMdBytes() ([]byte, error) {
	return bindataRead(
		_ignoreMd,
		"ignore.md",
	)
}

func ignoreMd() (*asset, error) {
	bytes, err := ignoreMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ignore.md", size: 424, mode: os.FileMode(420), modTime: time.Unix(1454373240, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _installationMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x50\xcd\x6a\xf3\x30\x10\xbc\xeb\x29\x86\x8f\x80\x13\xbe\x38\xa2\xa5\xf4\x10\xe8\xad\x97\x42\xa1\x87\x52\x28\x84\x10\x2b\xd6\xfa\x07\x24\xcb\x68\x65\x92\x42\x1f\xbe\x1b\xdb\x85\x1c\x72\xe8\x45\x68\x67\x87\xd9\x99\x51\xcf\xe1\xd4\xb9\x60\x2c\x76\xc7\xb6\x33\xb1\x25\xde\x2f\x9b\x94\x7a\xde\x6a\x5d\xb7\xa9\x19\x8e\x9b\x32\x78\x6d\x7a\x3a\x4f\x4f\x24\x47\x86\x89\x57\xa8\x42\xc4\x57\x18\x22\x7a\x67\x92\x0c\x7e\x0d\x41\xda\xea\x02\x66\x91\x10\x3a\xbc\xbd\x7f\xa2\x8e\xe6\x88\xd4\x10\x84\x45\x9c\x30\x0b\xe0\x24\xea\x5b\xa5\x8a\xa2\xe0\x46\x4d\xbb\xa7\xc5\xb2\x1c\xa2\x43\xce\xf8\xf5\x60\xfa\x76\x73\xe5\x23\x52\x1f\xf8\xca\x4d\x32\x35\xe3\x5b\x6e\x50\x8f\xce\x78\x92\x7f\x43\x92\x26\xef\x70\x27\x7f\x26\x8b\x8c\xf5\x6e\xfd\x0f\x7b\xc9\x93\x09\x54\x0e\x09\xb9\xa0\xdb\x0c\x79\x85\xfb\x95\x9a\x2f\xbe\xe2\x4f\xb1\xb5\x9d\x0b\xd3\x8b\xc9\xf3\xb8\x3e\x58\x13\x4f\x6d\x77\x30\xde\x3e\x3e\x20\x0f\xd0\x03\x47\xed\x42\x69\x9c\x96\x5e\x47\x8e\x2a\x1b\x1f\x2c\xfe\x9f\xb1\x38\x5c\x52\x2b\xf5\xd2\x71\x32\xce\xa1\x8a\xc1\xc3\x1b\x4e\x14\xc7\x56\x50\xd4\x21\xaf\x29\x15\x53\x3d\xaa\x0e\x90\x09\x37\x7d\x95\xde\x4e\xea\xa3\xe2\x47\x2f\x6d\x5b\x42\x0a\x37\x1a\x9f\xd5\x2e\x6c\x0c\x13\x71\x04\x7e\x02\x00\x00\xff\xff\x55\x03\x1f\x64\x04\x02\x00\x00")

func installationMdBytes() ([]byte, error) {
	return bindataRead(
		_installationMd,
		"installation.md",
	)
}

func installationMd() (*asset, error) {
	bytes, err := installationMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "installation.md", size: 516, mode: os.FileMode(420), modTime: time.Unix(1454192915, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _invokeMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x55\x4d\x6f\xa3\x48\x10\x3d\x9b\x5f\x51\xf2\x8c\x34\x97\x01\xdb\x60\xfc\xa5\xbd\xf8\xa3\x47\xf1\xac\x3f\x56\x98\x99\x4b\x14\x29\x6d\x28\x0c\x09\xd0\x2c\xdd\x24\xf1\x66\xfd\xdf\xb7\x1b\x5b\x1b\xd8\x8d\xe5\x44\x93\xa3\xab\xba\x5e\xbd\x7a\xaf\x28\x6b\xe3\x0c\x9f\x80\xc6\x31\x7b\xe4\xb0\x67\x05\x08\x06\x51\xfa\xc0\xee\x11\x82\x22\xf5\x44\xc4\x52\x0e\x41\xce\x12\x10\x21\x82\xc7\x92\x84\xa6\xbe\x1e\x47\x29\x7e\x05\x96\xa9\xb4\xac\xdd\x43\x46\x39\x8f\xd2\x1d\x50\xf8\xbe\x59\xaf\x00\x1f\x30\x15\xc0\x72\xe0\x22\x47\x9a\x28\xd0\x8d\x3b\x9b\xaf\x0c\x4d\xfb\xf4\x09\xc8\x13\x4d\xb2\x18\xb9\xa6\xcd\x8f\x9d\x1e\x23\x11\xb2\x42\x00\x4d\x8f\x95\x23\x4d\xbb\xbd\xbd\xe5\xa1\xf6\x19\xa8\xa2\x77\x22\xe4\xb1\x38\x46\x4f\xe8\x5c\x50\xc1\xd5\x8b\x1a\x40\xa5\x73\xa5\x1e\xbd\x90\x81\x9e\xc2\x97\x67\x68\x3e\xd0\xb8\xc0\xe6\x08\x9a\x2e\xdb\x46\xe5\x3c\x01\xe6\x39\x8a\x26\x1c\xbe\xc0\xdf\xb5\x56\x45\x96\x61\xee\x51\x8e\x5a\xad\x6e\x3d\x99\x83\x7b\x45\xe0\x1b\x71\x1c\xe2\xca\xba\x1a\x8b\x52\x26\x0a\x41\x14\xe3\x99\x09\xfe\x85\x85\xdf\x8e\x4c\x8d\x3b\xce\xd2\x1a\x08\x3d\x0e\xc3\x85\x1f\xa5\xe0\xc5\x51\xb6\x65\x34\xf7\xc1\xa7\x82\x56\x40\xb3\xad\x54\x5c\xe0\x7f\x58\xd3\x42\x84\x75\x46\x27\x0b\xe5\x03\x09\xec\x47\x81\x1c\x58\x39\x93\xe5\xec\x4e\x2a\x79\x1e\x50\x9f\x4a\x4b\x45\xd8\x12\xac\x75\x7a\xfb\xff\x1e\x9b\xd2\x5b\xe5\xfa\x31\xc5\x21\xa1\xf7\xea\x67\x52\xc4\x22\x92\x06\x43\x8e\x7f\x16\xc8\x05\xff\x0a\x3b\x4c\x31\xa7\x42\x65\xd5\x24\xc7\x19\xaf\xb3\x90\xa5\xfb\x9b\xeb\xce\xcd\x19\xc3\x0a\x8e\xb9\xd2\xfd\xf9\x39\xa5\x09\x1e\x0e\x27\xa3\xca\xb2\xf3\x86\x9d\xca\x9a\x33\xb2\x58\x12\x07\x96\xe3\xc5\x7a\x45\x9a\x87\x97\xc4\xf7\x29\x38\x84\xfc\x24\x9b\x6a\x70\xf1\x63\x35\x86\x6f\x0b\xe2\x4e\xaf\x88\x23\x13\x86\x61\xbc\x77\x4c\xb9\xbf\x3e\xc8\x3d\xce\x0a\x51\x4e\xaa\x36\x2c\x47\x9e\xc9\x4f\x08\x21\x66\x3b\xfe\x81\x63\x82\xae\x2b\x44\x6d\xe3\x8e\x1d\x17\x9c\x23\x83\xb9\x3f\x02\xab\x8d\x03\xb3\x47\xbb\x3a\xed\x6d\x6d\xbd\xd3\x41\x5b\x1f\x9a\x76\x5f\xf7\x3a\x76\xd7\xc2\xe1\xb6\x6f\x51\x0f\x7e\x62\xce\xe5\x5a\x8c\xe0\xf3\x62\xec\x92\x8d\xab\x91\xd5\xec\xbd\x20\x9a\x43\xfe\x58\xbf\xbf\x77\x63\x56\xa8\x45\x50\xcd\xdb\x46\xdf\x82\x84\x37\x26\x91\xfc\xae\x7d\x78\x49\x74\xda\x6d\x19\x87\xc6\x12\x13\x96\xef\x61\x13\xfd\x85\x32\x68\x0e\x60\x39\x69\x2c\xe9\x13\x9c\xe2\x3f\x38\xfa\xea\xb1\x0c\xbf\xf8\x38\x5d\x2f\x5c\x79\x07\x9c\xab\xf5\xac\x34\xf8\x15\x81\x82\xf6\xd6\xb4\xbc\x0a\x49\xda\xb6\x24\x67\xbf\x67\xf9\xdd\x81\x47\x6d\x8b\xbe\x41\xa0\xcb\x20\xaf\x0a\x74\xb9\xac\x22\x90\x69\xd8\xbd\x5f\x17\x68\x58\xd7\x67\xec\xac\x17\x63\x98\x90\xe9\xef\x67\xd4\xb1\x3b\xd8\xeb\x57\x18\x0e\x86\xe6\x50\x0f\x6c\xcb\xea\x0f\x30\x68\x07\xdd\xfe\x5b\xd4\xb9\x08\xf2\xba\x3a\x17\xcb\x6a\xeb\x63\x9a\x1f\xad\x4e\x79\xe1\x4f\xd7\xbd\x72\x03\xd4\x89\x82\x50\x88\x8c\x8f\x5a\xad\x9d\xbc\x5d\xc5\xd6\x90\xff\x85\xad\x7d\x84\xb1\xcf\x5b\xe5\x97\xaa\xfd\x13\x00\x00\xff\xff\x92\xe5\xb3\xd7\x4b\x07\x00\x00")

func invokeMdBytes() ([]byte, error) {
	return bindataRead(
		_invokeMd,
		"invoke.md",
	)
}

func invokeMd() (*asset, error) {
	bytes, err := invokeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "invoke.md", size: 1867, mode: os.FileMode(420), modTime: time.Unix(1454192919, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _linksMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x90\x31\x4f\xf3\x30\x10\x86\xf7\xfc\x0a\x7f\xdb\xe7\x21\xf1\xce\xc8\x02\x13\x42\x2a\x5b\x85\xd0\x39\x79\x71\x0d\x71\xce\x3a\x9f\xdb\xc2\xaf\x27\x69\xa9\x60\x49\xc5\x62\xc9\xf2\xfb\xbc\xcf\xf9\x9a\xa6\x35\xdb\x47\xe1\x37\xf4\x6a\x70\xa4\x94\x47\x94\xe7\xff\x3b\xd5\x5c\x6e\x9c\x0b\x51\x77\xd5\x77\x3d\x27\x47\x19\xc7\xf3\xa1\x02\xb8\x44\x45\x21\xee\xe5\xc2\x58\x73\x98\xb3\xa6\x70\x95\x1e\x4b\xe9\x5d\xd4\xfb\xea\xaf\x57\x59\x23\xc8\x5c\xa2\xb2\x7c\x2c\xcc\x2d\xc7\x11\x92\x47\x52\xac\x83\xfe\x27\x64\x2f\x23\x9f\xe5\x4f\x10\xa1\x57\x96\x74\xf2\xf3\x7a\x45\xe0\xf6\x5b\x5f\x27\x8d\x09\x26\x53\xff\x4e\xe1\x34\xf7\x03\x0f\x57\xe4\xd3\xfc\xba\xce\xfe\xdb\x6e\xc6\xf9\x66\x36\x4a\x5a\x7f\xad\x71\x01\xda\x01\xfb\x8e\x3e\xab\xe0\x00\x3f\x7f\x19\xa5\x9b\xa0\xce\xd3\x10\xd0\x95\x7d\xb0\x7f\x8a\xdb\xe6\x2b\x00\x00\xff\xff\x9d\xd6\xf6\xa1\xb2\x01\x00\x00")

func linksMdBytes() ([]byte, error) {
	return bindataRead(
		_linksMd,
		"links.md",
	)
}

func linksMd() (*asset, error) {
	bytes, err := linksMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "links.md", size: 434, mode: os.FileMode(420), modTime: time.Unix(1454261360, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _listMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x92\x4b\x6b\xe3\x30\x10\xc7\xef\xfa\x14\x83\xb3\xc7\x75\x36\xb6\x37\xec\x46\xb0\x87\x3d\xf4\xd6\x63\xef\xc9\x24\x1e\xc7\x2a\x7a\x98\x91\x94\xc7\xb7\xaf\x64\xc7\xa5\x0d\x85\x42\xa1\x17\x81\xe6\xf1\x9f\xdf\x3c\xc4\xff\x81\x2e\xe0\xe3\x30\x38\x0e\x1e\xb4\xf2\x41\xd9\x23\xb8\x0e\xba\x68\x0f\x41\x39\xeb\x41\x59\x38\x21\x2b\x17\x3d\xb8\x18\x86\x18\xfc\x4f\x38\x44\x66\xb2\x41\x5f\xa1\x8f\x06\x6d\xd9\xb1\x22\xdb\xa6\x6f\x20\x36\xca\xa2\xbe\x85\x02\xda\x16\x8a\xd0\x25\x01\x5f\xcc\x75\xa0\x73\x9c\x54\x03\x1d\x19\x73\x09\x38\xab\xd0\xc3\x13\x31\x63\xf2\x98\xa5\x10\x8b\x05\x3c\x5c\xd0\x0c\x9a\xbc\x10\x8f\x09\x0a\x50\xeb\x37\x48\x59\x35\xf4\xa4\x18\x0e\xce\x76\xea\x18\x27\x21\x29\xc4\x6e\xb7\xf3\xbd\xf8\x01\x98\xfb\xca\xed\x08\x01\xb0\x47\x4e\x2f\x00\x47\x1b\x94\x21\x09\xd6\xb5\xf4\xec\x47\x9b\x21\xe3\xf8\x2a\xa1\xaa\xff\x9a\x76\xb4\xe4\x90\x44\x2f\x61\x3d\x45\xb0\xd3\x29\x05\xd9\x4a\x3c\x7b\xa9\xd0\x48\x59\x6f\x9a\xf5\xaa\xa9\x36\x7f\x9a\xfa\xb7\xcc\xfe\x5f\x1a\xcd\xbe\xc5\x31\xbe\x4f\x74\x9a\x58\xa6\x16\x5b\xba\x2c\xa7\xef\xe8\xb9\x4d\x0d\x4e\xc4\x3e\xe3\x42\x93\xe9\x3a\xe7\x3e\xa5\x5b\x57\xf5\x3d\x5d\xb5\xfa\x76\xbc\xaa\xce\xf3\x14\xe2\x75\x35\xf9\x10\xe6\x2b\xf8\x68\xd8\x50\x96\xd3\xae\x45\x36\x6d\xe7\x85\x6d\xd3\x02\xfe\x15\x33\xe2\xc4\x22\xa3\x2f\xcf\xe4\x43\x59\xbf\xc7\x9d\x73\x64\xa0\xf1\x16\x73\x6e\x71\x27\x97\x26\xf6\x65\xb9\x94\x5b\x8c\x5d\xbd\x04\x00\x00\xff\xff\x28\x26\xa4\x73\xfb\x02\x00\x00")

func listMdBytes() ([]byte, error) {
	return bindataRead(
		_listMd,
		"list.md",
	)
}

func listMd() (*asset, error) {
	bytes, err := listMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "list.md", size: 763, mode: os.FileMode(420), modTime: time.Unix(1454192922, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _logsMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x52\x3d\x8f\xd4\x30\x10\xed\xf3\x2b\x9e\x72\x14\x20\xdd\xae\x44\x41\x43\x07\x88\xab\x90\xe8\x40\x74\x99\x4b\x26\x1b\x4b\x8e\x1d\xd9\x63\xf6\xf2\xef\x99\x49\x76\x7d\x1c\x2c\x74\xb1\x3d\xef\xcd\xfb\x48\xf3\x61\xe1\x27\xb8\x0c\x17\x84\x4f\x89\x84\x07\x9c\x9d\x4c\xf8\xe4\x63\x19\xbe\x93\xf4\x13\xbe\xc4\x53\x86\x44\xfc\x74\x7c\x86\x4c\x8c\x58\x64\x29\x82\x38\x62\x2c\xa1\x17\x17\x43\x3e\xe2\xe3\x8a\x81\x47\x2a\x5e\xb6\x19\x6f\xa0\x31\x26\x90\xf7\xcf\x63\xca\xad\xc7\x47\xc6\xe0\xf2\xe2\x69\xe5\xe1\x1e\x25\x78\xce\x19\x31\x28\x71\xc2\x1c\x13\xd7\x79\x04\x9a\x39\x83\xf4\x6a\xa1\x9c\x55\x9b\xca\xe8\xc8\x24\x1b\x7f\x77\xc4\x8f\x58\x30\xd3\xaa\x5b\x72\x44\x5e\xb8\x77\xe3\xba\xed\x1f\x8a\x9a\x31\x0a\x55\x29\x6e\x66\x35\x88\xf3\xe4\xd4\x8e\xbd\x4e\x2e\x4b\x4c\xab\x19\xaf\x4a\xf0\xfa\xa2\x7f\x33\xfb\x0e\xb3\x0b\x45\x38\xbf\xb9\x07\xa9\x6e\x56\xdd\x64\x8e\xbc\x8f\x67\x17\x4e\xa0\x30\x60\x74\x5e\x38\xd9\x29\x71\x36\xe4\xb1\x69\xee\xee\xf0\xf9\x89\xe6\x45\x4d\x35\xcd\x37\x8b\xec\xf7\x04\xf6\x5c\x2c\x61\xd5\xb3\xe5\x44\x59\x9e\x97\xbd\x6f\x9a\xae\xeb\xf2\xd4\xbc\x42\x75\x69\x37\x17\xa6\x1a\x6a\x5b\x96\x85\x53\x4f\x99\xdb\x4d\x48\xab\xa2\xae\xe7\x1a\xf6\x2d\x32\x54\x20\x2a\x64\x5f\xf0\xb0\x39\xb3\x0a\x84\x9c\xbf\x76\x78\xed\xfa\xaf\x26\x6f\x92\x1f\xc6\x17\x5c\x74\x69\xc4\xf5\x15\xf7\x0f\x98\xf2\xc7\x17\xd0\x3d\x59\x2d\xe5\x71\xd5\xea\x45\xbf\x03\x5a\x4e\x29\xa6\xf6\x3f\x14\x38\x1c\x76\x20\xb6\xd1\x9b\x13\x0f\x97\xb7\x6d\xdb\xd7\xdd\x5d\x2d\x62\x8a\x25\xd9\x1f\x63\x88\xdb\x7b\x0e\xf5\xc7\x7a\xfb\xc7\xcb\x60\x37\xc6\xfa\x2b\x00\x00\xff\xff\x12\xa6\x57\x93\x54\x03\x00\x00")

func logsMdBytes() ([]byte, error) {
	return bindataRead(
		_logsMd,
		"logs.md",
	)
}

func logsMd() (*asset, error) {
	bytes, err := logsMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "logs.md", size: 852, mode: os.FileMode(420), modTime: time.Unix(1454192925, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _projectsMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x54\x4f\x4f\xdc\x3e\x10\xbd\xfb\x53\x8c\xc2\xe1\x07\xd2\xfe\x42\x81\xa2\x8a\xdc\xb6\x45\xa8\x95\x5a\x54\xa9\x48\x3d\x12\x6f\x32\x61\x8d\x1c\x3b\xf5\x1f\x96\x15\xe2\xbb\x77\xc6\x89\xd9\x08\x6d\xd5\x4b\xb9\xec\x26\xe3\xf1\xbc\x37\x6f\xde\x44\x2c\xa1\x18\x9c\xbd\xc7\x26\x14\xa0\x3c\x84\x35\x82\x96\xee\x0e\x7d\x80\x68\x54\x00\xdb\x81\x5c\xf9\xe0\x64\x13\x94\x35\xa0\x0c\x2c\x07\x7c\x2c\x61\x09\xd3\x35\x68\xac\xf1\xca\x07\xcf\xa9\x8d\xd5\x1a\xc7\x4c\x7a\x5b\xfe\xfc\x01\x5f\x65\xbf\x6a\x25\x74\xd1\xa4\xb0\x5f\x80\x34\xad\x90\x5a\x43\x2d\xa9\xd0\xe1\xc9\x51\x0d\x76\x40\x27\xd3\x29\xac\xe5\x03\x82\x6c\x1a\xf4\xc4\xc5\x32\x1d\x8f\xbb\xcb\xa5\x10\x07\x07\xf0\xc9\x9a\x4e\xdd\xc5\xf1\x8a\x10\xdf\x47\x1e\x1e\xfa\x48\xa4\xc7\x02\x99\x5c\x79\xef\x89\x4a\xa7\x34\x32\x73\x6e\xce\x59\x1b\xa0\x55\x8e\x0e\xad\xdb\x96\x70\xb3\xa6\xae\x53\x02\xf5\x11\xa4\x22\x0e\x2d\xd2\xbf\xf6\xd4\xb7\x8d\x01\xb6\x36\xba\x5c\x8e\xc8\x7b\xd8\x20\x91\x97\x5e\xb4\xd8\xc9\xa8\x09\xb7\xb3\x6e\xde\x9f\xea\xa8\x82\x27\x84\xb6\x84\xcf\xe8\xf0\x3f\xaa\x64\x00\x1f\x65\x3f\x10\x0a\xeb\xb9\x87\x5d\x8b\x0d\xc9\xae\xcc\x1d\x9d\x4e\x85\x93\x7c\x5f\x96\xdf\xa0\x70\x56\x63\xc1\xba\x41\xd1\x63\x4f\xb4\x8b\x84\xc9\x22\xce\xa5\xa9\xeb\x9a\x0b\x8a\x27\x01\x50\x18\xd9\x63\x51\xd1\xbf\x6d\xb1\x58\x70\x84\x48\x35\x4e\x0d\x9c\xcd\x07\xd7\x74\x40\x04\x5e\x88\x65\x17\xa4\xdc\x84\x48\x49\xd2\x99\x4a\x6e\x7c\xa5\x64\x5f\x55\xa7\x17\x67\xe7\xef\xce\x4e\x2e\x3e\x9c\x9d\xbe\xaf\x38\xe3\x58\xa7\xe1\x8e\x57\x26\x66\x15\x9c\x9f\x9c\x8a\x67\x26\x93\x86\x75\xa5\x50\xb7\x9e\x1f\x0f\x80\x39\x09\x71\x4d\xbf\x2c\x03\x4f\x23\x0b\x91\xc7\x40\xb9\xec\xc2\xe8\xb1\xcd\x03\xcb\x6a\x3c\x48\x1d\x31\xf5\x9d\x7a\xbb\x41\x62\x2d\x03\xe9\x42\x36\x19\x1c\x3e\xa0\x09\xc9\x7e\xca\x27\x23\xad\x30\x6c\x10\x0d\x99\x42\x07\x35\xeb\x8f\x85\xfa\x1f\xc2\x76\xc0\x0a\x6a\xf2\x35\x49\x5e\x53\xc0\xe1\xaf\xc8\x23\x1b\x89\xce\xa4\x12\xe2\x72\xf7\xf2\x17\xda\xca\x10\xbd\x3e\xd9\x52\xea\x7d\x38\xa9\xb8\x8b\x26\x28\x16\xe2\x72\xea\x6c\x0a\x70\xf1\x3c\xce\x43\x7f\x44\xeb\xa7\x79\x0b\xfc\x80\x8d\x22\x88\x2c\x88\xda\x99\x6d\xf4\x4f\x33\x5f\x87\x3f\xa2\x8e\xe3\xd9\x81\x8e\xef\xec\x21\xdb\xc8\xdc\xdb\x3f\x85\x57\x26\x4c\xd8\xdc\x1d\xad\xd2\x0e\x7c\x0a\xbc\x21\x24\xdb\x73\xa6\xb0\xd5\x6f\x2c\xef\xdc\x92\x42\xe4\xa7\xd1\xc8\x64\xd0\xc6\xf6\x43\xa4\x77\x36\x4f\x2e\x9f\xee\xf8\x12\x3e\x6e\x5f\x3c\xce\xc7\x21\xdf\xad\x9f\x9e\xca\xe9\xdb\x56\xf2\xce\x3c\x3f\xdf\x52\xe4\x2a\x93\x1b\x43\x75\x5e\x97\x45\x5a\x8d\x57\xcb\x4c\x0b\x3c\xa8\xf1\xcb\x51\x97\xc7\x2f\xdf\x8a\x63\xba\xe0\x7c\x4d\x3b\x42\xbc\xd0\xa7\xac\xdb\x14\x2b\xc8\xd2\x96\x3e\x8f\x5e\xae\x52\x15\xec\xd4\x23\x35\xb9\x60\x88\x44\xe8\x35\xfc\x02\x36\x6b\xd5\xac\x61\x63\x23\xed\x80\x43\xcf\x6d\x90\x92\xc5\x54\x6e\x8f\x5e\xbf\x03\x00\x00\xff\xff\x8f\xbe\xf3\x28\x73\x06\x00\x00")

func projectsMdBytes() ([]byte, error) {
	return bindataRead(
		_projectsMd,
		"projects.md",
	)
}

func projectsMd() (*asset, error) {
	bytes, err := projectsMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "projects.md", size: 1651, mode: os.FileMode(420), modTime: time.Unix(1454416891, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rollbackMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\x31\x4e\x03\x31\x10\x45\xfb\x39\xc5\x97\x42\xc9\x22\x05\x89\x26\x1d\x05\x3d\xe2\x02\xac\x71\x66\x59\x0b\xe3\xb1\xc6\x76\x36\x69\x38\x3b\xb6\x96\x6c\x40\x21\x29\xad\x37\xf3\xfe\xf7\xd0\x63\xe4\x3d\x8c\xf7\x32\x25\x1c\xa4\x20\x0b\x54\xbc\xc7\x9b\xb1\x1f\xed\x91\x47\x46\x54\xde\x39\x29\xe9\x16\xa2\x48\x91\xad\x1b\x1c\x6f\xb1\x63\x4d\x4e\x02\x64\x80\xc1\x50\x82\xcd\xf5\x75\x47\xb4\x5a\xe1\x69\x6f\x3e\xa3\xe7\x44\xf4\x52\x65\xff\xb9\xa0\xec\xd9\x24\xde\x10\xf5\x7d\x9f\x46\xba\x81\x69\x55\xf4\x38\x3f\x88\x34\xf2\xd7\xf0\x13\x6e\x8f\xd9\xd7\xb6\xf1\x30\xef\x3f\xb7\x44\x9e\x4e\x6c\x72\x79\x44\xdf\x75\x5b\x3d\x74\x5a\x42\x7f\x51\xb2\x8c\xa0\x9e\x87\xd5\xd6\xba\x44\x5f\xf5\x5a\xce\x24\x64\x4e\xd9\x85\xf7\xd7\x13\x9a\xc1\x06\xb6\xa8\x72\xc8\xb4\x94\xc4\x3d\x5d\x71\x97\x18\x67\x01\xd6\xe7\xf6\x05\xfe\xb2\xad\xcf\x92\xda\x3f\xbf\x03\x00\x00\xff\xff\x78\xc2\x4d\x71\xca\x01\x00\x00")

func rollbackMdBytes() ([]byte, error) {
	return bindataRead(
		_rollbackMd,
		"rollback.md",
	)
}

func rollbackMd() (*asset, error) {
	bytes, err := rollbackMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rollback.md", size: 458, mode: os.FileMode(420), modTime: time.Unix(1454192932, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _shimMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8f\x41\x4e\x04\x21\x10\x45\xf7\x73\x8a\x7f\x80\xb1\xef\xa0\xd1\x85\x89\x19\x93\xb1\x3d\x40\x0d\x54\x03\x06\x28\x42\x41\xdb\xde\x5e\x5a\xd3\x9b\xd9\x56\xbd\xff\xf3\xdf\xe9\xb1\xf0\x86\xae\xac\x20\x5c\xc4\xf2\xf4\xa5\x50\x1f\x12\x16\xa9\xc8\x92\x1f\x32\xb5\xb0\x32\x22\x65\xd7\xc9\x31\xb4\x97\x22\xb5\x4d\x98\x7d\x50\x84\x3d\xb7\x72\xfd\x81\x26\x8a\x11\xa5\x8a\xab\x94\xf0\xed\x83\xf1\xe0\x8d\x4d\x6f\xa3\x3b\xe4\x81\x19\x1f\xa2\xdd\x09\xc3\xaa\x67\x50\xb6\x58\x98\xad\xe2\x8d\xd2\xcd\xd2\x80\x4a\x6f\x68\xbe\x4a\x77\x1e\x1f\xf3\xf3\xeb\xe5\x9f\x3a\x4a\xa5\xb7\x3b\xe2\xfd\x73\x9e\xf0\xc4\x86\x86\x01\x64\x19\xaf\x31\x68\xdc\x5f\xae\x57\xa4\xae\x0d\x37\xde\xe5\xec\x9f\x4d\x14\xe7\x42\x76\xe7\xa1\xd5\x8e\xf0\xe9\x37\x00\x00\xff\xff\x5a\x55\x30\x0a\x01\x01\x00\x00")

func shimMdBytes() ([]byte, error) {
	return bindataRead(
		_shimMd,
		"shim.md",
	)
}

func shimMd() (*asset, error) {
	bytes, err := shimMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "shim.md", size: 257, mode: os.FileMode(420), modTime: time.Unix(1454192938, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _upgradeMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe2\x0a\xc9\x48\x55\x48\x48\x2c\x48\xad\x50\x28\x2d\x48\x2f\x4a\x4c\x49\x4d\x50\x48\xce\xcf\xcd\x4d\xcc\x4b\x51\x28\xcf\xcc\xc9\x01\x8a\xa6\x24\x96\xa4\x2a\x54\xe6\x97\x16\x29\x64\xe6\x15\x97\x24\xe6\xe4\x24\x96\x64\xe6\xe7\x29\xe4\xa7\x41\xf4\x69\x18\x6a\x26\x28\x58\x69\xea\x71\x01\x02\x00\x00\xff\xff\x97\x4e\x2a\xdd\x4b\x00\x00\x00")

func upgradeMdBytes() ([]byte, error) {
	return bindataRead(
		_upgradeMd,
		"upgrade.md",
	)
}

func upgradeMd() (*asset, error) {
	bytes, err := upgradeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "upgrade.md", size: 75, mode: os.FileMode(420), modTime: time.Unix(1454192943, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"aws-credentials.md": awsCredentialsMd,
	"bindata.go": bindataGo,
	"build.md": buildMd,
	"delete.md": deleteMd,
	"deploy.md": deployMd,
	"docs.go": docsGo,
	"docs.md": docsMd,
	"dryrun.md": dryrunMd,
	"env.md": envMd,
	"faq.md": faqMd,
	"functions.md": functionsMd,
	"getting-started.md": gettingStartedMd,
	"ignore.md": ignoreMd,
	"installation.md": installationMd,
	"invoke.md": invokeMd,
	"links.md": linksMd,
	"list.md": listMd,
	"logs.md": logsMd,
	"projects.md": projectsMd,
	"rollback.md": rollbackMd,
	"shim.md": shimMd,
	"upgrade.md": upgradeMd,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"aws-credentials.md": &bintree{awsCredentialsMd, map[string]*bintree{}},
	"bindata.go": &bintree{bindataGo, map[string]*bintree{}},
	"build.md": &bintree{buildMd, map[string]*bintree{}},
	"delete.md": &bintree{deleteMd, map[string]*bintree{}},
	"deploy.md": &bintree{deployMd, map[string]*bintree{}},
	"docs.go": &bintree{docsGo, map[string]*bintree{}},
	"docs.md": &bintree{docsMd, map[string]*bintree{}},
	"dryrun.md": &bintree{dryrunMd, map[string]*bintree{}},
	"env.md": &bintree{envMd, map[string]*bintree{}},
	"faq.md": &bintree{faqMd, map[string]*bintree{}},
	"functions.md": &bintree{functionsMd, map[string]*bintree{}},
	"getting-started.md": &bintree{gettingStartedMd, map[string]*bintree{}},
	"ignore.md": &bintree{ignoreMd, map[string]*bintree{}},
	"installation.md": &bintree{installationMd, map[string]*bintree{}},
	"invoke.md": &bintree{invokeMd, map[string]*bintree{}},
	"links.md": &bintree{linksMd, map[string]*bintree{}},
	"list.md": &bintree{listMd, map[string]*bintree{}},
	"logs.md": &bintree{logsMd, map[string]*bintree{}},
	"projects.md": &bintree{projectsMd, map[string]*bintree{}},
	"rollback.md": &bintree{rollbackMd, map[string]*bintree{}},
	"shim.md": &bintree{shimMd, map[string]*bintree{}},
	"upgrade.md": &bintree{upgradeMd, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

